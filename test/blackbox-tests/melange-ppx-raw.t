Test to showcase fatal error when parsing a `raw` attribute that includes a function callback

  $ . ./setup.sh

Simple %raw expressions work

  $ cat > main.ml <<EOF
  > let unsafeDeleteKey = [%raw "2"]
  > EOF
  $ melc -ppx melppx main.ml > main.js

Adding a callback breaks

  $ cat > main.ml <<EOF
  > let unsafeDeleteKey = [%raw fun _foo -> "2"]
  > EOF
  $ melc -ppx melppx main.ml
  File "main.ml", line 1, characters 22-44:
  1 | let unsafeDeleteKey = [%raw fun _foo -> "2"]
                            ^^^^^^^^^^^^^^^^^^^^^^
  Error: `%mel.raw' can only be applied to a string
  [2]

Show expressions in `%mel.raw` get wrapped in parentheses with proper syntax

  $ cat > main.ml <<EOF
  > let () = [%mel.raw {|
  > // before
  > f(1,2)
  > // after
  > |}]
  > EOF
  $ melc -ppx melppx main.ml
  // Generated by Melange
  'use strict';
  
  
  ((// before
  f(1,2)
  // after
    ));
  /*  Not a pure module */

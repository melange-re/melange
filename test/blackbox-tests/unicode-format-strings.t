
  $ . ./setup.sh
  $ cat > x.ml <<EOF
  > let () = Js.log (Format.sprintf {js|你 %s|js} "xx")
  > EOF

  $ melc -ppx melppx x.ml | tee x.js
  // Generated by Melange
  'use strict';
  
  const Curry = require("melange.js/curry.js");
  const Stdlib__Format = require("melange/format.js");
  
  console.log(Curry._1(Stdlib__Format.sprintf({
    TAG: /* Format */ 0,
    _0: {
      TAG: /* String_literal */ 11,
      _0: "你 ",
      _1: {
        TAG: /* String */ 2,
        _0: /* No_padding */ 0,
        _1: /* End_of_format */ 0
      }
    },
    _1: "你 %s"
  }), "xx"));
  /*  Not a pure module */

  $ node ./x.js
  你 xx

Show that `{j| ... |j}` with interpolation doesn't work because string
concatenation isn't a literal

  $ cat > x.ml <<EOF
  > let x = "xx"
  > let () = Js.log (Format.sprintf {j|你 \$(x) %s|j} "xx")
  > EOF
  $ melc -ppx melppx x.ml
  File "x.ml", line 1:
  Error: This expression has type string but an expression was expected of type
           ('a -> 'b, unit, string) format =
             ('a -> 'b, unit, string, string, string, string)
             CamlinternalFormatBasics.format6
  [2]

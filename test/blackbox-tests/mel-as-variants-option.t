
  $ . ./setup.sh
  $ cat > dune-project <<EOF
  > (lang dune 3.9)
  > (using melange 0.1)
  > EOF

  $ cat > dune <<EOF
  > (melange.emit
  >  (target js-out)
  >  (preprocess (pps melange.ppx))
  >  (emit_stdlib false))
  > EOF

  $ cat > x.ml <<EOF
  > type 'a x = Some of 'a | None
  > let x : _ x = None
  > let y : _ x = Some 42
  > let f : type a. a x -> unit =
  >  fun x -> match x with None -> () | Some x -> Js.log2 "some" x
  > EOF

  $ dune build @melange
  $ cat ./_build/default/js-out/x.js
  // Generated by Melange
  'use strict';
  
  const Caml_option = require("melange.js/caml_option.js");
  
  function f(x) {
    if (x !== undefined) {
      console.log("some", Caml_option.valFromOption(x));
      return;
    }
    
  }
  
  let x;
  
  const y = 42;
  
  module.exports = {
    x,
    y,
    f,
  }
  /* No side effect */

  $ cat > x.ml <<EOF
  > type 'a x = Some of 'a [@mel.as "This_is_ignored"] | None
  > let x: _ x = Some 42
  > let f : type a. a x -> unit =
  >  fun x -> match x with None -> () | Some x -> Js.log2 "some" x
  > EOF

  $ dune build @melange
  $ cat ./_build/default/js-out/x.js
  // Generated by Melange
  'use strict';
  
  const Caml_option = require("melange.js/caml_option.js");
  
  function f(x) {
    if (x !== undefined) {
      console.log("some", Caml_option.valFromOption(x));
      return;
    }
    
  }
  
  const x = 42;
  
  module.exports = {
    x,
    f,
  }
  /* No side effect */

Show that unit application omits the "undefined" argument

  $ . ./setup.sh
  $ cat > x.ml <<EOF
  > let foo () =
  >   for _i = 0 to 2 do
  >     Js.log "Hello"
  >   done
  > let () = foo ()
  > EOF
  $ melc -ppx melppx x.ml
  // Generated by Melange
  'use strict';
  
  
  function foo(param) {
    for (let _i = 0; _i <= 2; ++_i) {
      console.log("Hello");
    }
  }
  
  foo();
  
  module.exports = {
    foo,
  }
  /*  Not a pure module */

With `[@mel.unwrap]`, show `Js.undefined` must be used if you want the explicit
argument

  $ cat > x.ml <<EOF
  > external log2 : ([ \`Unit of unit ] [@mel.unwrap]) -> unit = "log"
  >   [@@mel.scope "console"]
  > let () = log2 (\`Unit ())
  > external log2 : ([ \`Unit of unit Js.undefined ] [@mel.unwrap]) -> unit = "log"
  >   [@@mel.scope "console"]
  > let () = log2 (\`Unit Js.undefined)
  > EOF
  $ melc -ppx melppx x.ml
  // Generated by Melange
  'use strict';
  
  
  console.log();
  
  console.log(undefined);
  /*  Not a pure module */

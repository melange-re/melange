Melange turns off warning 20 by default ([ignored-extra-argument])

  $ . ./setup.sh
  $ cat > dune-project <<EOF
  > (lang dune 3.8)
  > (using melange 0.1)
  > EOF
  $ cat > dune << EOF
  > (melange.emit
  >  (target out)
  >  (emit_stdlib false)
  >  (preprocess (pps melange.ppx)))
  > EOF

  $ cat > foo.ml <<EOF
  > let addOne = [%mel.raw {|
  >   function (a) {
  >     return a + 1;
  >   }
  > |}]
  > let x = addOne 2
  > EOF

  $ dune build @melange

But it remains possible to turn it on via `-w`:

  $ cat > dune << EOF
  > (melange.emit
  >  (target out)
  >  (emit_stdlib false)
  >  (preprocess (pps melange.ppx))
  >  (compile_flags :standard -w +20))
  > EOF

  $ dune build @melange
  File "foo.ml", line 6, characters 15-16:
  6 | let x = addOne 2
                     ^
  Error (warning 20 [ignored-extra-argument]): this argument will not be used by the function.
  [1]

Turned off by default with `melc`

  $ melc -ppx melppx foo.ml
  // Generated by Melange
  'use strict';
  
  
  var addOne = (function (a) {
      return a + 1;
    });
  
  var x = addOne(2);
  
  exports.addOne = addOne;
  exports.x = x;
  /* x Not a pure module */

Possible to turn on with `melc`, but `-w -20` gets inserted in between `-w`
arguments so we need to pass `-w` twice. Better than not being able to turn it
off at all...

  $ melc -ppx melppx -w +20 -w +20 -warn-error +20 foo.ml
  File "foo.ml", line 6, characters 15-16:
  6 | let x = addOne 2
                     ^
  Error (warning 20 [ignored-extra-argument]): this argument will not be used by the function.
  [2]

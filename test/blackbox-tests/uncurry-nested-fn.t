
  $ . ./setup.sh
  $ cat > x.ml <<EOF
  > (* nested fun without uncurry, should generate fully uncurried fn *)
  > let x = fun [@u] a b -> fun c -> a + b + c
  > 
  > (* nested fun with uncurry, should generate 2 uncurried fn *)
  > let y = fun [@u] a b -> fun [@u] c -> a + b + c
  > 
  > let[@warning "-61"] u : < say : (int -> int -> int[@mel.meth]) > Js.t =
  >   object
  >     method say x = fun y -> x + y
  >   end
  >   [@u]
  > EOF

  $ melc -ppx melppx x.ml
  // Generated by Melange
  'use strict';
  
  
  function x(a, b, c) {
    return (a + b | 0) + c | 0;
  }
  
  function y(a, b) {
    return function (c) {
      return (a + b | 0) + c | 0;
    };
  }
  
  const u = {
    say: (function (x, y) {
      return x + y | 0;
    })
  };
  
  module.exports = {
    x,
    y,
    u,
  }
  /* u Not a pure module */

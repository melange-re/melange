Test `@mel.unwrap` + polyvariants with no payload

  $ . ./setup.sh

  $ cat > x.ml <<EOF
  > external foo : ([ \`foo | \`int of int ][@mel.unwrap]) -> unit = "someFnCall"
  > let () = foo \`foo; foo (\`int 42)
  > EOF
  $ melc -ppx melppx x.ml
  // Generated by Melange
  'use strict';
  
  
  someFnCall("foo");
  
  someFnCall(42);
  
  /*  Not a pure module */

  $ cat > x.ml <<EOF
  > external foo : ([ \`foo [@mel.as "bar"]| \`int of int ][@mel.unwrap]) -> unit = "someFnCall"
  > let () = foo \`foo
  > EOF
  $ melc -ppx melppx x.ml
  File "x.ml", line 1, characters 25-31:
  1 | external foo : ([ `foo [@mel.as "bar"]| `int of int ][@mel.unwrap]) -> unit = "someFnCall"
                               ^^^^^^
  Alert unused: Unused attribute [@mel.as]
  This means such annotation is not annotated properly.
  For example, some annotations are only meaningful in externals
  
  // Generated by Melange
  'use strict';
  
  
  someFnCall("foo");
  
  /*  Not a pure module */


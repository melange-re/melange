
  $ . ./setup.sh
  $ cat > x.ml <<EOF
  > let sum = function a -> function b -> a + b
  > let sum2 = fun a -> fun b -> a + b
  > let sum3 = fun (a, b) -> fun c -> a + b + c
  > let sum4 = fun a -> fun b -> fun c -> a + b + c
  > EOF

  $ melc -drawlambda x.ml
  (setglobal X!
    (let
      (sum/267 =
         (function a/269[int] (function b/270[int] : int (+ a/269 b/270)))
       sum2/271 =
         (function a/273[int] (function b/274[int] : int (+ a/273 b/274)))
       sum3/275 =
         (function param/280
           (let
             (b/278 =a (field_imm :[]/1 param/280)
              a/277 =a (field_imm :[]/0 param/280))
             (function c/279[int] : int (+ (+ a/277 b/278) c/279))))
       sum4/281 =
         (function a/283[int]
           (function b/284[int]
             (function c/285[int] : int (+ (+ a/283 b/284) c/285)))))
      (makeblock 0module/exports sum/267 sum2/271 sum3/275 sum4/281)))
  // Generated by Melange
  'use strict';
  
  
  function sum(a, b) {
    return a + b | 0;
  }
  
  function sum2(a, b) {
    return a + b | 0;
  }
  
  function sum3(param) {
    const b = param[1];
    const a = param[0];
    return function (c) {
      return (a + b | 0) + c | 0;
    };
  }
  
  function sum4(a, b, c) {
    return (a + b | 0) + c | 0;
  }
  
  module.exports = {
    sum,
    sum2,
    sum3,
    sum4,
  }
  /* No side effect */


  $ cat > x.ml <<EOF
  > let sum_optional = fun ?a -> fun b -> (Option.value ~default:0 a) + b
  > let sum_optional_default = fun ?(a=2) -> fun b -> a + b
  > EOF

  $ melc -drawlambda x.ml
  (setglobal X!
    (let
      (sum_optional/267 =
         (function a/269
           (function b/270[int] : int
             (+ (apply (field_mut :value/2 (global Stdlib__Option!)) a/269 0)
               b/270)))
       sum_optional_default/288 =
         (function *opt*/292
           (let
             (a/290 =[int]
                (if (#is_not_none *opt*/292)
                  (#val_from_unnest_option *opt*/292) 2))
             (function b/291[int] : int (+ a/290 b/291)))))
      (makeblock 0module/exports sum_optional/267 sum_optional_default/288)))
  // Generated by Melange
  'use strict';
  
  const Stdlib__Option = require("melange/option.js");
  
  function sum_optional(a, b) {
    return Stdlib__Option.value(a, 0) + b | 0;
  }
  
  function sum_optional_default(aOpt, b) {
    const a = aOpt !== undefined ? aOpt : 2;
    return a + b | 0;
  }
  
  module.exports = {
    sum_optional,
    sum_optional_default,
  }
  /* No side effect */

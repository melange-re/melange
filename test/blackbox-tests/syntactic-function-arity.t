
  $ . ./setup.sh
  $ cat > x.ml <<EOF
  > let sum = function a -> function b -> a + b
  > let sum2 = fun a -> fun b -> a + b
  > let sum3 = fun (a, b) -> fun c -> a + b + c
  > let sum4 = fun a -> fun b -> fun c -> a + b + c
  > EOF

  $ melc -drawlambda x.ml
  (setglobal X!
    (let
      (sum/270 =
         (function a/272[int] (function b/273[int] : int (+ a/272 b/273)))
       sum2/274 =
         (function a/276[int] (function b/277[int] : int (+ a/276 b/277)))
       sum3/278 =
         (function param/283
           (let
             (b/281 =a (field_imm :[]/1 param/283)
              a/280 =a (field_imm :[]/0 param/283))
             (function c/282[int] : int (+ (+ a/280 b/281) c/282))))
       sum4/284 =
         (function a/286[int]
           (function b/287[int]
             (function c/288[int] : int (+ (+ a/286 b/287) c/288)))))
      (makeblock 0module/exports sum/270 sum2/274 sum3/278 sum4/284)))
  // Generated by Melange
  'use strict';
  
  
  function sum(a, b) {
    return a + b | 0;
  }
  
  function sum2(a, b) {
    return a + b | 0;
  }
  
  function sum3(param) {
    const b = param[1];
    const a = param[0];
    return function (c) {
      return (a + b | 0) + c | 0;
    };
  }
  
  function sum4(a, b, c) {
    return (a + b | 0) + c | 0;
  }
  
  module.exports = {
    sum,
    sum2,
    sum3,
    sum4,
  }
  /* No side effect */


  $ cat > x.ml <<EOF
  > let sum_optional = fun ?a -> fun b -> (Option.value ~default:0 a) + b
  > let sum_optional_default = fun ?(a=2) -> fun b -> a + b
  > EOF

  $ melc -drawlambda x.ml
  (setglobal X!
    (let
      (sum_optional/270 =
         (function a/272
           (function b/273[int] : int
             (+ (apply (field_mut :value/2 (global Stdlib__Option!)) a/272 0)
               b/273)))
       sum_optional_default/291 =
         (function *opt*/295
           (let
             (a/293 =[int]
                (if (#is_not_none *opt*/295)
                  (#val_from_unnest_option *opt*/295) 2))
             (function b/294[int] : int (+ a/293 b/294)))))
      (makeblock 0module/exports sum_optional/270 sum_optional_default/291)))
  // Generated by Melange
  'use strict';
  
  const Stdlib__Option = require("melange/option.js");
  
  function sum_optional(a, b) {
    return Stdlib__Option.value(a, 0) + b | 0;
  }
  
  function sum_optional_default(aOpt, b) {
    const a = aOpt !== undefined ? aOpt : 2;
    return a + b | 0;
  }
  
  module.exports = {
    sum_optional,
    sum_optional_default,
  }
  /* No side effect */

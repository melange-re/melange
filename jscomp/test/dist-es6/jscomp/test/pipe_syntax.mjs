// Generated by Melange

import * as Curry from "melange/lib/es6/curry.mjs";
import * as Belt_Array from "melange.runtime-others/jscomp/others/belt_Array.mjs";
import * as Caml_option from "melange/lib/es6/caml_option.mjs";

function t0(x, f) {
  return Curry._1(f, Curry._1(f, Curry._1(f, x)));
}

function t1(x, f) {
  return Curry._1(f, x);
}

function t2(x, f, g) {
  return Curry._2(f, Curry._3(g, Curry._1(f, x), x, x), x);
}

function t3(x, f) {
  return Curry._3(f, x, 1, 2);
}

function f(a, b, c) {
  return [
          Curry._1(b, a),
          Curry._1(c, a)
        ];
}

function f1(a, b, c, d) {
  var __ocaml_internal_obj = Curry._1(a, b);
  return [
          Curry._1(c, __ocaml_internal_obj),
          Curry._1(d, __ocaml_internal_obj)
        ];
}

function f2(a, b, c, d) {
  var __ocaml_internal_obj = Curry._1(a, b);
  var u = Curry._1(c, __ocaml_internal_obj);
  var v = Curry._1(d, __ocaml_internal_obj);
  return u + v | 0;
}

function f3(a, b, c, d, e) {
  var __ocaml_internal_obj = Curry._1(a, b);
  var u = Curry._2(c, __ocaml_internal_obj, d);
  var v = Curry._3(d, __ocaml_internal_obj, 1, 2);
  var h = Curry._1(e, __ocaml_internal_obj);
  return (u + v | 0) + h | 0;
}

function f4(a, b, c) {
  return [
          Curry._2(b, a, c),
          Curry._2(b, a, c)
        ];
}

function f5(a, b, c, d) {
  var v0 = Curry._3(b, a, c, c);
  var v1 = Curry._3(b, a, c, c);
  var v2 = Curry._3(b, a, d, d);
  return (v0 + v1 | 0) + v2 | 0;
}

function f6(a) {
  return Caml_option.some(a);
}

function f7(a) {
  return [
          Caml_option.some(a),
          Caml_option.some(a),
          Caml_option.some(a)
        ];
}

function f8(a) {
  return Caml_option.some(Caml_option.some(a));
}

function hi(x) {
  return Belt_Array.map(x, (function (x) {
                return x + 1 | 0;
              }));
}

var with_poly = {
  NAME: "Foo",
  VAL: 1
};

export {
  t0 ,
  t1 ,
  t2 ,
  t3 ,
  f ,
  f1 ,
  f2 ,
  f3 ,
  f4 ,
  f5 ,
  f6 ,
  f7 ,
  f8 ,
  hi ,
  with_poly ,
}
/* No side effect */

// Generated by Melange

import * as Mt from "./mt.mjs";
import * as Sys from "melange/jscomp/stdlib-412/stdlib_modules/sys.mjs";
import * as Stdlib from "melange.stdlib/jscomp/stdlib-412/stdlib.mjs";
import * as Caml_sys from "melange/lib/es6/caml_sys.mjs";
import * as Node_process from "melange.runtime-others/jscomp/others/node_process.mjs";
import * as Caml_js_exceptions from "melange/lib/es6/caml_js_exceptions.mjs";

var suites = {
  contents: /* [] */0
};

var test_id = {
  contents: 0
};

function eq(loc, x, y) {
  test_id.contents = test_id.contents + 1 | 0;
  suites.contents = {
    hd: [
      loc + (" id " + String(test_id.contents)),
      (function (param) {
          return {
                  TAG: /* Eq */0,
                  _0: x,
                  _1: y
                };
        })
    ],
    tl: suites.contents
  };
}

Node_process.putEnvVar("Caml_sys_poly_fill_test", "X");

var v = Caml_sys.caml_sys_getenv("Caml_sys_poly_fill_test");

eq("File \"caml_sys_poly_fill_test.ml\", line 11, characters 5-12", "X", (Node_process.deleteEnvVar("Caml_sys_poly_fill_test"), v));

Node_process.putEnvVar("Caml_sys_poly_fill_test", "Y");

var v$1 = Caml_sys.caml_sys_getenv("Caml_sys_poly_fill_test");

eq("File \"caml_sys_poly_fill_test.ml\", line 17, characters 5-12", "Y", (Node_process.deleteEnvVar("Caml_sys_poly_fill_test"), v$1));

Node_process.deleteEnvVar("Caml_sys_poly_fill_test");

var tmp;

try {
  tmp = Caml_sys.caml_sys_getenv("Caml_sys_poly_fill_test");
}
catch (raw_exn){
  var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);
  if (exn.RE_EXN_ID === Stdlib.Not_found) {
    tmp = "Z";
  } else {
    throw exn;
  }
}

eq("File \"caml_sys_poly_fill_test.ml\", line 23, characters 5-12", "Z", tmp);

console.log([
      Caml_sys.caml_sys_getcwd(undefined),
      Caml_sys.caml_sys_time(undefined),
      Caml_sys.caml_sys_argv(0),
      Sys.executable_name
    ]);

Mt.from_pair_suites("Caml_sys_poly_fill_test", suites.contents);

export {
  suites ,
  test_id ,
  eq ,
}
/*  Not a pure module */

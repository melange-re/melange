// Generated by Melange

import * as Mt from "./mt.mjs";
import * as Curry from "melange/lib/es6/curry.mjs";
import * as Caml_format from "melange/lib/es6/caml_format.mjs";
import * as Caml_exceptions from "melange/lib/es6/caml_exceptions.mjs";
import * as Caml_js_exceptions from "melange/lib/es6/caml_js_exceptions.mjs";

var suites = {
  contents: /* [] */0
};

var test_id = {
  contents: 0
};

function eq(loc, x, y) {
  Mt.eq_suites(test_id, suites, loc, x, y);
}

var Inline_record = /* @__PURE__ */Caml_exceptions.create("Record_extension_test.Inline_record");

function f(x) {
  if (x.RE_EXN_ID === Inline_record) {
    return x.x + Caml_format.caml_int_of_string(x.y) | 0;
  }
  
}

var v0 = {
  RE_EXN_ID: Inline_record,
  x: 3,
  y: "4"
};

eq("File \"record_extension_test.ml\", line 19, characters 6-13", f(v0), 7);

function f2(x) {
  if (typeof x === "number" || x.TAG !== /* C */0) {
    return 0;
  } else {
    return x.x;
  }
}

function f2_with(x) {
  if (typeof x === "number" || x.TAG !== /* C */0) {
    return x;
  } else {
    return {
            TAG: /* C */0,
            x: 0,
            y: x.y
          };
  }
}

var A = /* @__PURE__ */Caml_exceptions.create("Record_extension_test.A");

var B = /* @__PURE__ */Caml_exceptions.create("Record_extension_test.B");

var C = /* @__PURE__ */Caml_exceptions.create("Record_extension_test.C");

function u(f) {
  try {
    return Curry._1(f, undefined);
  }
  catch (raw_x){
    var x = Caml_js_exceptions.internalToOCamlException(raw_x);
    if (x.RE_EXN_ID === A) {
      return x.name + x.x | 0;
    } else if (x.RE_EXN_ID === B) {
      return x._1 + x._2 | 0;
    } else if (x.RE_EXN_ID === C) {
      return x.name;
    } else {
      return -1;
    }
  }
}

Mt.from_pair_suites("File \"record_extension_test.ml\", line 56, characters 22-29", suites.contents);

export {
  suites ,
  test_id ,
  eq ,
  Inline_record ,
  f ,
  v0 ,
  f2 ,
  f2_with ,
  A ,
  B ,
  C ,
  u ,
}
/*  Not a pure module */

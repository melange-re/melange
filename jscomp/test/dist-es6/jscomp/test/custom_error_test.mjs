// Generated by Melange

import * as Js_exn from "melange.runtime-others/jscomp/others/js_exn.mjs";
import * as Caml_option from "melange/lib/es6/caml_option.mjs";
import * as Caml_js_exceptions from "melange/lib/es6/caml_js_exceptions.mjs";

function test_js_error(param) {
  var e;
  try {
    e = JSON.parse(" {\"x\" : }");
  }
  catch (raw_err){
    var err = Caml_js_exceptions.internalToOCamlException(raw_err);
    if (err.RE_EXN_ID === Js_exn.$$Error) {
      console.log(err._1.stack);
      return ;
    }
    throw err;
  }
  return Caml_option.some(e);
}

function test_js_error2(param) {
  try {
    return JSON.parse(" {\"x\" : }");
  }
  catch (raw_e){
    var e = Caml_js_exceptions.internalToOCamlException(raw_e);
    if (e.RE_EXN_ID === Js_exn.$$Error) {
      console.log(e._1.stack);
      throw e;
    }
    throw e;
  }
}

function example1(param) {
  var v;
  try {
    v = JSON.parse(" {\"x\"  }");
  }
  catch (raw_err){
    var err = Caml_js_exceptions.internalToOCamlException(raw_err);
    if (err.RE_EXN_ID === Js_exn.$$Error) {
      console.log(err._1.stack);
      return ;
    }
    throw err;
  }
  return Caml_option.some(v);
}

function example2(param) {
  try {
    return Caml_option.some(JSON.parse(" {\"x\"}"));
  }
  catch (raw_exn){
    var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);
    if (exn.RE_EXN_ID === Js_exn.$$Error) {
      return ;
    }
    throw exn;
  }
}

export {
  test_js_error ,
  test_js_error2 ,
  example1 ,
  example2 ,
}
/* No side effect */

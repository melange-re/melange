// Generated by Melange

import * as Caml_bytes from "melange/lib/es6/caml_bytes.mjs";
import * as Caml_string from "melange/lib/es6/caml_string.mjs";

function f(param) {
  switch (param) {
    case "aaaabb" :
        return 0;
    case "bbbb" :
        return 1;
    default:
      throw {
            RE_EXN_ID: "Assert_failure",
            _1: [
              "test_string.ml",
              4,
              18
            ],
            Error: new Error()
          };
  }
}

function a(x) {
  return "helloworldhello" + x;
}

function b(y, x) {
  return y + ("helloworldhello" + x);
}

function c(x, y) {
  return x + "hellohiuhi" + y;
}

function h(s, b) {
  if (Caml_string.get(s, 0) === /* 'a' */97 && Caml_bytes.get(b, 0) === /* 'b' */98) {
    return Caml_string.get(s, 1) === Caml_bytes.get(b, 2);
  } else {
    return false;
  }
}

var v = 2;

export {
  f ,
  a ,
  b ,
  c ,
  v ,
  h ,
}
/* No side effect */

// Generated by Melange
'use strict';

const Js__Js_mapper_runtime = require("melange.js/js_mapper_runtime.js");
const Mt = require("./mt.js");

const suites = {
  contents: /* [] */ 0
};

const test_id = {
  contents: 0
};

function eq(loc, x, y) {
  test_id.contents = test_id.contents + 1 | 0;
  suites.contents = {
    hd: [
      loc + (" id " + String(test_id.contents)),
      (function (param) {
        return {
          TAG: /* Eq */ 0,
          _0: x,
          _1: y
        };
      })
    ],
    tl: suites.contents
  };
}

function tToJs(param) {
  return {
    x: param.x,
    y: param.y,
    z: param.z
  };
}

function tFromJs(param) {
  return {
    x: param.x,
    y: param.y,
    z: param.z
  };
}

const v0 = {
  x: 3,
  y: false,
  z: false
};

const v1 = {
  x: 3,
  y: false,
  z: ""
};

const _map = {"a":"a","b":"b","c":"c"};

function xToJs(param) {
  return param;
}

function xFromJs(param) {
  return Js__Js_mapper_runtime.raiseWhenNotFound(_map[param]);
}

function idx(v) {
  eq("File \"jscomp/test/ast_abstract_test.ml\", line 32, characters 17-24", xFromJs(v), v);
}

idx("a");

idx("b");

idx("c");

Mt.from_pair_suites("Ast_abstract_test", suites.contents);

const x0 = "a";

const x1 = "b";

const jsMapperEraseType = /* JsMapperEraseType */ 0;

const b = /* B */ 1;

const zFromJs = /* ZFromJs */ 0;

const zToJs = /* ZToJs */ 1;

const zXx = /* ZXx */ 2;

module.exports = {
  suites,
  test_id,
  eq,
  tToJs,
  tFromJs,
  v0,
  v1,
  xToJs,
  xFromJs,
  idx,
  x0,
  x1,
  jsMapperEraseType,
  b,
  zFromJs,
  zToJs,
  zXx,
}
/*  Not a pure module */

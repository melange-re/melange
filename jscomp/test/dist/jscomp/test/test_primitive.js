// Generated by Melange
'use strict';

const Caml_array = require("melange.js/caml_array.js");
const CamlinternalLazy = require("melange/camlinternalLazy.js");
const Curry = require("melange.js/curry.js");
const Stdlib = require("melange/stdlib.js");

function a4(prim) {
  return [
          "File \"jscomp/test/test_primitive.ml\", line 29, characters 9-19",
          prim
        ];
}

function a5(prim) {
  return [
          30,
          prim
        ];
}

function a6(prim) {
  return [
          [
            "jscomp/test/test_primitive.ml",
            31,
            9,
            19
          ],
          prim
        ];
}

const test_float = 3;

const test_abs = Math.abs(3.0);

const v = [
  1.0,
  2.0
];

const xxx = "a";

const a = /* 'a' */97;

function u(b) {
  if (b) {
    Stdlib.print_int(1);
    return 32;
  } else {
    return 7;
  }
}

function f2(h, b, param) {
  return Curry._1(h, b ? 32 : 7);
}

Caml_array.set(v, 1, 3.0);

const unboxed_x = {
  u: 0,
  v: 0
};

function gg(x) {
  x.u = 0;
}

function f(x) {
  return x.length;
}

const is_lazy_force = CamlinternalLazy.force;

function fib(n) {
  if (n === 0 || n === 1) {
    return 1;
  }
  const fib1 = fib(n - 1 | 0);
  const fib2 = fib(n - 2 | 0);
  return (fib1 + fib2 | 0) + 3 | 0;
}

const a0 = "File \"jscomp/test/test_primitive.ml\", line 25, characters 9-16";

const a1 = "Test_primitive";

const a2 = 27;

const a3 = "Test_primitive";

const xx = [
  0,
  0
];

exports.a0 = a0;
exports.a1 = a1;
exports.a2 = a2;
exports.a3 = a3;
exports.a4 = a4;
exports.a5 = a5;
exports.a6 = a6;
exports.test_float = test_float;
exports.test_abs = test_abs;
exports.v = v;
exports.xxx = xxx;
exports.a = a;
exports.u = u;
exports.f2 = f2;
exports.xx = xx;
exports.unboxed_x = unboxed_x;
exports.gg = gg;
exports.f = f;
exports.is_lazy_force = is_lazy_force;
exports.fib = fib;
/* test_abs Not a pure module */

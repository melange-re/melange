// Generated by Melange
'use strict';

const Mt = require("./mt.js");
const Stdlib__Array = require("melange/array.js");

const suites = {
  contents: /* [] */0
};

const test_id = {
  contents: 0
};

function eq(loc, x, y) {
  test_id.contents = test_id.contents + 1 | 0;
  suites.contents = {
    hd: [
      loc + (" id " + String(test_id.contents)),
      (function (param) {
        return {
          TAG: /* Eq */0,
          _0: x,
          _1: y
        };
      })
    ],
    tl: suites.contents
  };
}

const _map = {"D":"D","C":"C","f":"x"};

const _revMap = {"D":"D","C":"C","x":"f"};

function uToJs(param) {
  return _map[param];
}

function uFromJs(param) {
  return _revMap[param];
}

function eqU(x, y) {
  return x === y;
}

function eqUOpt(x, y) {
  if (x !== undefined) {
    if (y !== undefined) {
      return x === y;
    } else {
      return false;
    }
  } else {
    return y === undefined;
  }
}

eq("File \"jscomp/test/ast_js_mapper_poly_test.ml\", line 24, characters 5-12", eqUOpt(uFromJs("x"), "f"), true);

eq("File \"jscomp/test/ast_js_mapper_poly_test.ml\", line 25, characters 5-12", eqUOpt(uFromJs("D"), "D"), true);

eq("File \"jscomp/test/ast_js_mapper_poly_test.ml\", line 26, characters 5-12", eqUOpt(uFromJs("C"), "C"), true);

eq("File \"jscomp/test/ast_js_mapper_poly_test.ml\", line 27, characters 5-12", eqUOpt(uFromJs("f"), undefined), true);

eq("File \"jscomp/test/ast_js_mapper_poly_test.ml\", line 28, characters 5-12", Stdlib__Array.map(uToJs, [
          "D",
          "C",
          "f"
        ]), [
      "D",
      "C",
      "x"
    ]);

Mt.from_pair_suites("Ast_js_mapper_poly_test", suites.contents);

const $plus$great = Stdlib__Array.append;

exports.suites = suites;
exports.test_id = test_id;
exports.eq = eq;
exports.uToJs = uToJs;
exports.uFromJs = uFromJs;
exports.eqU = eqU;
exports.eqUOpt = eqUOpt;
exports.$plus$great = $plus$great;
/*  Not a pure module */

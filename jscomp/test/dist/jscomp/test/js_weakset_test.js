// Generated by Melange
'use strict';

const Mt = require("./mt.js");

const suites_0 = [
  "add",
  (function (param) {
      const value = {};
      const weakset = new WeakSet().add(value);
      return {
              TAG: /* Eq */0,
              _0: true,
              _1: weakset.has(value)
            };
    })
];

const suites_1 = {
  hd: [
    "delete - true",
    (function (param) {
        const value = {};
        const weakset = new WeakSet().add(value);
        const deleted = weakset.delete(value);
        return {
                TAG: /* Eq */0,
                _0: [
                  true,
                  false
                ],
                _1: [
                  deleted,
                  weakset.has(value)
                ]
              };
      })
  ],
  tl: {
    hd: [
      "delete - false",
      (function (param) {
          const a = {};
          const b = {};
          const weakset = new WeakSet().add(a);
          const deleted = weakset.delete(b);
          return {
                  TAG: /* Eq */0,
                  _0: false,
                  _1: deleted
                };
        })
    ],
    tl: {
      hd: [
        "has",
        (function (param) {
            const a = {};
            const b = {};
            const weakset = new WeakSet().add(a).add(b);
            const has_b_before = weakset.has(b);
            weakset.delete(b);
            const has_b_after = weakset.has(b);
            return {
                    TAG: /* Eq */0,
                    _0: [
                      has_b_before,
                      has_b_after
                    ],
                    _1: [
                      true,
                      false
                    ]
                  };
          })
      ],
      tl: {
        hd: [
          "add mutate + return new weakset",
          (function (param) {
              const a = {};
              const b = {};
              const weakset_1 = new WeakSet();
              const weakset_2 = weakset_1.add(a);
              const weakset_3 = weakset_2.add(b);
              const all_has_b = weakset_1.has(b) === true && weakset_2.has(b) && weakset_3.has(b);
              const all_same_ref = weakset_1 === weakset_2 && weakset_2 === weakset_3;
              return {
                      TAG: /* Eq */0,
                      _0: [
                        true,
                        true
                      ],
                      _1: [
                        all_has_b,
                        all_same_ref
                      ]
                    };
            })
        ],
        tl: {
          hd: [
            "record",
            (function (param) {
                const value = {};
                value["k"] = 1;
                const weakset = new WeakSet().add(value);
                return {
                        TAG: /* Eq */0,
                        _0: true,
                        _1: weakset.has(value)
                      };
              })
          ],
          tl: /* [] */0
        }
      }
    }
  }
};

const suites = {
  hd: suites_0,
  tl: suites_1
};

Mt.from_pair_suites("Js_weakset_test", suites);

exports.suites = suites;
/*  Not a pure module */

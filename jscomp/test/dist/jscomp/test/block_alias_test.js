// Generated by Melange
'use strict';

const Caml_obj = require("melange.js/caml_obj.js");
const Mt = require("./mt.js");
const Stdlib__List = require("melange/list.js");

const suites = {
  contents: /* [] */ 0
};

const test_id = {
  contents: 0
};

function eq(loc, x, y) {
  Mt.eq_suites(test_id, suites, loc, x, y);
}

function b(loc, x) {
  Mt.bool_suites(test_id, suites, loc, x);
}

const Block = {};

const v0 = {
  TAG: /* A */ 1,
  _0: 0,
  _1: 1
};

const Block$1 = {};

const v1 = {
  TAG: /* A */ 1,
  _0: 0,
  _1: 1
};

const N = {
  Block: Block$1,
  v1: v1
};

const Caml_obj$1 = {};

const List = {};

const V = {
  List: List
};

const f = Caml_obj.caml_equal;

eq("File \"jscomp/test/block_alias_test.ml\", line 32, characters 6-13", Stdlib__List.length({
          hd: 1,
          tl: {
            hd: 2,
            tl: /* [] */ 0
          }
        }), 2);

b("File \"jscomp/test/block_alias_test.ml\", line 33, characters 5-12", Caml_obj.caml_equal(v0, {
          TAG: /* A */ 1,
          _0: 0,
          _1: 1
        }));

eq("File \"jscomp/test/block_alias_test.ml\", line 34, characters 6-13", v0, v1);

Mt.from_pair_suites("Block_alias_test", suites.contents);

const h = Stdlib__List.length;

module.exports = {
  suites,
  test_id,
  eq,
  b,
  Block,
  v0,
  N,
  Caml_obj: Caml_obj$1,
  V,
  f,
  h,
}
/*  Not a pure module */

let __sedlex_table_55 =
  "\001\001\001\001\001\001\001\001\001\001\000\001\001"
let __sedlex_table_2 =

let __sedlex_table_28 =

let __sedlex_table_45 =
  "\001\001\001\001\001\001\001\001\001\001\002\001\001\003\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\004"
let __sedlex_table_54 =
  "\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002"
let __sedlex_table_29 =
  "\001\001\001\001\001\001\001\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002"
let __sedlex_table_40 =
  "\001\000\002\002\002\002\002\002\002\002\002\002\000\000\000\000\000\000\000\000\000\000\000\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\003"
let __sedlex_table_5 = "\001\002"
let __sedlex_table_3 =
  "\001\001\001\001\001\001\001\001\001\001\000\001\001\000\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\000\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\000\001\001\001"
let __sedlex_table_21 =
  "\001\001\001\001\001\001\001\001\001\001\000\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\000\001\001\001\001\000\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001"
let __sedlex_table_57 =
  "\001\001\001\001\001\001\001\001\001\001\000\001\001\000\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001"
let __sedlex_table_77 =
b"
let __sedlex_table_18 =
  "\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002"
let __sedlex_table_23 =
  "\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002"
let __sedlex_table_41 =
  "\001\002\002\002\002\002\002\002\002\002\002\003\002\002\004\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\005\006\006\006\006\006\006\006\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\007\002\002\002\002\002\b\002\002\002\t\002\002\002\002\002\002\002\n\002\002\002\011\002\012\r\014\002\015"
let __sedlex_table_72 =

let __sedlex_table_79 =
  "\001\000\001\000\000\002\003\003\003\003\003\003\003\003\003"
let __sedlex_table_10 = "\001\001\001\001\001\001\001\001\001\001\000\002"
let __sedlex_table_12 =
  "\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001"
let __sedlex_table_67 =
  "\001\002\002\002\002\002\002\002\002\002\002\003\002\002\004\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\005\002\002\002\006\007"
let __sedlex_table_14 =
  "\001\001\001\001\001\001\001\001\001\001\000\001\001\000\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\000\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\000\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001"
let __sedlex_table_43 =
  "\001\001\001\001\001\001\001\001\001\001\002\001\001\003"
let __sedlex_table_74 =
  "\001\002\002\002\002\002\002\002\002\002\002\003\002\002\004\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\005\006"
let __sedlex_table_84 =
  "\001\000\002\002\002\002\002\002\002\002\002\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\003"
let __sedlex_table_11 =
  "\001\000\000\000\000\000\000\000\000\000\000\000\001\001\001\001\001\001\001\001\001\001\000\002\000\000\000\000\000\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\000\000\000\000\000\000\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001"
let __sedlex_table_15 =
  "\001\000\000\000\000\000\000\000\000\000\000\000\002\002\002\002\002\002\002\002\002\002\000\000\000\000\000\000\000\002\002\002\002\002\002\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\000\000\000\000\000\000\002\002\002\002\002\002\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001"
let __sedlex_table_17 =
  "\001\000\000\000\000\000\000\000\000\000\000\000\002\002\002\002\002\002\002\002\002\002\000\000\000\000\000\000\000\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\000\000\000\000\000\000\001\001\001\001\001\001\001\001\001\001\001\001\001\003\001\001\001\001\001\001\001\001\001\001\001\001"
let __sedlex_table_22 =
  "\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\000\000\000\000\001\000\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001"
let __sedlex_table_27 =
  "\001\000\000\000\000\000\000\000\000\000\002\000\003\003\003\003\003\003\003\003\003\003\000\000\000\000\000\000\000\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\000\000\000\000\000\000\001\001\001\001\001\001\001\001\001\001\001\001\001\004\001\001\001\001\001\001\001\001\001\001\001\001"
let __sedlex_table_31 =
  "\001\000\000\000\000\000\000\000\000\000\002\000\003\003\003\003\003\003\003\003\003\003\000\000\000\000\000\000\000\001\001\001\001\004\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\000\000\000\000\005\000\001\001\001\001\004\001\001\001\001\001\001\001\001\006\001\001\001\001\001\001\001\001\001\001\001\001"
let __sedlex_table_37 =
  "\001\000\000\000\000\000\000\000\000\000\000\000\002\002\002\002\002\002\002\002\002\002\000\000\000\000\000\000\000\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\000\000\000\000\000\000\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001"
let __sedlex_table_44 =
  "\001\000\000\000\000\000\000\000\000\000\000\000\002\002\002\002\002\002\002\002\002\002\000\000\000\000\000\000\000\001\001\001\001\003\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\000\000\000\000\000\000\001\001\001\001\003\001\001\001\001\001\001\001\001\004\001\001\001\001\001\001\001\001\001\001\001\001"
let __sedlex_table_47 =
  "\001\000\000\000\000\000\000\000\000\000\000\000\002\002\002\002\002\002\002\002\002\002\000\000\000\000\000\000\000\001\001\001\001\003\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\000\000\000\000\004\000\001\001\001\001\003\001\001\001\001\001\001\001\001\005\001\001\001\001\001\001\001\001\001\001\001\001"
let __sedlex_table_52 =
  "\001\000\000\000\000\000\000\000\000\000\000\000\002\002\001\001\001\001\001\001\001\001\000\000\000\000\000\000\000\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\000\000\000\000\000\000\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001"
let __sedlex_table_56 =
  "\001\000\000\000\000\000\000\000\000\000\002\000\003\003\003\003\003\003\003\003\004\004\000\000\000\000\000\000\000\001\005\001\001\006\001\001\001\001\001\001\001\001\001\007\001\001\001\001\001\001\001\001\b\001\001\000\000\000\000\000\000\001\005\001\001\006\001\001\001\001\001\001\001\001\t\007\001\001\001\001\001\001\001\001\b\001\001"
let __sedlex_table_59 =
  "\001\000\000\000\000\000\000\000\000\000\000\000\002\002\002\002\002\002\002\002\001\001\000\000\000\000\000\000\000\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\000\000\000\000\000\000\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001"
let __sedlex_table_60 =
  "\001\000\000\000\000\000\000\000\000\000\000\000\002\002\002\002\002\002\002\002\002\002\000\000\000\000\000\000\000\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\000\000\000\000\003\000\001\001\001\001\001\001\001\001\001\001\001\001\001\004\001\001\001\001\001\001\001\001\001\001\001\001"
let __sedlex_table_62 =
  "\001\000\000\000\000\000\000\000\000\000\000\000\002\002\002\002\002\002\002\002\001\001\000\000\000\000\000\000\000\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\000\000\000\000\003\000\001\001\001\001\001\001\001\001\001\001\001\001\001\004\001\001\001\001\001\001\001\001\001\001\001\001"
let __sedlex_table_65 =
  "\001\000\000\000\000\000\000\000\000\000\002\000\003\003\003\003\003\003\003\003\003\003\000\000\000\000\000\000\000\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\000\000\000\000\004\000\001\001\001\001\001\001\001\001\001\001\001\001\001\005\001\001\001\001\001\001\001\001\001\001\001\001"
let __sedlex_table_70 =
  "\001\000\000\000\000\000\000\000\000\000\000\000\002\002\001\001\001\001\001\001\001\001\000\000\000\000\000\000\000\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\000\000\000\000\003\000\001\001\001\001\001\001\001\001\001\001\001\001\001\004\001\001\001\001\001\001\001\001\001\001\001\001"
let __sedlex_table_71 =
  "\001\000\000\000\000\000\000\000\000\000\002\000\003\003\003\003\003\003\003\003\004\004\000\000\000\000\000\000\000\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\000\000\000\000\000\000\001\001\001\001\001\001\001\001\001\001\001\001\001\005\001\001\001\001\001\001\001\001\001\001\001\001"
let __sedlex_table_73 =
  "\001\000\000\000\000\000\000\000\000\000\000\000\002\002\002\002\002\002\002\002\002\002\000\000\000\000\000\000\000\002\002\002\002\002\002\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\000\000\000\000\003\000\002\002\002\002\002\002\001\001\001\001\001\001\001\004\001\001\001\001\001\001\001\001\001\001\001\001"
let __sedlex_table_86 =
  "\001\000\000\000\000\000\000\000\000\000\000\000\001\001\001\001\001\001\001\001\001\001\000\000\000\000\000\000\000\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\000\000\000\000\000\000\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001"
let __sedlex_table_49 =
  "\001\001\001\001\001\001\001\001\001\001\000\001\001\000\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\000\001\001\001"
let __sedlex_table_1 =
  "\001\002\002\002\002\002\002\002\002\002\003\004\003\003\005\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\003\006\007\b\t\n\011\007\012\r\014\015\016\017\018\019\020\021\021\021\021\021\021\021\021\021\022\023\024\025\026\027\028\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\029\030\031 \t!\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"#$%\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\003\002\002\002\002\002\002\002\002\002\t\002\002\002\002\002\002\002\002\002\002\t\002\002\002\002\t\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\002\002\002\002\002\002\002\t\002\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\002\t\t\002\002\t\t\t\t\002\t\002\002\002\002\002\002\t\002\t\t\t\002\t\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\t\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\t\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\002\002\002\002\002\002\002\t\t\002\002\002\002\002\002\002\002\002\002\t\t\t\002\002\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\002\002\002\002\002\002\002\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\002\002\002\002\002\t\t\002\002\002\002\t\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\t\002\002\002\002\002\002\002\002\002\t\002\002\002\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\t\t\t\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\t\t\t\t\t\t\t\t\002\002\t\t\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\t\t\t\t\t\t\t\002\t\002\002\002\t\t\t\t\002\002\002\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\002\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\002\002\002\002\002\002\002\002\002\002\t\002\002\002\002\002\002\002\002\t\t\t\t\t\t\002\002\002\002\t\t\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\t\t\t\t\t\t\t\002\t\t\002\t\t\002\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\002\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\002\t\t\t\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\t\t\t\t\t\t\t\002\t\t\002\t\t\t\t\t\002\002\002\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\002\002\t\t\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\t\t\t\t\t\t\t\002\t\t\002\t\t\t\t\t\002\002\002\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\002\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\002\t\t\t\t\t\t\002\002\002\t\t\t\002\t\t\t\t\002\002\002\t\t\002\t\002\t\t\002\002\002\t\t\002\002\002\t\t\t\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\002\t\t\t\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\002\002\t\002\002\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\002\002\002\002\t\t\t\t\t\t\t\t\002\t\t\t\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\t\t\t\t\t\t\t\t\t\t\002\t\t\t\t\t\002\002\002\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\002\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\002\t\t\t\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\002\002\002\002\002\t\t\t\002\002\002\002\002\002\002\002\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\t\t\t\t\t\t\t\t\t\002\t\002\002\t\t\t\t\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\t\t\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\002\t\002\t\t\t\t\t\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\t\002\t\t\t\t\t\t\t\t\t\t\002\t\t\002\002\002\002\002\002\002\002\002\t\002\002\t\t\t\t\t\002\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\002\002\002\002\t\t\t\t\002\002\002\t\002\002\002\t\t\002\002\002\002\002\002\002\t\t\t\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\t\002\002\002\002\002\t\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\t\t\t\t\002\002\t\t\t\t\t\t\t\002\t\002\t\t\t\t\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\t\t\t\t\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\t\t\t\t\002\002\t\t\t\t\t\t\t\002\t\002\t\t\t\t\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\t\t\t\t\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\t\t\t\t\t\t\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\003\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\002\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\002\002\002\002\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\t\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\t\t\t\t\t\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\t\t\t\t\t\t\t\t\t\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\002\t\t\t\t\t\t\002\t\t\002\002\002\t\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\t\t\t\t\t\t\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\t\t\t\t\t\t\002\002\t\t\t\t\t\t\t\t\002\t\002\t\002\t\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\002\t\t\t\t\t\t\t\002\t\002\002\002\t\t\t\002\t\t\t\t\t\t\t\002\002\002\t\t\t\t\002\002\t\t\t\t\t\t\002\002\002\002\t\t\t\t\t\t\t\t\t\t\t\t\t\002\002\002\002\002\t\t\t\002\t\t\t\t\t\t\t\002\002\002"
let __sedlex_table_58 =

let __sedlex_table_63 =
  "\001\002\002\002\002\002\002\002\002\002\002\003\002\002\004"
let __sedlex_table_69 = "\001\000\000\000\000\002"
let __sedlex_table_85 =
  "\001\002\002\002\002\002\002\002\002\002\003\004\003\003\005\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\003\002\006\002\007\b\t\006\n\011\012\r
let __sedlex_table_88 =
  "\001\002\002\002\002\002\002\002\002\002\003\004\003\003\005\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\003\002\006\002\007\002\002\006\002\002\002\002\002\002\b\t\002\002\002\002\002\002\002\002\002\002\n\002\011\012\r
let __sedlex_table_8 =
  "\001\002\002\002\002\002\002\002\002\002\002\003\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\004\002\002\002\002\004\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\005"
let __sedlex_table_20 =
  "\001\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\003"
let __sedlex_table_66 =
  "\001\002\002\002\002\002\002\002\002\002\002\003\002\002\004\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\005\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\006\007"
let __sedlex_table_16 =
  "\001\001\001\001\001\001\001\001\001\001\000\000\000\000\000\000\000\001\001\001\001\001\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\001\001\001\001\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002"
let __sedlex_table_46 =
  "\001\001\001\001\001\001\001\001\001\001\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002"
let __sedlex_table_78 =
  "\001\001\001\001\001\001\001\001\001\001\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\000\000\000\000\000\002"
let __sedlex_table_9 =
  "\001\001\001\001\001\001\001\001\001\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\003"
let __sedlex_table_26 =
  "\001\001\001\001\001\001\001\001\001\001\000\000\000\000\000\000\000\001\001\001\001\001\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\001\001\001\001\001\001\000\000\000\000\000\000\000\003"
let __sedlex_table_34 =
  "\001\001\001\001\001\001\001\001\001\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002"
let __sedlex_table_64 =
  "\001\001\001\001\001\001\001\001\001\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002"
let __sedlex_table_35 = "\001\000\000\000\000\000\000\000\002"
let __sedlex_table_38 =
  "\001\002\002\002\002\002\002\002\002\002\002\003\002\002\004\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\005\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\006\002\002\002\007"
let __sedlex_table_48 =
  "\001\000\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\000\000\003"
let __sedlex_table_87 =
  "\001\002\000\000\000\000\000\000\000\000\000\000\000\002\002\002\002\002\002\002\002\002\002\000\000\000\000\000\000\000\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\000\000\000\000\000\000\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002"
let __sedlex_table_36 =
  "\001\001\001\001\001\001\001\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\003"
let __sedlex_table_7 =
  "\001\001\001\001\001\001\001\001\001\001\000\000\000\000\000\000\000\001\001\001\001\001\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\001\001\001\001\001"
let __sedlex_table_13 = "\001\000\002\003\003\003\003\003\003\003\003\003"
let __sedlex_table_50 =
  "\001\001\001\001\001\001\001\001\001\001\000\000\000\000\000\000\000\001\001\001\001\001\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\001\001\001\001\001\001"
let __sedlex_table_83 =
  "\001\001\001\001\001\001\001\001\001\001\000\002\000\000\000\000\000\001\001\001\001\001\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\001\001\001\001\001"
let __sedlex_table_33 =
  "\001\001\001\001\001\001\001\001\001\001\000\001\001\000\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001"
let __sedlex_table_51 = "\001\000\002\002\002\002\002\002\002\002\002\002"
let __sedlex_table_68 =
  "\001\000\000\000\000\000\000\002\000\002\000\000\003\004\004\004\004\004\004\004\004\004\000\000\000\000\000\000\000\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\000\000\000\000\000\000\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001"
let __sedlex_table_76 = "\001\001\001\001\001\001\001\001\002\002"
let __sedlex_table_4 =
  "\001\001\001\001\001\001\001\001\001\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002"
let __sedlex_table_75 =

let __sedlex_table_80 =

let __sedlex_table_81 =

let __sedlex_table_32 =
  "\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002"
let __sedlex_table_61 =

let __sedlex_table_82 = "\001\000\002"
let __sedlex_table_6 =
  "\001\001\001\001\001\001\001\001\001\001\000\001\001\000\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\000\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001"
let __sedlex_table_24 =
  "\001\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002"
let __sedlex_table_30 = "\001\002\002\002\002\002\002\002\002\002"
let __sedlex_table_25 =
  "\001\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\003"
let __sedlex_table_53 =
  "\001\001\001\001\001\001\001\001\001\001\000\000\000\000\000\000\000\001\001\001\001\001\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\001\001\001\001\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002"
let __sedlex_table_42 =
  "\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002"
let __sedlex_table_19 =
  "\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002"
let __sedlex_table_39 =
  "\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002"
let __sedlex_partition_94 c =
  if c <= 120 then (-1) else if c <= 121 then 0 else (-1)
let __sedlex_partition_50 c =
  if c <= 8191
  then (Char.code (String.unsafe_get __sedlex_table_1 (c - (-1)))) - 1
  else
    if c <= 194559
    then
      (if c <= 69599
       then
         (if c <= 43711
          then
            (if c <= 12703
             then
               (if c <= 11519
                then
                  (if c <= 8489
                   then
                     (if c <= 8454
                      then
                        (if c <= 8304
                         then
                           (if c <= 8238
                            then
                              (if c <= 8231
                               then (if c <= 8202 then 2 else 1)
                               else if c <= 8233 then 3 else 1)
                            else
                              if c <= 8286
                              then (if c <= 8239 then 2 else 1)
                              else if c <= 8287 then 2 else 1)
                         else
                           if c <= 8335
                           then
                             (if c <= 8318
                              then (if c <= 8305 then 8 else 1)
                              else if c <= 8319 then 8 else 1)
                           else
                             if c <= 8449
                             then (if c <= 8348 then 8 else 1)
                             else if c <= 8450 then 8 else 1)
                      else
                        if c <= 8477
                        then
                          (if c <= 8468
                           then
                             (if c <= 8457
                              then (if c <= 8455 then 8 else 1)
                              else if c <= 8467 then 8 else 1)
                           else
                             if c <= 8471
                             then (if c <= 8469 then 8 else 1)
                             else 8)
                        else
                          if c <= 8485
                          then
                            (if c <= 8483
                             then 1
                             else if c <= 8484 then 8 else 1)
                          else
                            if c <= 8487
                            then (if c <= 8486 then 8 else 1)
                            else if c <= 8488 then 8 else 1)
                   else
                     if c <= 8543
                     then
                       (if c <= 8505
                        then 8
                        else
                          if c <= 8516
                          then
                            (if c <= 8507
                             then 1
                             else if c <= 8511 then 8 else 1)
                          else
                            if c <= 8525
                            then (if c <= 8521 then 8 else 1)
                            else if c <= 8526 then 8 else 1)
                     else
                       if c <= 11389
                       then
                         (if c <= 8584
                          then 8
                          else if c <= 11263 then 1 else 8)
                       else
                         if c <= 11498
                         then (if c <= 11492 then 8 else 1)
                         else
                           if c <= 11505
                           then (if c <= 11502 then 8 else 1)
                           else if c <= 11507 then 8 else 1)
                else
                  if c <= 12294
                  then
                    (if c <= 11695
                     then
                       (if c <= 11630
                        then
                          (if c <= 11564
                           then
                             (if c <= 11558
                              then (if c <= 11557 then 8 else 1)
                              else if c <= 11559 then 8 else 1)
                           else
                             if c <= 11567
                             then (if c <= 11565 then 8 else 1)
                             else if c <= 11623 then 8 else 1)
                        else
                          if c <= 11679
                          then
                            (if c <= 11647
                             then (if c <= 11631 then 8 else 1)
                             else if c <= 11670 then 8 else 1)
                          else
                            if c <= 11687
                            then (if c <= 11686 then 8 else 1)
                            else if c <= 11694 then 8 else 1)
                     else
                       if c <= 11727
                       then
                         (if c <= 11711
                          then
                            (if c <= 11703
                             then (if c <= 11702 then 8 else 1)
                             else if c <= 11710 then 8 else 1)
                          else
                            if c <= 11719
                            then (if c <= 11718 then 8 else 1)
                            else if c <= 11726 then 8 else 1)
                       else
                         if c <= 12287
                         then
                           (if c <= 11735
                            then (if c <= 11734 then 8 else 1)
                            else if c <= 11742 then 8 else 1)
                         else
                           if c <= 12292
                           then (if c <= 12288 then 2 else 1)
                           else 8)
                  else
                    if c <= 12442
                    then
                      (if c <= 12343
                       then
                         (if c <= 12320
                          then (if c <= 12295 then 8 else 1)
                          else
                            if c <= 12336
                            then (if c <= 12329 then 8 else 1)
                            else if c <= 12341 then 8 else 1)
                       else
                         if c <= 12348
                         then 8
                         else
                           if c <= 12352
                           then 1
                           else if c <= 12438 then 8 else 1)
                    else
                      if c <= 12539
                      then
                        (if c <= 12447
                         then 8
                         else
                           if c <= 12448
                           then 1
                           else if c <= 12538 then 8 else 1)
                      else
                        if c <= 12548
                        then (if c <= 12543 then 8 else 1)
                        else
                          if c <= 12592
                          then (if c <= 12591 then 8 else 1)
                          else if c <= 12686 then 8 else 1)
             else
               if c <= 42999
               then
                 (if c <= 42653
                  then
                    (if c <= 42239
                     then
                       (if c <= 40981
                        then
                          (if c <= 13311
                           then
                             (if c <= 12783
                              then (if c <= 12735 then 8 else 1)
                              else if c <= 12799 then 8 else 1)
                           else
                             if c <= 19967
                             then (if c <= 19903 then 8 else 1)
                             else 8)
                        else
                          if c <= 42191
                          then (if c <= 42124 then 8 else 1)
                          else if c <= 42237 then 8 else 1)
                     else
                       if c <= 42559
                       then
                         (if c <= 42511
                          then (if c <= 42508 then 8 else 1)
                          else
                            if c <= 42537
                            then (if c <= 42527 then 8 else 1)
                            else if c <= 42539 then 8 else 1)
                       else
                         if c <= 42622
                         then (if c <= 42606 then 8 else 1)
                         else 8)
                  else
                    if c <= 42890
                    then
                      (if c <= 42785
                       then
                         (if c <= 42735
                          then (if c <= 42655 then 1 else 8)
                          else
                            if c <= 42774
                            then 1
                            else if c <= 42783 then 8 else 1)
                       else
                         if c <= 42887
                         then 8
                         else if c <= 42888 then 8 else 1)
                    else
                      if c <= 42962
                      then
                        (if c <= 42954
                         then 8
                         else
                           if c <= 42959
                           then 1
                           else if c <= 42961 then 8 else 1)
                      else
                        if c <= 42993
                        then
                          (if c <= 42964
                           then (if c <= 42963 then 8 else 1)
                           else if c <= 42969 then 8 else 1)
                        else 8)
               else
                 if c <= 43470
                 then
                   (if c <= 43137
                    then
                      (if c <= 43010
                       then
                         (if c <= 43002
                          then 8
                          else if c <= 43009 then 8 else 1)
                       else
                         if c <= 43019
                         then
                           (if c <= 43014
                            then (if c <= 43013 then 8 else 1)
                            else if c <= 43018 then 8 else 1)
                         else
                           if c <= 43071
                           then (if c <= 43042 then 8 else 1)
                           else if c <= 43123 then 8 else 1)
                    else
                      if c <= 43273
                      then
                        (if c <= 43258
                         then
                           (if c <= 43249
                            then (if c <= 43187 then 8 else 1)
                            else if c <= 43255 then 8 else 1)
                         else
                           if c <= 43260
                           then (if c <= 43259 then 8 else 1)
                           else if c <= 43262 then 8 else 1)
                      else
                        if c <= 43359
                        then
                          (if c <= 43311
                           then (if c <= 43301 then 8 else 1)
                           else if c <= 43334 then 8 else 1)
                        else
                          if c <= 43395
                          then (if c <= 43388 then 8 else 1)
                          else if c <= 43442 then 8 else 1)
                 else
                   if c <= 43615
                   then
                     (if c <= 43513
                      then
                        (if c <= 43493
                         then
                           (if c <= 43487
                            then (if c <= 43471 then 8 else 1)
                            else if c <= 43492 then 8 else 1)
                         else if c <= 43503 then 8 else 1)
                      else
                        if c <= 43583
                        then
                          (if c <= 43519
                           then (if c <= 43518 then 8 else 1)
                           else if c <= 43560 then 8 else 1)
                        else
                          if c <= 43587
                          then (if c <= 43586 then 8 else 1)
                          else if c <= 43595 then 8 else 1)
                   else
                     if c <= 43645
                     then
                       (if c <= 43638
                        then 8
                        else
                          if c <= 43641
                          then 1
                          else if c <= 43642 then 8 else 1)
                     else
                       if c <= 43700
                       then
                         (if c <= 43696
                          then (if c <= 43695 then 8 else 1)
                          else if c <= 43697 then 8 else 1)
                       else
                         if c <= 43704
                         then (if c <= 43702 then 8 else 1)
                         else if c <= 43709 then 8 else 1)
          else
            if c <= 66377
            then
              (if c <= 64325
               then
                 (if c <= 43887
                  then
                    (if c <= 43784
                     then
                       (if c <= 43743
                        then
                          (if c <= 43738
                           then
                             (if c <= 43713
                              then (if c <= 43712 then 8 else 1)
                              else if c <= 43714 then 8 else 1)
                           else if c <= 43741 then 8 else 1)
                        else
                          if c <= 43764
                          then
                            (if c <= 43761
                             then (if c <= 43754 then 8 else 1)
                             else 8)
                          else
                            if c <= 43776
                            then 1
                            else if c <= 43782 then 8 else 1)
                     else
                       if c <= 43823
                       then
                         (if c <= 43807
                          then
                            (if c <= 43792
                             then (if c <= 43790 then 8 else 1)
                             else if c <= 43798 then 8 else 1)
                          else
                            if c <= 43815
                            then (if c <= 43814 then 8 else 1)
                            else if c <= 43822 then 8 else 1)
                       else
                         if c <= 43880
                         then
                           (if c <= 43867
                            then (if c <= 43866 then 8 else 1)
                            else 8)
                         else if c <= 43881 then 8 else 1)
                  else
                    if c <= 64274
                    then
                      (if c <= 55242
                       then
                         (if c <= 44031
                          then (if c <= 44002 then 8 else 1)
                          else
                            if c <= 55215
                            then (if c <= 55203 then 8 else 1)
                            else if c <= 55238 then 8 else 1)
                       else
                         if c <= 64111
                         then
                           (if c <= 63743
                            then (if c <= 55291 then 8 else 1)
                            else if c <= 64109 then 8 else 1)
                         else
                           if c <= 64255
                           then (if c <= 64217 then 8 else 1)
                           else if c <= 64262 then 8 else 1)
                    else
                      if c <= 64311
                      then
                        (if c <= 64286
                         then
                           (if c <= 64284
                            then (if c <= 64279 then 8 else 1)
                            else if c <= 64285 then 8 else 1)
                         else
                           if c <= 64297
                           then (if c <= 64296 then 8 else 1)
                           else if c <= 64310 then 8 else 1)
                      else
                        if c <= 64319
                        then
                          (if c <= 64317
                           then (if c <= 64316 then 8 else 1)
                           else if c <= 64318 then 8 else 1)
                        else
                          if c <= 64322
                          then (if c <= 64321 then 8 else 1)
                          else if c <= 64324 then 8 else 1)
               else
                 if c <= 65481
                 then
                   (if c <= 65312
                    then
                      (if c <= 65007
                       then
                         (if c <= 64847
                          then
                            (if c <= 64466
                             then (if c <= 64433 then 8 else 1)
                             else if c <= 64829 then 8 else 1)
                          else
                            if c <= 64913
                            then (if c <= 64911 then 8 else 1)
                            else if c <= 64967 then 8 else 1)
                       else
                         if c <= 65141
                         then
                           (if c <= 65135
                            then (if c <= 65019 then 8 else 1)
                            else if c <= 65140 then 8 else 1)
                         else
                           if c <= 65278
                           then (if c <= 65276 then 8 else 1)
                           else if c <= 65279 then 2 else 1)
                    else
                      if c <= 65437
                      then
                        (if c <= 65381
                         then
                           (if c <= 65344
                            then (if c <= 65338 then 8 else 1)
                            else if c <= 65370 then 8 else 1)
                         else 8)
                      else
                        if c <= 65470
                        then 8
                        else
                          if c <= 65473
                          then 1
                          else if c <= 65479 then 8 else 1)
                 else
                   if c <= 65615
                   then
                     (if c <= 65548
                      then
                        (if c <= 65497
                         then
                           (if c <= 65489
                            then (if c <= 65487 then 8 else 1)
                            else if c <= 65495 then 8 else 1)
                         else
                           if c <= 65535
                           then (if c <= 65500 then 8 else 1)
                           else if c <= 65547 then 8 else 1)
                      else
                        if c <= 65595
                        then
                          (if c <= 65575
                           then (if c <= 65574 then 8 else 1)
                           else if c <= 65594 then 8 else 1)
                        else
                          if c <= 65598
                          then (if c <= 65597 then 8 else 1)
                          else if c <= 65613 then 8 else 1)
                   else
                     if c <= 66207
                     then
                       (if c <= 65855
                        then
                          (if c <= 65663
                           then (if c <= 65629 then 8 else 1)
                           else if c <= 65786 then 8 else 1)
                        else
                          if c <= 66175
                          then (if c <= 65908 then 8 else 1)
                          else if c <= 66204 then 8 else 1)
                     else
                       if c <= 66348
                       then
                         (if c <= 66303
                          then (if c <= 66256 then 8 else 1)
                          else if c <= 66335 then 8 else 1)
                       else 8)
            else
              if c <= 67646
              then
                (if c <= 66963
                 then
                   (if c <= 66717
                    then
                      (if c <= 66463
                       then
                         (if c <= 66383
                          then (if c <= 66378 then 8 else 1)
                          else
                            if c <= 66431
                            then (if c <= 66421 then 8 else 1)
                            else if c <= 66461 then 8 else 1)
                       else
                         if c <= 66512
                         then
                           (if c <= 66503
                            then (if c <= 66499 then 8 else 1)
                            else if c <= 66511 then 8 else 1)
                         else
                           if c <= 66559
                           then (if c <= 66517 then 8 else 1)
                           else 8)
                    else
                      if c <= 66863
                      then
                        (if c <= 66775
                         then
                           (if c <= 66735
                            then 1
                            else if c <= 66771 then 8 else 1)
                         else
                           if c <= 66815
                           then (if c <= 66811 then 8 else 1)
                           else if c <= 66855 then 8 else 1)
                      else
                        if c <= 66939
                        then
                          (if c <= 66927
                           then (if c <= 66915 then 8 else 1)
                           else if c <= 66938 then 8 else 1)
                        else
                          if c <= 66955
                          then (if c <= 66954 then 8 else 1)
                          else if c <= 66962 then 8 else 1)
                 else
                   if c <= 67455
                   then
                     (if c <= 67002
                      then
                        (if c <= 66978
                         then
                           (if c <= 66966
                            then (if c <= 66965 then 8 else 1)
                            else if c <= 66977 then 8 else 1)
                         else
                           if c <= 66994
                           then (if c <= 66993 then 8 else 1)
                           else if c <= 67001 then 8 else 1)
                      else
                        if c <= 67391
                        then
                          (if c <= 67071
                           then (if c <= 67004 then 8 else 1)
                           else if c <= 67382 then 8 else 1)
                        else
                          if c <= 67423
                          then (if c <= 67413 then 8 else 1)
                          else if c <= 67431 then 8 else 1)
                   else
                     if c <= 67591
                     then
                       (if c <= 67505
                        then
                          (if c <= 67462
                           then (if c <= 67461 then 8 else 1)
                           else if c <= 67504 then 8 else 1)
                        else
                          if c <= 67583
                          then (if c <= 67514 then 8 else 1)
                          else if c <= 67589 then 8 else 1)
                     else
                       if c <= 67638
                       then
                         (if c <= 67593
                          then (if c <= 67592 then 8 else 1)
                          else if c <= 67637 then 8 else 1)
                       else
                         if c <= 67643
                         then (if c <= 67640 then 8 else 1)
                         else if c <= 67644 then 8 else 1)
              else
                if c <= 68296
                then
                  (if c <= 68029
                   then
                     (if c <= 67827
                      then
                        (if c <= 67711
                         then
                           (if c <= 67679
                            then (if c <= 67669 then 8 else 1)
                            else if c <= 67702 then 8 else 1)
                         else
                           if c <= 67807
                           then (if c <= 67742 then 8 else 1)
                           else if c <= 67826 then 8 else 1)
                      else
                        if c <= 67871
                        then
                          (if c <= 67839
                           then (if c <= 67829 then 8 else 1)
                           else if c <= 67861 then 8 else 1)
                        else
                          if c <= 67967
                          then (if c <= 67897 then 8 else 1)
                          else if c <= 68023 then 8 else 1)
                   else
                     if c <= 68120
                     then
                       (if c <= 68111
                        then
                          (if c <= 68095
                           then (if c <= 68031 then 8 else 1)
                           else if c <= 68096 then 8 else 1)
                        else
                          if c <= 68116
                          then (if c <= 68115 then 8 else 1)
                          else if c <= 68119 then 8 else 1)
                     else
                       if c <= 68223
                       then
                         (if c <= 68191
                          then (if c <= 68149 then 8 else 1)
                          else if c <= 68220 then 8 else 1)
                       else
                         if c <= 68287
                         then (if c <= 68252 then 8 else 1)
                         else if c <= 68295 then 8 else 1)
                else
                  if c <= 68863
                  then
                    (if c <= 68479
                     then
                       (if c <= 68415
                        then
                          (if c <= 68351
                           then (if c <= 68324 then 8 else 1)
                           else if c <= 68405 then 8 else 1)
                        else
                          if c <= 68447
                          then (if c <= 68437 then 8 else 1)
                          else if c <= 68466 then 8 else 1)
                     else
                       if c <= 68735
                       then
                         (if c <= 68607
                          then (if c <= 68497 then 8 else 1)
                          else if c <= 68680 then 8 else 1)
                       else
                         if c <= 68799
                         then (if c <= 68786 then 8 else 1)
                         else if c <= 68850 then 8 else 1)
                  else
                    if c <= 69414
                    then
                      (if c <= 69295
                       then
                         (if c <= 69247
                          then (if c <= 68899 then 8 else 1)
                          else if c <= 69289 then 8 else 1)
                       else
                         if c <= 69375
                         then (if c <= 69297 then 8 else 1)
                         else if c <= 69404 then 8 else 1)
                    else
                      if c <= 69487
                      then
                        (if c <= 69423
                         then (if c <= 69415 then 8 else 1)
                         else if c <= 69445 then 8 else 1)
                      else
                        if c <= 69551
                        then (if c <= 69505 then 8 else 1)
                        else if c <= 69572 then 8 else 1)
       else
         if c <= 120122
         then
           (if c <= 72348
            then
              (if c <= 70655
               then
                 (if c <= 70162
                  then
                    (if c <= 69958
                     then
                       (if c <= 69762
                        then
                          (if c <= 69744
                           then
                             (if c <= 69634
                              then (if c <= 69622 then 8 else 1)
                              else if c <= 69687 then 8 else 1)
                           else
                             if c <= 69748
                             then (if c <= 69746 then 8 else 1)
                             else if c <= 69749 then 8 else 1)
                        else
                          if c <= 69890
                          then
                            (if c <= 69839
                             then (if c <= 69807 then 8 else 1)
                             else if c <= 69864 then 8 else 1)
                          else
                            if c <= 69955
                            then (if c <= 69926 then 8 else 1)
                            else if c <= 69956 then 8 else 1)
                     else
                       if c <= 70080
                       then
                         (if c <= 70005
                          then
                            (if c <= 69967
                             then (if c <= 69959 then 8 else 1)
                             else if c <= 70002 then 8 else 1)
                          else
                            if c <= 70018
                            then (if c <= 70006 then 8 else 1)
                            else if c <= 70066 then 8 else 1)
                       else
                         if c <= 70107
                         then
                           (if c <= 70105
                            then (if c <= 70084 then 8 else 1)
                            else if c <= 70106 then 8 else 1)
                         else
                           if c <= 70143
                           then (if c <= 70108 then 8 else 1)
                           else if c <= 70161 then 8 else 1)
                  else
                    if c <= 70414
                    then
                      (if c <= 70286
                       then
                         (if c <= 70279
                          then
                            (if c <= 70271
                             then (if c <= 70187 then 8 else 1)
                             else if c <= 70278 then 8 else 1)
                          else
                            if c <= 70281
                            then (if c <= 70280 then 8 else 1)
                            else if c <= 70285 then 8 else 1)
                       else
                         if c <= 70319
                         then
                           (if c <= 70302
                            then (if c <= 70301 then 8 else 1)
                            else if c <= 70312 then 8 else 1)
                         else
                           if c <= 70404
                           then (if c <= 70366 then 8 else 1)
                           else if c <= 70412 then 8 else 1)
                    else
                      if c <= 70452
                      then
                        (if c <= 70441
                         then
                           (if c <= 70418
                            then (if c <= 70416 then 8 else 1)
                            else if c <= 70440 then 8 else 1)
                         else
                           if c <= 70449
                           then (if c <= 70448 then 8 else 1)
                           else if c <= 70451 then 8 else 1)
                      else
                        if c <= 70479
                        then
                          (if c <= 70460
                           then (if c <= 70457 then 8 else 1)
                           else if c <= 70461 then 8 else 1)
                        else
                          if c <= 70492
                          then (if c <= 70480 then 8 else 1)
                          else if c <= 70497 then 8 else 1)
               else
                 if c <= 71934
                 then
                   (if c <= 71167
                    then
                      (if c <= 70851
                       then
                         (if c <= 70750
                          then
                            (if c <= 70726
                             then (if c <= 70708 then 8 else 1)
                             else if c <= 70730 then 8 else 1)
                          else
                            if c <= 70783
                            then (if c <= 70753 then 8 else 1)
                            else if c <= 70831 then 8 else 1)
                       else
                         if c <= 71039
                         then
                           (if c <= 70854
                            then (if c <= 70853 then 8 else 1)
                            else if c <= 70855 then 8 else 1)
                         else
                           if c <= 71127
                           then (if c <= 71086 then 8 else 1)
                           else if c <= 71131 then 8 else 1)
                    else
                      if c <= 71423
                      then
                        (if c <= 71295
                         then
                           (if c <= 71235
                            then (if c <= 71215 then 8 else 1)
                            else if c <= 71236 then 8 else 1)
                         else
                           if c <= 71351
                           then (if c <= 71338 then 8 else 1)
                           else if c <= 71352 then 8 else 1)
                      else
                        if c <= 71679
                        then
                          (if c <= 71487
                           then (if c <= 71450 then 8 else 1)
                           else if c <= 71494 then 8 else 1)
                        else
                          if c <= 71839
                          then (if c <= 71723 then 8 else 1)
                          else if c <= 71903 then 8 else 1)
                 else
                   if c <= 72105
                   then
                     (if c <= 71959
                      then
                        (if c <= 71947
                         then
                           (if c <= 71944
                            then (if c <= 71942 then 8 else 1)
                            else if c <= 71945 then 8 else 1)
                         else
                           if c <= 71956
                           then (if c <= 71955 then 8 else 1)
                           else if c <= 71958 then 8 else 1)
                      else
                        if c <= 72000
                        then
                          (if c <= 71998
                           then (if c <= 71983 then 8 else 1)
                           else if c <= 71999 then 8 else 1)
                        else
                          if c <= 72095
                          then (if c <= 72001 then 8 else 1)
                          else if c <= 72103 then 8 else 1)
                   else
                     if c <= 72202
                     then
                       (if c <= 72162
                        then
                          (if c <= 72160
                           then (if c <= 72144 then 8 else 1)
                           else if c <= 72161 then 8 else 1)
                        else
                          if c <= 72191
                          then (if c <= 72163 then 8 else 1)
                          else if c <= 72192 then 8 else 1)
                     else
                       if c <= 72271
                       then
                         (if c <= 72249
                          then (if c <= 72242 then 8 else 1)
                          else if c <= 72250 then 8 else 1)
                       else
                         if c <= 72283
                         then (if c <= 72272 then 8 else 1)
                         else if c <= 72329 then 8 else 1)
            else
              if c <= 94031
              then
                (if c <= 73727
                 then
                   (if c <= 72970
                    then
                      (if c <= 72767
                       then
                         (if c <= 72703
                          then
                            (if c <= 72367
                             then (if c <= 72349 then 8 else 1)
                             else if c <= 72440 then 8 else 1)
                          else
                            if c <= 72713
                            then (if c <= 72712 then 8 else 1)
                            else if c <= 72750 then 8 else 1)
                       else
                         if c <= 72959
                         then
                           (if c <= 72817
                            then (if c <= 72768 then 8 else 1)
                            else if c <= 72847 then 8 else 1)
                         else
                           if c <= 72967
                           then (if c <= 72966 then 8 else 1)
                           else if c <= 72969 then 8 else 1)
                    else
                      if c <= 73065
                      then
                        (if c <= 73055
                         then
                           (if c <= 73029
                            then (if c <= 73008 then 8 else 1)
                            else if c <= 73030 then 8 else 1)
                         else
                           if c <= 73062
                           then (if c <= 73061 then 8 else 1)
                           else if c <= 73064 then 8 else 1)
                      else
                        if c <= 73439
                        then
                          (if c <= 73111
                           then (if c <= 73097 then 8 else 1)
                           else if c <= 73112 then 8 else 1)
                        else
                          if c <= 73647
                          then (if c <= 73458 then 8 else 1)
                          else if c <= 73648 then 8 else 1)
                 else
                   if c <= 92783
                   then
                     (if c <= 77823
                      then
                        (if c <= 74879
                         then
                           (if c <= 74751
                            then (if c <= 74649 then 8 else 1)
                            else if c <= 74862 then 8 else 1)
                         else
                           if c <= 77711
                           then (if c <= 75075 then 8 else 1)
                           else if c <= 77808 then 8 else 1)
                      else
                        if c <= 92159
                        then
                          (if c <= 82943
                           then (if c <= 78894 then 8 else 1)
                           else if c <= 83526 then 8 else 1)
                        else
                          if c <= 92735
                          then (if c <= 92728 then 8 else 1)
                          else if c <= 92766 then 8 else 1)
                   else
                     if c <= 93026
                     then
                       (if c <= 92927
                        then
                          (if c <= 92879
                           then (if c <= 92862 then 8 else 1)
                           else if c <= 92909 then 8 else 1)
                        else
                          if c <= 92991
                          then (if c <= 92975 then 8 else 1)
                          else if c <= 92995 then 8 else 1)
                     else
                       if c <= 93759
                       then
                         (if c <= 93052
                          then (if c <= 93047 then 8 else 1)
                          else if c <= 93071 then 8 else 1)
                       else
                         if c <= 93951
                         then (if c <= 93823 then 8 else 1)
                         else if c <= 94026 then 8 else 1)
              else
                if c <= 113791
                then
                  (if c <= 110580
                   then
                     (if c <= 94207
                      then
                        (if c <= 94175
                         then
                           (if c <= 94098
                            then (if c <= 94032 then 8 else 1)
                            else if c <= 94111 then 8 else 1)
                         else
                           if c <= 94178
                           then (if c <= 94177 then 8 else 1)
                           else if c <= 94179 then 8 else 1)
                      else
                        if c <= 101631
                        then
                          (if c <= 100351
                           then (if c <= 100343 then 8 else 1)
                           else if c <= 101589 then 8 else 1)
                        else
                          if c <= 110575
                          then (if c <= 101640 then 8 else 1)
                          else if c <= 110579 then 8 else 1)
                   else
                     if c <= 110947
                     then
                       (if c <= 110591
                        then
                          (if c <= 110588
                           then (if c <= 110587 then 8 else 1)
                           else if c <= 110590 then 8 else 1)
                        else
                          if c <= 110927
                          then (if c <= 110882 then 8 else 1)
                          else if c <= 110930 then 8 else 1)
                     else
                       if c <= 113663
                       then
                         (if c <= 110959
                          then (if c <= 110951 then 8 else 1)
                          else if c <= 111355 then 8 else 1)
                       else
                         if c <= 113775
                         then (if c <= 113770 then 8 else 1)
                         else if c <= 113788 then 8 else 1)
                else
                  if c <= 119981
                  then
                    (if c <= 119965
                     then
                       (if c <= 119807
                        then
                          (if c <= 113807
                           then (if c <= 113800 then 8 else 1)
                           else if c <= 113817 then 8 else 1)
                        else
                          if c <= 119893
                          then (if c <= 119892 then 8 else 1)
                          else if c <= 119964 then 8 else 1)
                     else
                       if c <= 119972
                       then
                         (if c <= 119969
                          then (if c <= 119967 then 8 else 1)
                          else if c <= 119970 then 8 else 1)
                       else
                         if c <= 119976
                         then (if c <= 119974 then 8 else 1)
                         else if c <= 119980 then 8 else 1)
                  else
                    if c <= 120070
                    then
                      (if c <= 119996
                       then
                         (if c <= 119994
                          then (if c <= 119993 then 8 else 1)
                          else if c <= 119995 then 8 else 1)
                       else
                         if c <= 120004
                         then (if c <= 120003 then 8 else 1)
                         else if c <= 120069 then 8 else 1)
                    else
                      if c <= 120085
                      then
                        (if c <= 120076
                         then (if c <= 120074 then 8 else 1)
                         else if c <= 120084 then 8 else 1)
                      else
                        if c <= 120093
                        then (if c <= 120092 then 8 else 1)
                        else if c <= 120121 then 8 else 1)
         else
           if c <= 131071
           then
             (if c <= 126468
              then
                (if c <= 122623
                 then
                   (if c <= 120571
                    then
                      (if c <= 120145
                       then
                         (if c <= 120133
                          then
                            (if c <= 120127
                             then (if c <= 120126 then 8 else 1)
                             else if c <= 120132 then 8 else 1)
                          else
                            if c <= 120137
                            then (if c <= 120134 then 8 else 1)
                            else if c <= 120144 then 8 else 1)
                       else
                         if c <= 120513
                         then
                           (if c <= 120487
                            then (if c <= 120485 then 8 else 1)
                            else if c <= 120512 then 8 else 1)
                         else
                           if c <= 120539
                           then (if c <= 120538 then 8 else 1)
                           else if c <= 120570 then 8 else 1)
                    else
                      if c <= 120687
                      then
                        (if c <= 120629
                         then
                           (if c <= 120597
                            then (if c <= 120596 then 8 else 1)
                            else if c <= 120628 then 8 else 1)
                         else
                           if c <= 120655
                           then (if c <= 120654 then 8 else 1)
                           else if c <= 120686 then 8 else 1)
                      else
                        if c <= 120745
                        then
                          (if c <= 120713
                           then (if c <= 120712 then 8 else 1)
                           else if c <= 120744 then 8 else 1)
                        else
                          if c <= 120771
                          then (if c <= 120770 then 8 else 1)
                          else if c <= 120779 then 8 else 1)
                 else
                   if c <= 124895
                   then
                     (if c <= 123190
                      then
                        (if c <= 122654
                         then 8
                         else
                           if c <= 123135
                           then 1
                           else if c <= 123180 then 8 else 1)
                      else
                        if c <= 123535
                        then
                          (if c <= 123213
                           then (if c <= 123197 then 8 else 1)
                           else if c <= 123214 then 8 else 1)
                        else
                          if c <= 123583
                          then (if c <= 123565 then 8 else 1)
                          else if c <= 123627 then 8 else 1)
                   else
                     if c <= 124927
                     then
                       (if c <= 124908
                        then
                          (if c <= 124903
                           then (if c <= 124902 then 8 else 1)
                           else if c <= 124907 then 8 else 1)
                        else
                          if c <= 124911
                          then (if c <= 124910 then 8 else 1)
                          else if c <= 124926 then 8 else 1)
                     else
                       if c <= 125258
                       then
                         (if c <= 125183
                          then (if c <= 125124 then 8 else 1)
                          else if c <= 125251 then 8 else 1)
                       else
                         if c <= 126463
                         then (if c <= 125259 then 8 else 1)
                         else if c <= 126467 then 8 else 1)
              else
                if c <= 126552
                then
                  (if c <= 126529
                   then
                     (if c <= 126504
                      then
                        (if c <= 126499
                         then
                           (if c <= 126496
                            then (if c <= 126495 then 8 else 1)
                            else if c <= 126498 then 8 else 1)
                         else
                           if c <= 126502
                           then (if c <= 126500 then 8 else 1)
                           else if c <= 126503 then 8 else 1)
                      else
                        if c <= 126520
                        then
                          (if c <= 126515
                           then (if c <= 126514 then 8 else 1)
                           else if c <= 126519 then 8 else 1)
                        else
                          if c <= 126522
                          then (if c <= 126521 then 8 else 1)
                          else if c <= 126523 then 8 else 1)
                   else
                     if c <= 126540
                     then
                       (if c <= 126536
                        then
                          (if c <= 126534
                           then (if c <= 126530 then 8 else 1)
                           else if c <= 126535 then 8 else 1)
                        else
                          if c <= 126538
                          then (if c <= 126537 then 8 else 1)
                          else if c <= 126539 then 8 else 1)
                     else
                       if c <= 126547
                       then
                         (if c <= 126544
                          then (if c <= 126543 then 8 else 1)
                          else if c <= 126546 then 8 else 1)
                       else
                         if c <= 126550
                         then (if c <= 126548 then 8 else 1)
                         else if c <= 126551 then 8 else 1)
                else
                  if c <= 126579
                  then
                    (if c <= 126560
                     then
                       (if c <= 126556
                        then
                          (if c <= 126554
                           then (if c <= 126553 then 8 else 1)
                           else if c <= 126555 then 8 else 1)
                        else
                          if c <= 126558
                          then (if c <= 126557 then 8 else 1)
                          else if c <= 126559 then 8 else 1)
                     else
                       if c <= 126566
                       then
                         (if c <= 126563
                          then (if c <= 126562 then 8 else 1)
                          else if c <= 126564 then 8 else 1)
                       else
                         if c <= 126571
                         then (if c <= 126570 then 8 else 1)
                         else if c <= 126578 then 8 else 1)
                  else
                    if c <= 126602
                    then
                      (if c <= 126589
                       then
                         (if c <= 126584
                          then (if c <= 126583 then 8 else 1)
                          else if c <= 126588 then 8 else 1)
                       else
                         if c <= 126591
                         then (if c <= 126590 then 8 else 1)
                         else if c <= 126601 then 8 else 1)
                    else
                      if c <= 126628
                      then
                        (if c <= 126624
                         then (if c <= 126619 then 8 else 1)
                         else if c <= 126627 then 8 else 1)
                      else
                        if c <= 126634
                        then (if c <= 126633 then 8 else 1)
                        else if c <= 126651 then 8 else 1)
           else
             if c <= 183983
             then
               (if c <= 177983
                then
                  (if c <= 173823
                   then (if c <= 173791 then 8 else 1)
                   else if c <= 177976 then 8 else 1)
                else
                  if c <= 178207
                  then (if c <= 178205 then 8 else 1)
                  else if c <= 183969 then 8 else 1)
             else if c <= 191456 then 8 else 1)
    else (-1)
let __sedlex_partition_58 c =
  if c <= 45 then (-1) else if c <= 46 then 0 else (-1)
let __sedlex_partition_51 c =
  if c <= 8
  then (-1)
  else
    if c <= 5760
    then (Char.code (String.unsafe_get __sedlex_table_2 (c - 9))) - 1
    else
      if c <= 8191
      then (-1)
      else
        if c <= 65279
        then
          (if c <= 12288
           then
             (if c <= 8239
              then (if c <= 8202 then 0 else if c <= 8238 then (-1) else 0)
              else
                if c <= 8286
                then (-1)
                else if c <= 8287 then 0 else if c <= 12287 then (-1) else 0)
           else if c <= 65278 then (-1) else 0)
        else (-1)
let __sedlex_partition_21 c =
  if c <= (-1)
  then (-1)
  else
    if c <= 95
    then (Char.code (String.unsafe_get __sedlex_table_3 c)) - 1
    else if c <= 96 then (-1) else 0
let __sedlex_partition_91 c =
  if c <= 63 then (-1) else if c <= 64 then 0 else (-1)
let __sedlex_partition_112 c =
  if c <= 47
  then (-1)
  else
    if c <= 120
    then (Char.code (String.unsafe_get __sedlex_table_4 (c - 48))) - 1
    else (-1)
let __sedlex_partition_33 c =
  if c <= 47 then (-1) else if c <= 57 then 0 else (-1)
let __sedlex_partition_102 c =
  if c <= 91
  then (-1)
  else
    if c <= 93
    then (Char.code (String.unsafe_get __sedlex_table_5 (c - 92))) - 1
    else (-1)
let __sedlex_partition_104 c =
  if c <= (-1)
  then (-1)
  else
    if c <= 90
    then (Char.code (String.unsafe_get __sedlex_table_6 c)) - 1
    else
      if c <= 92
      then (-1)
      else if c <= 8231 then 0 else if c <= 8233 then (-1) else 0
let __sedlex_partition_4 c =
  if c <= 47
  then (-1)
  else
    if c <= 102
    then (Char.code (String.unsafe_get __sedlex_table_7 (c - 48))) - 1
    else (-1)
let __sedlex_partition_18 c =
  if c <= 92
  then (Char.code (String.unsafe_get __sedlex_table_8 (c - (-1)))) - 1
  else 1
let __sedlex_partition_42 c =
  if c <= 47
  then (-1)
  else
    if c <= 110
    then (Char.code (String.unsafe_get __sedlex_table_9 (c - 48))) - 1
    else (-1)
let __sedlex_partition_126 c =
  if c <= 61 then (-1) else if c <= 62 then 0 else (-1)
let __sedlex_partition_128 c =
  if c <= 123 then (-1) else if c <= 124 then 0 else (-1)
let __sedlex_partition_113 c =
  if c <= 47
  then (-1)
  else
    if c <= 59
    then (Char.code (String.unsafe_get __sedlex_table_10 (c - 48))) - 1
    else (-1)
let __sedlex_partition_115 c =
  if c <= 35
  then (-1)
  else
    if c <= 122
    then (Char.code (String.unsafe_get __sedlex_table_11 (c - 36))) - 1
    else (-1)
let __sedlex_partition_34 c =
  if c <= 87
  then (-1)
  else
    if c <= 120
    then (Char.code (String.unsafe_get __sedlex_table_12 (c - 88))) - 1
    else (-1)
let __sedlex_partition_37 c =
  if c <= 45
  then (-1)
  else
    if c <= 57
    then (Char.code (String.unsafe_get __sedlex_table_13 (c - 46))) - 1
    else (-1)
let __sedlex_partition_110 c =
  if c <= (-1)
  then (-1)
  else
    if c <= 122
    then (Char.code (String.unsafe_get __sedlex_table_14 c)) - 1
    else
      if c <= 123
      then (-1)
      else if c <= 8231 then 0 else if c <= 8233 then (-1) else 0
let __sedlex_partition_84 c =
  if c <= 35
  then (-1)
  else
    if c <= 122
    then (Char.code (String.unsafe_get __sedlex_table_15 (c - 36))) - 1
    else (-1)
let __sedlex_partition_5 c =
  if c <= 47
  then (-1)
  else
    if c <= 125
    then (Char.code (String.unsafe_get __sedlex_table_16 (c - 48))) - 1
    else (-1)
let __sedlex_partition_62 c =
  if c <= 35
  then (-1)
  else
    if c <= 122
    then (Char.code (String.unsafe_get __sedlex_table_17 (c - 36))) - 1
    else (-1)
let __sedlex_partition_43 c =
  if c <= 45
  then (-1)
  else
    if c <= 101
    then (Char.code (String.unsafe_get __sedlex_table_18 (c - 46))) - 1
    else (-1)
let __sedlex_partition_56 c =
  if c <= 42
  then (-1)
  else
    if c <= 61
    then (Char.code (String.unsafe_get __sedlex_table_19 (c - 43))) - 1
    else (-1)
let __sedlex_partition_7 c =
  if c <= 92
  then (Char.code (String.unsafe_get __sedlex_table_20 (c - (-1)))) - 1
  else 1
let __sedlex_partition_19 c =
  if c <= (-1)
  then (-1)
  else
    if c <= 91
    then (Char.code (String.unsafe_get __sedlex_table_21 c)) - 1
    else if c <= 92 then (-1) else 0
let __sedlex_partition_105 c =
  if c <= 35
  then (-1)
  else
    if c <= 122
    then (Char.code (String.unsafe_get __sedlex_table_22 (c - 36))) - 1
    else (-1)
let __sedlex_partition_57 c =
  if c <= 44
  then (-1)
  else
    if c <= 61
    then (Char.code (String.unsafe_get __sedlex_table_23 (c - 45))) - 1
    else (-1)
let __sedlex_partition_123 c =
  if c <= 103 then (-1) else if c <= 104 then 0 else (-1)
let __sedlex_partition_28 c =
  if c <= 47
  then (-1)
  else
    if c <= 95
    then (Char.code (String.unsafe_get __sedlex_table_24 (c - 48))) - 1
    else (-1)
let __sedlex_partition_27 c =
  if c <= 47
  then (-1)
  else
    if c <= 110
    then (Char.code (String.unsafe_get __sedlex_table_25 (c - 48))) - 1
    else (-1)
let __sedlex_partition_35 c =
  if c <= 47
  then (-1)
  else
    if c <= 110
    then (Char.code (String.unsafe_get __sedlex_table_26 (c - 48))) - 1
    else (-1)
let __sedlex_partition_79 c =
  if c <= 35
  then (-1)
  else
    if c <= 122
    then (Char.code (String.unsafe_get __sedlex_table_27 (c - 36))) - 1
    else (-1)
let __sedlex_partition_65 c =
  if c <= 8
  then (-1)
  else
    if c <= 5760
    then (Char.code (String.unsafe_get __sedlex_table_28 (c - 9))) - 1
    else
      if c <= 8191
      then (-1)
      else
        if c <= 65279
        then
          (if c <= 12288
           then
             (if c <= 8239
              then (if c <= 8202 then 0 else if c <= 8238 then (-1) else 0)
              else
                if c <= 8286
                then (-1)
                else if c <= 8287 then 0 else if c <= 12287 then (-1) else 0)
           else if c <= 65278 then (-1) else 0)
        else (-1)
let __sedlex_partition_26 c =
  if c <= 47 then (-1) else if c <= 49 then 0 else (-1)
let __sedlex_partition_31 c =
  if c <= 47
  then (-1)
  else
    if c <= 95
    then (Char.code (String.unsafe_get __sedlex_table_29 (c - 48))) - 1
    else (-1)
let __sedlex_partition_40 c =
  if c <= 47
  then (-1)
  else
    if c <= 57
    then (Char.code (String.unsafe_get __sedlex_table_30 (c - 48))) - 1
    else (-1)
let __sedlex_partition_86 c =
  if c <= 35
  then (-1)
  else
    if c <= 122
    then (Char.code (String.unsafe_get __sedlex_table_31 (c - 36))) - 1
    else (-1)
let __sedlex_partition_93 c =
  if c <= 114 then (-1) else if c <= 115 then 0 else (-1)
let __sedlex_partition_52 c =
  if c <= 60 then (-1) else if c <= 61 then 0 else (-1)
let __sedlex_partition_127 c =
  if c <= 41
  then (-1)
  else
    if c <= 63
    then (Char.code (String.unsafe_get __sedlex_table_32 (c - 42))) - 1
    else (-1)
let __sedlex_partition_10 c =
  if c <= (-1)
  then (-1)
  else
    if c <= 41
    then (Char.code (String.unsafe_get __sedlex_table_33 c)) - 1
    else
      if c <= 42
      then (-1)
      else if c <= 8231 then 0 else if c <= 8233 then (-1) else 0
let __sedlex_partition_88 c =
  if c <= 59
  then (-1)
  else
    if c <= 61
    then (Char.code (String.unsafe_get __sedlex_table_5 (c - 60))) - 1
    else (-1)
let __sedlex_partition_41 c =
  if c <= 47
  then (-1)
  else
    if c <= 110
    then (Char.code (String.unsafe_get __sedlex_table_34 (c - 48))) - 1
    else (-1)
let __sedlex_partition_92 c =
  if c <= 96
  then (-1)
  else
    if c <= 105
    then (Char.code (String.unsafe_get __sedlex_table_35 (c - 97))) - 1
    else (-1)
let __sedlex_partition_30 c =
  if c <= 47
  then (-1)
  else
    if c <= 110
    then (Char.code (String.unsafe_get __sedlex_table_36 (c - 48))) - 1
    else (-1)
let __sedlex_partition_89 c =
  if c <= 60
  then (-1)
  else
    if c <= 62
    then (Char.code (String.unsafe_get __sedlex_table_5 (c - 61))) - 1
    else (-1)
let __sedlex_partition_22 c =
  if c <= 122 then (-1) else if c <= 123 then 0 else (-1)
let __sedlex_partition_25 c =
  if c <= 65
  then (-1)
  else
    if c <= 98
    then (Char.code (String.unsafe_get __sedlex_table_12 (c - 66))) - 1
    else (-1)
let __sedlex_partition_63 c =
  if c <= 35
  then (-1)
  else
    if c <= 122
    then (Char.code (String.unsafe_get __sedlex_table_37 (c - 36))) - 1
    else (-1)
let __sedlex_partition_20 c =
  if c <= 96
  then (Char.code (String.unsafe_get __sedlex_table_38 (c - (-1)))) - 1
  else 1
let __sedlex_partition_96 c =
  if c <= 115 then (-1) else if c <= 116 then 0 else (-1)
let __sedlex_partition_17 c =
  if c <= 47 then (-1) else if c <= 55 then 0 else (-1)
let __sedlex_partition_72 c =
  if c <= 109 then (-1) else if c <= 110 then 0 else (-1)
let __sedlex_partition_99 c =
  if c <= 60
  then (-1)
  else
    if c <= 124
    then (Char.code (String.unsafe_get __sedlex_table_39 (c - 61))) - 1
    else (-1)
let __sedlex_partition_68 c =
  if c <= 110 then (-1) else if c <= 111 then 0 else (-1)
let __sedlex_partition_73 c =
  if c <= 98 then (-1) else if c <= 99 then 0 else (-1)
let __sedlex_partition_24 c =
  if c <= 47 then (-1) else if c <= 48 then 0 else (-1)
let __sedlex_partition_45 c =
  if c <= 45
  then (-1)
  else
    if c <= 101
    then (Char.code (String.unsafe_get __sedlex_table_40 (c - 46))) - 1
    else (-1)
let __sedlex_partition_29 c =
  if c <= 78
  then (-1)
  else
    if c <= 111
    then (Char.code (String.unsafe_get __sedlex_table_12 (c - 79))) - 1
    else (-1)
let __sedlex_partition_129 c =
  if c <= 123
  then (-1)
  else
    if c <= 125
    then (Char.code (String.unsafe_get __sedlex_table_5 (c - 124))) - 1
    else (-1)
let __sedlex_partition_23 c =
  if c <= 41 then (-1) else if c <= 42 then 0 else (-1)
let __sedlex_partition_16 c =
  if c <= 120
  then (Char.code (String.unsafe_get __sedlex_table_41 (c - (-1)))) - 1
  else if c <= 8233 then (if c <= 8231 then 1 else 2) else 1
let __sedlex_partition_53 c =
  if c <= 32 then (-1) else if c <= 33 then 0 else (-1)
let __sedlex_partition_54 c =
  if c <= 37
  then (-1)
  else
    if c <= 61
    then (Char.code (String.unsafe_get __sedlex_table_42 (c - 38))) - 1
    else (-1)
let __sedlex_partition_106 c =
  if c <= (-1)
  then (-1)
  else
    if c <= 13
    then (Char.code (String.unsafe_get __sedlex_table_43 c)) - 1
    else if c <= 8233 then (if c <= 8231 then 0 else 1) else 0
let __sedlex_partition_77 c =
  if c <= 35
  then (-1)
  else
    if c <= 122
    then (Char.code (String.unsafe_get __sedlex_table_44 (c - 36))) - 1
    else (-1)
let __sedlex_partition_9 c =
  if c <= (-1)
  then (-1)
  else
    if c <= 42
    then (Char.code (String.unsafe_get __sedlex_table_45 c)) - 1
    else if c <= 8233 then (if c <= 8231 then 0 else 1) else 0
let __sedlex_partition_44 c =
  if c <= 47
  then (-1)
  else
    if c <= 101
    then (Char.code (String.unsafe_get __sedlex_table_46 (c - 48))) - 1
    else (-1)
let __sedlex_partition_59 c =
  if c <= 35
  then (-1)
  else
    if c <= 122
    then (Char.code (String.unsafe_get __sedlex_table_47 (c - 36))) - 1
    else (-1)
let __sedlex_partition_55 c =
  if c <= 41
  then (-1)
  else
    if c <= 61
    then (Char.code (String.unsafe_get __sedlex_table_48 (c - 42))) - 1
    else (-1)
let __sedlex_partition_95 c =
  if c <= 72 then (-1) else if c <= 73 then 0 else (-1)
let __sedlex_partition_118 c =
  if c <= (-1)
  then (-1)
  else
    if c <= 37
    then (Char.code (String.unsafe_get __sedlex_table_49 c)) - 1
    else
      if c <= 39
      then (-1)
      else if c <= 8231 then 0 else if c <= 8233 then (-1) else 0
let __sedlex_partition_70 c =
  if c <= 44 then (-1) else if c <= 45 then 0 else (-1)
let __sedlex_partition_71 c =
  if c <= 104 then (-1) else if c <= 105 then 0 else (-1)
let __sedlex_partition_67 c =
  if c <= 107 then (-1) else if c <= 108 then 0 else (-1)
let __sedlex_partition_74 c =
  if c <= 99 then (-1) else if c <= 100 then 0 else (-1)
let __sedlex_partition_36 c =
  if c <= 47
  then (-1)
  else
    if c <= 102
    then (Char.code (String.unsafe_get __sedlex_table_50 (c - 48))) - 1
    else (-1)
let __sedlex_partition_97 c =
  if c <= 113 then (-1) else if c <= 114 then 0 else (-1)
let __sedlex_partition_47 c =
  if c <= 45
  then (-1)
  else
    if c <= 57
    then (Char.code (String.unsafe_get __sedlex_table_51 (c - 46))) - 1
    else (-1)
let __sedlex_partition_80 c =
  if c <= 35
  then (-1)
  else
    if c <= 122
    then (Char.code (String.unsafe_get __sedlex_table_52 (c - 36))) - 1
    else (-1)
let __sedlex_partition_3 c =
  if c <= 47
  then (-1)
  else
    if c <= 123
    then (Char.code (String.unsafe_get __sedlex_table_53 (c - 48))) - 1
    else (-1)
let __sedlex_partition_90 c =
  if c <= 45
  then (-1)
  else
    if c <= 63
    then (Char.code (String.unsafe_get __sedlex_table_54 (c - 46))) - 1
    else (-1)
let __sedlex_partition_8 c =
  if c <= (-1)
  then (-1)
  else if c <= 91 then 0 else if c <= 92 then (-1) else 0
let __sedlex_partition_15 c =
  if c <= (-1)
  then (-1)
  else
    if c <= 12
    then (Char.code (String.unsafe_get __sedlex_table_55 c)) - 1
    else
      if c <= 13
      then (-1)
      else if c <= 8231 then 0 else if c <= 8233 then (-1) else 0
let __sedlex_partition_76 c =
  if c <= 35
  then (-1)
  else
    if c <= 122
    then (Char.code (String.unsafe_get __sedlex_table_56 (c - 36))) - 1
    else (-1)
let __sedlex_partition_101 c =
  if c <= (-1)
  then (-1)
  else
    if c <= 91
    then (Char.code (String.unsafe_get __sedlex_table_57 c)) - 1
    else
      if c <= 93
      then (-1)
      else if c <= 8231 then 0 else if c <= 8233 then (-1) else 0
let __sedlex_partition_107 c =
  if c <= 8191
  then (Char.code (String.unsafe_get __sedlex_table_58 (c - (-1)))) - 1
  else
    if c <= 12287
    then
      (if c <= 8238
       then
         (if c <= 8231
          then (if c <= 8202 then 2 else 1)
          else if c <= 8233 then 3 else 1)
       else
         if c <= 8286
         then (if c <= 8239 then 2 else 1)
         else if c <= 8287 then 2 else 1)
    else
      if c <= 65278
      then (if c <= 12288 then 2 else 1)
      else if c <= 65279 then 2 else 1
let __sedlex_partition_11 c =
  if c <= 9 then (-1) else if c <= 10 then 0 else (-1)
let __sedlex_partition_82 c =
  if c <= 35
  then (-1)
  else
    if c <= 122
    then (Char.code (String.unsafe_get __sedlex_table_59 (c - 36))) - 1
    else (-1)
let __sedlex_partition_98 c =
  if c <= 96 then (-1) else if c <= 97 then 0 else (-1)
let __sedlex_partition_64 c =
  if c <= 35
  then (-1)
  else
    if c <= 122
    then (Char.code (String.unsafe_get __sedlex_table_60 (c - 36))) - 1
    else (-1)
let __sedlex_partition_130 c =
  if c <= 35
  then (-1)
  else
    if c <= 8188
    then (Char.code (String.unsafe_get __sedlex_table_61 (c - 36))) - 1
    else
      if c <= 8304
      then (-1)
      else
        if c <= 201546
        then
          (if c <= 69864
           then
             (if c <= 43754
              then
                (if c <= 40981
                 then
                   (if c <= 11623
                    then
                      (if c <= 8504
                       then
                         (if c <= 8472
                          then
                            (if c <= 8450
                             then
                               (if c <= 8319
                                then
                                  (if c <= 8305
                                   then 0
                                   else if c <= 8318 then (-1) else 0)
                                else
                                  if c <= 8335
                                  then (-1)
                                  else
                                    if c <= 8348
                                    then 0
                                    else if c <= 8449 then (-1) else 0)
                             else
                               if c <= 8454
                               then (-1)
                               else
                                 if c <= 8467
                                 then
                                   (if c <= 8455
                                    then 0
                                    else if c <= 8457 then (-1) else 0)
                                 else
                                   if c <= 8468
                                   then (-1)
                                   else
                                     if c <= 8469
                                     then 0
                                     else if c <= 8471 then (-1) else 0)
                          else
                            if c <= 8488
                            then
                              (if c <= 8484
                               then
                                 (if c <= 8477
                                  then 0
                                  else if c <= 8483 then (-1) else 0)
                               else
                                 if c <= 8485
                                 then (-1)
                                 else
                                   if c <= 8486
                                   then 0
                                   else if c <= 8487 then (-1) else 0)
                            else if c <= 8489 then (-1) else 0)
                       else
                         if c <= 11387
                         then
                           (if c <= 8526
                            then
                              (if c <= 8511
                               then
                                 (if c <= 8505
                                  then 0
                                  else if c <= 8507 then (-1) else 0)
                               else
                                 if c <= 8516
                                 then (-1)
                                 else
                                   if c <= 8521
                                   then 0
                                   else if c <= 8525 then (-1) else 0)
                            else
                              if c <= 8543
                              then (-1)
                              else
                                if c <= 8580
                                then 0
                                else
                                  if c <= 8584
                                  then 0
                                  else if c <= 11263 then (-1) else 0)
                         else
                           if c <= 11507
                           then
                             (if c <= 11492
                              then 0
                              else
                                if c <= 11498
                                then (-1)
                                else
                                  if c <= 11502
                                  then 0
                                  else if c <= 11505 then (-1) else 0)
                           else
                             if c <= 11519
                             then (-1)
                             else
                               if c <= 11559
                               then
                                 (if c <= 11557
                                  then 0
                                  else if c <= 11558 then (-1) else 0)
                               else
                                 if c <= 11564
                                 then (-1)
                                 else
                                   if c <= 11565
                                   then 0
                                   else if c <= 11567 then (-1) else 0)
                    else
                      if c <= 11630
                      then (-1)
                      else
                        if c <= 12346
                        then
                          (if c <= 11726
                           then
                             (if c <= 11694
                              then
                                (if c <= 11670
                                 then
                                   (if c <= 11631
                                    then 0
                                    else if c <= 11647 then (-1) else 0)
                                 else
                                   if c <= 11679
                                   then (-1)
                                   else
                                     if c <= 11686
                                     then 0
                                     else if c <= 11687 then (-1) else 0)
                              else
                                if c <= 11695
                                then (-1)
                                else
                                  if c <= 11710
                                  then
                                    (if c <= 11702
                                     then 0
                                     else if c <= 11703 then (-1) else 0)
                                  else
                                    if c <= 11711
                                    then (-1)
                                    else
                                      if c <= 11718
                                      then 0
                                      else if c <= 11719 then (-1) else 0)
                           else
                             if c <= 11727
                             then (-1)
                             else
                               if c <= 12294
                               then
                                 (if c <= 11742
                                  then
                                    (if c <= 11734
                                     then 0
                                     else if c <= 11735 then (-1) else 0)
                                  else if c <= 12292 then (-1) else 0)
                               else
                                 if c <= 12329
                                 then
                                   (if c <= 12295
                                    then 0
                                    else if c <= 12320 then (-1) else 0)
                                 else
                                   if c <= 12336
                                   then (-1)
                                   else
                                     if c <= 12341
                                     then 0
                                     else if c <= 12343 then (-1) else 0)
                        else
                          if c <= 12542
                          then
                            (if c <= 12444
                             then
                               (if c <= 12348
                                then 0
                                else
                                  if c <= 12352
                                  then (-1)
                                  else
                                    if c <= 12438
                                    then 0
                                    else if c <= 12442 then (-1) else 0)
                             else
                               if c <= 12447
                               then 0
                               else
                                 if c <= 12448
                                 then (-1)
                                 else
                                   if c <= 12538
                                   then 0
                                   else if c <= 12539 then (-1) else 0)
                          else
                            if c <= 12735
                            then
                              (if c <= 12591
                               then
                                 (if c <= 12543
                                  then 0
                                  else if c <= 12548 then (-1) else 0)
                               else
                                 if c <= 12592
                                 then (-1)
                                 else
                                   if c <= 12686
                                   then 0
                                   else if c <= 12703 then (-1) else 0)
                            else
                              if c <= 12783
                              then (-1)
                              else
                                if c <= 19903
                                then
                                  (if c <= 12799
                                   then 0
                                   else if c <= 13311 then (-1) else 0)
                                else if c <= 19967 then (-1) else 0)
                 else
                   if c <= 43013
                   then
                     (if c <= 42863
                      then
                        (if c <= 42605
                         then
                           (if c <= 42507
                            then
                              (if c <= 42231
                               then
                                 (if c <= 42124
                                  then 0
                                  else if c <= 42191 then (-1) else 0)
                               else
                                 if c <= 42237
                                 then 0
                                 else if c <= 42239 then (-1) else 0)
                            else
                              if c <= 42527
                              then
                                (if c <= 42508
                                 then 0
                                 else if c <= 42511 then (-1) else 0)
                              else
                                if c <= 42537
                                then (-1)
                                else
                                  if c <= 42539
                                  then 0
                                  else if c <= 42559 then (-1) else 0)
                         else
                           if c <= 42653
                           then
                             (if c <= 42623
                              then
                                (if c <= 42606
                                 then 0
                                 else if c <= 42622 then (-1) else 0)
                              else 0)
                           else
                             if c <= 42655
                             then (-1)
                             else
                               if c <= 42735
                               then 0
                               else
                                 if c <= 42774
                                 then (-1)
                                 else
                                   if c <= 42783
                                   then 0
                                   else if c <= 42785 then (-1) else 0)
                      else
                        if c <= 42963
                        then
                          (if c <= 42894
                           then
                             (if c <= 42887
                              then 0
                              else
                                if c <= 42888
                                then 0
                                else if c <= 42890 then (-1) else 0)
                           else
                             if c <= 42954
                             then 0
                             else
                               if c <= 42959
                               then (-1)
                               else
                                 if c <= 42961
                                 then 0
                                 else if c <= 42962 then (-1) else 0)
                        else
                          if c <= 42964
                          then (-1)
                          else
                            if c <= 42999
                            then
                              (if c <= 42996
                               then
                                 (if c <= 42969
                                  then 0
                                  else if c <= 42993 then (-1) else 0)
                               else 0)
                            else
                              if c <= 43002
                              then 0
                              else
                                if c <= 43009
                                then 0
                                else if c <= 43010 then (-1) else 0)
                   else
                     if c <= 43014
                     then (-1)
                     else
                       if c <= 43518
                       then
                         (if c <= 43301
                          then
                            (if c <= 43187
                             then
                               (if c <= 43042
                                then
                                  (if c <= 43018
                                   then 0
                                   else if c <= 43019 then (-1) else 0)
                                else
                                  if c <= 43071
                                  then (-1)
                                  else
                                    if c <= 43123
                                    then 0
                                    else if c <= 43137 then (-1) else 0)
                             else
                               if c <= 43249
                               then (-1)
                               else
                                 if c <= 43259
                                 then
                                   (if c <= 43255
                                    then 0
                                    else if c <= 43258 then (-1) else 0)
                                 else
                                   if c <= 43260
                                   then (-1)
                                   else
                                     if c <= 43262
                                     then 0
                                     else if c <= 43273 then (-1) else 0)
                          else
                            if c <= 43311
                            then (-1)
                            else
                              if c <= 43471
                              then
                                (if c <= 43388
                                 then
                                   (if c <= 43334
                                    then 0
                                    else if c <= 43359 then (-1) else 0)
                                 else
                                   if c <= 43395
                                   then (-1)
                                   else
                                     if c <= 43442
                                     then 0
                                     else if c <= 43470 then (-1) else 0)
                              else
                                if c <= 43487
                                then (-1)
                                else
                                  if c <= 43494
                                  then
                                    (if c <= 43492
                                     then 0
                                     else if c <= 43493 then (-1) else 0)
                                  else
                                    if c <= 43503
                                    then 0
                                    else if c <= 43513 then (-1) else 0)
                       else
                         if c <= 43519
                         then (-1)
                         else
                           if c <= 43695
                           then
                             (if c <= 43631
                              then
                                (if c <= 43586
                                 then
                                   (if c <= 43560
                                    then 0
                                    else if c <= 43583 then (-1) else 0)
                                 else
                                   if c <= 43587
                                   then (-1)
                                   else
                                     if c <= 43595
                                     then 0
                                     else if c <= 43615 then (-1) else 0)
                              else
                                if c <= 43638
                                then 0
                                else
                                  if c <= 43641
                                  then (-1)
                                  else
                                    if c <= 43642
                                    then 0
                                    else if c <= 43645 then (-1) else 0)
                           else
                             if c <= 43696
                             then (-1)
                             else
                               if c <= 43712
                               then
                                 (if c <= 43702
                                  then
                                    (if c <= 43697
                                     then 0
                                     else if c <= 43700 then (-1) else 0)
                                  else
                                    if c <= 43704
                                    then (-1)
                                    else
                                      if c <= 43709
                                      then 0
                                      else if c <= 43711 then (-1) else 0)
                               else
                                 if c <= 43713
                                 then (-1)
                                 else
                                   if c <= 43740
                                   then
                                     (if c <= 43714
                                      then 0
                                      else if c <= 43738 then (-1) else 0)
                                   else
                                     if c <= 43741
                                     then 0
                                     else if c <= 43743 then (-1) else 0)
              else
                if c <= 43761
                then (-1)
                else
                  if c <= 66511
                  then
                    (if c <= 65019
                     then
                       (if c <= 55291
                        then
                          (if c <= 43866
                           then
                             (if c <= 43790
                              then
                                (if c <= 43764
                                 then 0
                                 else
                                   if c <= 43776
                                   then (-1)
                                   else
                                     if c <= 43782
                                     then 0
                                     else if c <= 43784 then (-1) else 0)
                              else
                                if c <= 43792
                                then (-1)
                                else
                                  if c <= 43814
                                  then
                                    (if c <= 43798
                                     then 0
                                     else if c <= 43807 then (-1) else 0)
                                  else
                                    if c <= 43815
                                    then (-1)
                                    else
                                      if c <= 43822
                                      then 0
                                      else if c <= 43823 then (-1) else 0)
                           else
                             if c <= 43867
                             then (-1)
                             else
                               if c <= 43967
                               then
                                 (if c <= 43880
                                  then 0
                                  else
                                    if c <= 43881
                                    then 0
                                    else if c <= 43887 then (-1) else 0)
                               else
                                 if c <= 55203
                                 then
                                   (if c <= 44002
                                    then 0
                                    else if c <= 44031 then (-1) else 0)
                                 else
                                   if c <= 55215
                                   then (-1)
                                   else
                                     if c <= 55238
                                     then 0
                                     else if c <= 55242 then (-1) else 0)
                        else
                          if c <= 63743
                          then (-1)
                          else
                            if c <= 64316
                            then
                              (if c <= 64279
                               then
                                 (if c <= 64217
                                  then
                                    (if c <= 64109
                                     then 0
                                     else if c <= 64111 then (-1) else 0)
                                  else
                                    if c <= 64255
                                    then (-1)
                                    else
                                      if c <= 64262
                                      then 0
                                      else if c <= 64274 then (-1) else 0)
                               else
                                 if c <= 64284
                                 then (-1)
                                 else
                                   if c <= 64296
                                   then
                                     (if c <= 64285
                                      then 0
                                      else if c <= 64286 then (-1) else 0)
                                   else
                                     if c <= 64297
                                     then (-1)
                                     else
                                       if c <= 64310
                                       then 0
                                       else if c <= 64311 then (-1) else 0)
                            else
                              if c <= 64317
                              then (-1)
                              else
                                if c <= 64433
                                then
                                  (if c <= 64321
                                   then
                                     (if c <= 64318
                                      then 0
                                      else if c <= 64319 then (-1) else 0)
                                   else
                                     if c <= 64322
                                     then (-1)
                                     else
                                       if c <= 64324
                                       then 0
                                       else if c <= 64325 then (-1) else 0)
                                else
                                  if c <= 64466
                                  then (-1)
                                  else
                                    if c <= 64911
                                    then
                                      (if c <= 64829
                                       then 0
                                       else if c <= 64847 then (-1) else 0)
                                    else
                                      if c <= 64913
                                      then (-1)
                                      else
                                        if c <= 64967
                                        then 0
                                        else if c <= 65007 then (-1) else 0)
                     else
                       if c <= 65135
                       then (-1)
                       else
                         if c <= 65594
                         then
                           (if c <= 65439
                            then
                              (if c <= 65370
                               then
                                 (if c <= 65276
                                  then
                                    (if c <= 65140
                                     then 0
                                     else if c <= 65141 then (-1) else 0)
                                  else
                                    if c <= 65312
                                    then (-1)
                                    else
                                      if c <= 65338
                                      then 0
                                      else if c <= 65344 then (-1) else 0)
                               else if c <= 65381 then (-1) else 0)
                            else
                              if c <= 65495
                              then
                                (if c <= 65479
                                 then
                                   (if c <= 65470
                                    then 0
                                    else if c <= 65473 then (-1) else 0)
                                 else
                                   if c <= 65481
                                   then (-1)
                                   else
                                     if c <= 65487
                                     then 0
                                     else if c <= 65489 then (-1) else 0)
                              else
                                if c <= 65497
                                then (-1)
                                else
                                  if c <= 65547
                                  then
                                    (if c <= 65500
                                     then 0
                                     else if c <= 65535 then (-1) else 0)
                                  else
                                    if c <= 65548
                                    then (-1)
                                    else
                                      if c <= 65574
                                      then 0
                                      else if c <= 65575 then (-1) else 0)
                         else
                           if c <= 65595
                           then (-1)
                           else
                             if c <= 66335
                             then
                               (if c <= 65786
                                then
                                  (if c <= 65613
                                   then
                                     (if c <= 65597
                                      then 0
                                      else if c <= 65598 then (-1) else 0)
                                   else
                                     if c <= 65615
                                     then (-1)
                                     else
                                       if c <= 65629
                                       then 0
                                       else if c <= 65663 then (-1) else 0)
                                else
                                  if c <= 65855
                                  then (-1)
                                  else
                                    if c <= 66204
                                    then
                                      (if c <= 65908
                                       then 0
                                       else if c <= 66175 then (-1) else 0)
                                    else
                                      if c <= 66207
                                      then (-1)
                                      else
                                        if c <= 66256
                                        then 0
                                        else if c <= 66303 then (-1) else 0)
                             else
                               if c <= 66348
                               then (-1)
                               else
                                 if c <= 66378
                                 then 0
                                 else
                                   if c <= 66383
                                   then (-1)
                                   else
                                     if c <= 66461
                                     then
                                       (if c <= 66421
                                        then 0
                                        else if c <= 66431 then (-1) else 0)
                                     else
                                       if c <= 66463
                                       then (-1)
                                       else
                                         if c <= 66499
                                         then 0
                                         else if c <= 66503 then (-1) else 0)
                  else
                    if c <= 66512
                    then (-1)
                    else
                      if c <= 67861
                      then
                        (if c <= 67382
                         then
                           (if c <= 66938
                            then
                              (if c <= 66771
                               then
                                 (if c <= 66639
                                  then
                                    (if c <= 66517
                                     then 0
                                     else if c <= 66559 then (-1) else 0)
                                  else
                                    if c <= 66717
                                    then 0
                                    else if c <= 66735 then (-1) else 0)
                               else
                                 if c <= 66775
                                 then (-1)
                                 else
                                   if c <= 66855
                                   then
                                     (if c <= 66811
                                      then 0
                                      else if c <= 66815 then (-1) else 0)
                                   else
                                     if c <= 66863
                                     then (-1)
                                     else
                                       if c <= 66915
                                       then 0
                                       else if c <= 66927 then (-1) else 0)
                            else
                              if c <= 66939
                              then (-1)
                              else
                                if c <= 66977
                                then
                                  (if c <= 66962
                                   then
                                     (if c <= 66954
                                      then 0
                                      else if c <= 66955 then (-1) else 0)
                                   else
                                     if c <= 66963
                                     then (-1)
                                     else
                                       if c <= 66965
                                       then 0
                                       else if c <= 66966 then (-1) else 0)
                                else
                                  if c <= 66978
                                  then (-1)
                                  else
                                    if c <= 67001
                                    then
                                      (if c <= 66993
                                       then 0
                                       else if c <= 66994 then (-1) else 0)
                                    else
                                      if c <= 67002
                                      then (-1)
                                      else
                                        if c <= 67004
                                        then 0
                                        else if c <= 67071 then (-1) else 0)
                         else
                           if c <= 67391
                           then (-1)
                           else
                             if c <= 67637
                             then
                               (if c <= 67504
                                then
                                  (if c <= 67431
                                   then
                                     (if c <= 67413
                                      then 0
                                      else if c <= 67423 then (-1) else 0)
                                   else
                                     if c <= 67455
                                     then (-1)
                                     else
                                       if c <= 67461
                                       then 0
                                       else if c <= 67462 then (-1) else 0)
                                else
                                  if c <= 67505
                                  then (-1)
                                  else
                                    if c <= 67589
                                    then
                                      (if c <= 67514
                                       then 0
                                       else if c <= 67583 then (-1) else 0)
                                    else
                                      if c <= 67591
                                      then (-1)
                                      else
                                        if c <= 67592
                                        then 0
                                        else if c <= 67593 then (-1) else 0)
                             else
                               if c <= 67638
                               then (-1)
                               else
                                 if c <= 67702
                                 then
                                   (if c <= 67644
                                    then
                                      (if c <= 67640
                                       then 0
                                       else if c <= 67643 then (-1) else 0)
                                    else
                                      if c <= 67646
                                      then (-1)
                                      else
                                        if c <= 67669
                                        then 0
                                        else if c <= 67679 then (-1) else 0)
                                 else
                                   if c <= 67711
                                   then (-1)
                                   else
                                     if c <= 67826
                                     then
                                       (if c <= 67742
                                        then 0
                                        else if c <= 67807 then (-1) else 0)
                                     else
                                       if c <= 67827
                                       then (-1)
                                       else
                                         if c <= 67829
                                         then 0
                                         else if c <= 67839 then (-1) else 0)
                      else
                        if c <= 67871
                        then (-1)
                        else
                          if c <= 68680
                          then
                            (if c <= 68220
                             then
                               (if c <= 68096
                                then
                                  (if c <= 68023
                                   then
                                     (if c <= 67897
                                      then 0
                                      else if c <= 67967 then (-1) else 0)
                                   else
                                     if c <= 68029
                                     then (-1)
                                     else
                                       if c <= 68031
                                       then 0
                                       else if c <= 68095 then (-1) else 0)
                                else
                                  if c <= 68111
                                  then (-1)
                                  else
                                    if c <= 68119
                                    then
                                      (if c <= 68115
                                       then 0
                                       else if c <= 68116 then (-1) else 0)
                                    else
                                      if c <= 68120
                                      then (-1)
                                      else
                                        if c <= 68149
                                        then 0
                                        else if c <= 68191 then (-1) else 0)
                             else
                               if c <= 68223
                               then (-1)
                               else
                                 if c <= 68405
                                 then
                                   (if c <= 68295
                                    then
                                      (if c <= 68252
                                       then 0
                                       else if c <= 68287 then (-1) else 0)
                                    else
                                      if c <= 68296
                                      then (-1)
                                      else
                                        if c <= 68324
                                        then 0
                                        else if c <= 68351 then (-1) else 0)
                                 else
                                   if c <= 68415
                                   then (-1)
                                   else
                                     if c <= 68466
                                     then
                                       (if c <= 68437
                                        then 0
                                        else if c <= 68447 then (-1) else 0)
                                     else
                                       if c <= 68479
                                       then (-1)
                                       else
                                         if c <= 68497
                                         then 0
                                         else if c <= 68607 then (-1) else 0)
                          else
                            if c <= 68735
                            then (-1)
                            else
                              if c <= 69445
                              then
                                (if c <= 69289
                                 then
                                   (if c <= 68850
                                    then
                                      (if c <= 68786
                                       then 0
                                       else if c <= 68799 then (-1) else 0)
                                    else
                                      if c <= 68863
                                      then (-1)
                                      else
                                        if c <= 68899
                                        then 0
                                        else if c <= 69247 then (-1) else 0)
                                 else
                                   if c <= 69295
                                   then (-1)
                                   else
                                     if c <= 69404
                                     then
                                       (if c <= 69297
                                        then 0
                                        else if c <= 69375 then (-1) else 0)
                                     else
                                       if c <= 69414
                                       then (-1)
                                       else
                                         if c <= 69415
                                         then 0
                                         else if c <= 69423 then (-1) else 0)
                              else
                                if c <= 69487
                                then (-1)
                                else
                                  if c <= 69687
                                  then
                                    (if c <= 69572
                                     then
                                       (if c <= 69505
                                        then 0
                                        else if c <= 69551 then (-1) else 0)
                                     else
                                       if c <= 69599
                                       then (-1)
                                       else
                                         if c <= 69622
                                         then 0
                                         else if c <= 69634 then (-1) else 0)
                                  else
                                    if c <= 69744
                                    then (-1)
                                    else
                                      if c <= 69749
                                      then
                                        (if c <= 69746
                                         then 0
                                         else if c <= 69748 then (-1) else 0)
                                      else
                                        if c <= 69762
                                        then (-1)
                                        else
                                          if c <= 69807
                                          then 0
                                          else if c <= 69839 then (-1) else 0)
           else
             if c <= 69890
             then (-1)
             else
               if c <= 120512
               then
                 (if c <= 72847
                  then
                    (if c <= 70855
                     then
                       (if c <= 70312
                        then
                          (if c <= 70106
                           then
                             (if c <= 70002
                              then
                                (if c <= 69956
                                 then
                                   (if c <= 69926
                                    then 0
                                    else if c <= 69955 then (-1) else 0)
                                 else
                                   if c <= 69958
                                   then (-1)
                                   else
                                     if c <= 69959
                                     then 0
                                     else if c <= 69967 then (-1) else 0)
                              else
                                if c <= 70005
                                then (-1)
                                else
                                  if c <= 70066
                                  then
                                    (if c <= 70006
                                     then 0
                                     else if c <= 70018 then (-1) else 0)
                                  else
                                    if c <= 70080
                                    then (-1)
                                    else
                                      if c <= 70084
                                      then 0
                                      else if c <= 70105 then (-1) else 0)
                           else
                             if c <= 70107
                             then (-1)
                             else
                               if c <= 70278
                               then
                                 (if c <= 70161
                                  then
                                    (if c <= 70108
                                     then 0
                                     else if c <= 70143 then (-1) else 0)
                                  else
                                    if c <= 70162
                                    then (-1)
                                    else
                                      if c <= 70187
                                      then 0
                                      else if c <= 70271 then (-1) else 0)
                               else
                                 if c <= 70279
                                 then (-1)
                                 else
                                   if c <= 70285
                                   then
                                     (if c <= 70280
                                      then 0
                                      else if c <= 70281 then (-1) else 0)
                                   else
                                     if c <= 70286
                                     then (-1)
                                     else
                                       if c <= 70301
                                       then 0
                                       else if c <= 70302 then (-1) else 0)
                        else
                          if c <= 70319
                          then (-1)
                          else
                            if c <= 70461
                            then
                              (if c <= 70440
                               then
                                 (if c <= 70412
                                  then
                                    (if c <= 70366
                                     then 0
                                     else if c <= 70404 then (-1) else 0)
                                  else
                                    if c <= 70414
                                    then (-1)
                                    else
                                      if c <= 70416
                                      then 0
                                      else if c <= 70418 then (-1) else 0)
                               else
                                 if c <= 70441
                                 then (-1)
                                 else
                                   if c <= 70451
                                   then
                                     (if c <= 70448
                                      then 0
                                      else if c <= 70449 then (-1) else 0)
                                   else
                                     if c <= 70452
                                     then (-1)
                                     else
                                       if c <= 70457
                                       then 0
                                       else if c <= 70460 then (-1) else 0)
                            else
                              if c <= 70479
                              then (-1)
                              else
                                if c <= 70730
                                then
                                  (if c <= 70497
                                   then
                                     (if c <= 70480
                                      then 0
                                      else if c <= 70492 then (-1) else 0)
                                   else
                                     if c <= 70655
                                     then (-1)
                                     else
                                       if c <= 70708
                                       then 0
                                       else if c <= 70726 then (-1) else 0)
                                else
                                  if c <= 70750
                                  then (-1)
                                  else
                                    if c <= 70831
                                    then
                                      (if c <= 70753
                                       then 0
                                       else if c <= 70783 then (-1) else 0)
                                    else
                                      if c <= 70851
                                      then (-1)
                                      else
                                        if c <= 70853
                                        then 0
                                        else if c <= 70854 then (-1) else 0)
                     else
                       if c <= 71039
                       then (-1)
                       else
                         if c <= 71999
                         then
                           (if c <= 71494
                            then
                              (if c <= 71236
                               then
                                 (if c <= 71131
                                  then
                                    (if c <= 71086
                                     then 0
                                     else if c <= 71127 then (-1) else 0)
                                  else
                                    if c <= 71167
                                    then (-1)
                                    else
                                      if c <= 71215
                                      then 0
                                      else if c <= 71235 then (-1) else 0)
                               else
                                 if c <= 71295
                                 then (-1)
                                 else
                                   if c <= 71352
                                   then
                                     (if c <= 71338
                                      then 0
                                      else if c <= 71351 then (-1) else 0)
                                   else
                                     if c <= 71423
                                     then (-1)
                                     else
                                       if c <= 71450
                                       then 0
                                       else if c <= 71487 then (-1) else 0)
                            else
                              if c <= 71679
                              then (-1)
                              else
                                if c <= 71945
                                then
                                  (if c <= 71903
                                   then
                                     (if c <= 71723
                                      then 0
                                      else if c <= 71839 then (-1) else 0)
                                   else
                                     if c <= 71934
                                     then (-1)
                                     else
                                       if c <= 71942
                                       then 0
                                       else if c <= 71944 then (-1) else 0)
                                else
                                  if c <= 71947
                                  then (-1)
                                  else
                                    if c <= 71958
                                    then
                                      (if c <= 71955
                                       then 0
                                       else if c <= 71956 then (-1) else 0)
                                    else
                                      if c <= 71959
                                      then (-1)
                                      else
                                        if c <= 71983
                                        then 0
                                        else if c <= 71998 then (-1) else 0)
                         else
                           if c <= 72000
                           then (-1)
                           else
                             if c <= 72250
                             then
                               (if c <= 72161
                                then
                                  (if c <= 72103
                                   then
                                     (if c <= 72001
                                      then 0
                                      else if c <= 72095 then (-1) else 0)
                                   else
                                     if c <= 72105
                                     then (-1)
                                     else
                                       if c <= 72144
                                       then 0
                                       else if c <= 72160 then (-1) else 0)
                                else
                                  if c <= 72162
                                  then (-1)
                                  else
                                    if c <= 72192
                                    then
                                      (if c <= 72163
                                       then 0
                                       else if c <= 72191 then (-1) else 0)
                                    else
                                      if c <= 72202
                                      then (-1)
                                      else
                                        if c <= 72242
                                        then 0
                                        else if c <= 72249 then (-1) else 0)
                             else
                               if c <= 72271
                               then (-1)
                               else
                                 if c <= 72440
                                 then
                                   (if c <= 72329
                                    then
                                      (if c <= 72272
                                       then 0
                                       else if c <= 72283 then (-1) else 0)
                                    else
                                      if c <= 72348
                                      then (-1)
                                      else
                                        if c <= 72349
                                        then 0
                                        else if c <= 72367 then (-1) else 0)
                                 else
                                   if c <= 72703
                                   then (-1)
                                   else
                                     if c <= 72750
                                     then
                                       (if c <= 72712
                                        then 0
                                        else if c <= 72713 then (-1) else 0)
                                     else
                                       if c <= 72767
                                       then (-1)
                                       else
                                         if c <= 72768
                                         then 0
                                         else if c <= 72817 then (-1) else 0)
                  else
                    if c <= 72959
                    then (-1)
                    else
                      if c <= 101589
                      then
                        (if c <= 83526
                         then
                           (if c <= 73112
                            then
                              (if c <= 73030
                               then
                                 (if c <= 72969
                                  then
                                    (if c <= 72966
                                     then 0
                                     else if c <= 72967 then (-1) else 0)
                                  else
                                    if c <= 72970
                                    then (-1)
                                    else
                                      if c <= 73008
                                      then 0
                                      else if c <= 73029 then (-1) else 0)
                               else
                                 if c <= 73055
                                 then (-1)
                                 else
                                   if c <= 73064
                                   then
                                     (if c <= 73061
                                      then 0
                                      else if c <= 73062 then (-1) else 0)
                                   else
                                     if c <= 73065
                                     then (-1)
                                     else
                                       if c <= 73097
                                       then 0
                                       else if c <= 73111 then (-1) else 0)
                            else
                              if c <= 73439
                              then (-1)
                              else
                                if c <= 74862
                                then
                                  (if c <= 73648
                                   then
                                     (if c <= 73458
                                      then 0
                                      else if c <= 73647 then (-1) else 0)
                                   else
                                     if c <= 73727
                                     then (-1)
                                     else
                                       if c <= 74649
                                       then 0
                                       else if c <= 74751 then (-1) else 0)
                                else
                                  if c <= 74879
                                  then (-1)
                                  else
                                    if c <= 77808
                                    then
                                      (if c <= 75075
                                       then 0
                                       else if c <= 77711 then (-1) else 0)
                                    else
                                      if c <= 77823
                                      then (-1)
                                      else
                                        if c <= 78894
                                        then 0
                                        else if c <= 82943 then (-1) else 0)
                         else
                           if c <= 92159
                           then (-1)
                           else
                             if c <= 93071
                             then
                               (if c <= 92909
                                then
                                  (if c <= 92766
                                   then
                                     (if c <= 92728
                                      then 0
                                      else if c <= 92735 then (-1) else 0)
                                   else
                                     if c <= 92783
                                     then (-1)
                                     else
                                       if c <= 92862
                                       then 0
                                       else if c <= 92879 then (-1) else 0)
                                else
                                  if c <= 92927
                                  then (-1)
                                  else
                                    if c <= 92995
                                    then
                                      (if c <= 92975
                                       then 0
                                       else if c <= 92991 then (-1) else 0)
                                    else
                                      if c <= 93026
                                      then (-1)
                                      else
                                        if c <= 93047
                                        then 0
                                        else if c <= 93052 then (-1) else 0)
                             else
                               if c <= 93759
                               then (-1)
                               else
                                 if c <= 94111
                                 then
                                   (if c <= 94026
                                    then
                                      (if c <= 93823
                                       then 0
                                       else if c <= 93951 then (-1) else 0)
                                    else
                                      if c <= 94031
                                      then (-1)
                                      else
                                        if c <= 94032
                                        then 0
                                        else if c <= 94098 then (-1) else 0)
                                 else
                                   if c <= 94175
                                   then (-1)
                                   else
                                     if c <= 94179
                                     then
                                       (if c <= 94177
                                        then 0
                                        else if c <= 94178 then (-1) else 0)
                                     else
                                       if c <= 94207
                                       then (-1)
                                       else
                                         if c <= 100343
                                         then 0
                                         else if c <= 100351 then (-1) else 0)
                      else
                        if c <= 101631
                        then (-1)
                        else
                          if c <= 119970
                          then
                            (if c <= 111355
                             then
                               (if c <= 110590
                                then
                                  (if c <= 110579
                                   then
                                     (if c <= 101640
                                      then 0
                                      else if c <= 110575 then (-1) else 0)
                                   else
                                     if c <= 110580
                                     then (-1)
                                     else
                                       if c <= 110587
                                       then 0
                                       else if c <= 110588 then (-1) else 0)
                                else
                                  if c <= 110591
                                  then (-1)
                                  else
                                    if c <= 110930
                                    then
                                      (if c <= 110882
                                       then 0
                                       else if c <= 110927 then (-1) else 0)
                                    else
                                      if c <= 110947
                                      then (-1)
                                      else
                                        if c <= 110951
                                        then 0
                                        else if c <= 110959 then (-1) else 0)
                             else
                               if c <= 113663
                               then (-1)
                               else
                                 if c <= 113817
                                 then
                                   (if c <= 113788
                                    then
                                      (if c <= 113770
                                       then 0
                                       else if c <= 113775 then (-1) else 0)
                                    else
                                      if c <= 113791
                                      then (-1)
                                      else
                                        if c <= 113800
                                        then 0
                                        else if c <= 113807 then (-1) else 0)
                                 else
                                   if c <= 119807
                                   then (-1)
                                   else
                                     if c <= 119964
                                     then
                                       (if c <= 119892
                                        then 0
                                        else if c <= 119893 then (-1) else 0)
                                     else
                                       if c <= 119965
                                       then (-1)
                                       else
                                         if c <= 119967
                                         then 0
                                         else if c <= 119969 then (-1) else 0)
                          else
                            if c <= 119972
                            then (-1)
                            else
                              if c <= 120084
                              then
                                (if c <= 119995
                                 then
                                   (if c <= 119980
                                    then
                                      (if c <= 119974
                                       then 0
                                       else if c <= 119976 then (-1) else 0)
                                    else
                                      if c <= 119981
                                      then (-1)
                                      else
                                        if c <= 119993
                                        then 0
                                        else if c <= 119994 then (-1) else 0)
                                 else
                                   if c <= 119996
                                   then (-1)
                                   else
                                     if c <= 120069
                                     then
                                       (if c <= 120003
                                        then 0
                                        else if c <= 120004 then (-1) else 0)
                                     else
                                       if c <= 120070
                                       then (-1)
                                       else
                                         if c <= 120074
                                         then 0
                                         else if c <= 120076 then (-1) else 0)
                              else
                                if c <= 120085
                                then (-1)
                                else
                                  if c <= 120132
                                  then
                                    (if c <= 120121
                                     then
                                       (if c <= 120092
                                        then 0
                                        else if c <= 120093 then (-1) else 0)
                                     else
                                       if c <= 120122
                                       then (-1)
                                       else
                                         if c <= 120126
                                         then 0
                                         else if c <= 120127 then (-1) else 0)
                                  else
                                    if c <= 120133
                                    then (-1)
                                    else
                                      if c <= 120144
                                      then
                                        (if c <= 120134
                                         then 0
                                         else if c <= 120137 then (-1) else 0)
                                      else
                                        if c <= 120145
                                        then (-1)
                                        else
                                          if c <= 120485
                                          then 0
                                          else
                                            if c <= 120487 then (-1) else 0)
               else
                 if c <= 120513
                 then (-1)
                 else
                   if c <= 195101
                   then
                     (if c <= 126519
                      then
                        (if c <= 123214
                         then
                           (if c <= 120744
                            then
                              (if c <= 120628
                               then
                                 (if c <= 120570
                                  then
                                    (if c <= 120538
                                     then 0
                                     else if c <= 120539 then (-1) else 0)
                                  else
                                    if c <= 120571
                                    then (-1)
                                    else
                                      if c <= 120596
                                      then 0
                                      else if c <= 120597 then (-1) else 0)
                               else
                                 if c <= 120629
                                 then (-1)
                                 else
                                   if c <= 120686
                                   then
                                     (if c <= 120654
                                      then 0
                                      else if c <= 120655 then (-1) else 0)
                                   else
                                     if c <= 120687
                                     then (-1)
                                     else
                                       if c <= 120712
                                       then 0
                                       else if c <= 120713 then (-1) else 0)
                            else
                              if c <= 120745
                              then (-1)
                              else
                                if c <= 122634
                                then
                                  (if c <= 120779
                                   then
                                     (if c <= 120770
                                      then 0
                                      else if c <= 120771 then (-1) else 0)
                                   else if c <= 122623 then (-1) else 0)
                                else
                                  if c <= 123180
                                  then
                                    (if c <= 122654
                                     then 0
                                     else if c <= 123135 then (-1) else 0)
                                  else
                                    if c <= 123190
                                    then (-1)
                                    else
                                      if c <= 123197
                                      then 0
                                      else if c <= 123213 then (-1) else 0)
                         else
                           if c <= 123535
                           then (-1)
                           else
                             if c <= 125251
                             then
                               (if c <= 124907
                                then
                                  (if c <= 123627
                                   then
                                     (if c <= 123565
                                      then 0
                                      else if c <= 123583 then (-1) else 0)
                                   else
                                     if c <= 124895
                                     then (-1)
                                     else
                                       if c <= 124902
                                       then 0
                                       else if c <= 124903 then (-1) else 0)
                                else
                                  if c <= 124908
                                  then (-1)
                                  else
                                    if c <= 124926
                                    then
                                      (if c <= 124910
                                       then 0
                                       else if c <= 124911 then (-1) else 0)
                                    else
                                      if c <= 124927
                                      then (-1)
                                      else
                                        if c <= 125124
                                        then 0
                                        else if c <= 125183 then (-1) else 0)
                             else
                               if c <= 125258
                               then (-1)
                               else
                                 if c <= 126498
                                 then
                                   (if c <= 126467
                                    then
                                      (if c <= 125259
                                       then 0
                                       else if c <= 126463 then (-1) else 0)
                                    else
                                      if c <= 126468
                                      then (-1)
                                      else
                                        if c <= 126495
                                        then 0
                                        else if c <= 126496 then (-1) else 0)
                                 else
                                   if c <= 126499
                                   then (-1)
                                   else
                                     if c <= 126503
                                     then
                                       (if c <= 126500
                                        then 0
                                        else if c <= 126502 then (-1) else 0)
                                     else
                                       if c <= 126504
                                       then (-1)
                                       else
                                         if c <= 126514
                                         then 0
                                         else if c <= 126515 then (-1) else 0)
                      else
                        if c <= 126520
                        then (-1)
                        else
                          if c <= 126564
                          then
                            (if c <= 126546
                             then
                               (if c <= 126535
                                then
                                  (if c <= 126523
                                   then
                                     (if c <= 126521
                                      then 0
                                      else if c <= 126522 then (-1) else 0)
                                   else
                                     if c <= 126529
                                     then (-1)
                                     else
                                       if c <= 126530
                                       then 0
                                       else if c <= 126534 then (-1) else 0)
                                else
                                  if c <= 126536
                                  then (-1)
                                  else
                                    if c <= 126539
                                    then
                                      (if c <= 126537
                                       then 0
                                       else if c <= 126538 then (-1) else 0)
                                    else
                                      if c <= 126540
                                      then (-1)
                                      else
                                        if c <= 126543
                                        then 0
                                        else if c <= 126544 then (-1) else 0)
                             else
                               if c <= 126547
                               then (-1)
                               else
                                 if c <= 126555
                                 then
                                   (if c <= 126551
                                    then
                                      (if c <= 126548
                                       then 0
                                       else if c <= 126550 then (-1) else 0)
                                    else
                                      if c <= 126552
                                      then (-1)
                                      else
                                        if c <= 126553
                                        then 0
                                        else if c <= 126554 then (-1) else 0)
                                 else
                                   if c <= 126556
                                   then (-1)
                                   else
                                     if c <= 126559
                                     then
                                       (if c <= 126557
                                        then 0
                                        else if c <= 126558 then (-1) else 0)
                                     else
                                       if c <= 126560
                                       then (-1)
                                       else
                                         if c <= 126562
                                         then 0
                                         else if c <= 126563 then (-1) else 0)
                          else
                            if c <= 126566
                            then (-1)
                            else
                              if c <= 126627
                              then
                                (if c <= 126588
                                 then
                                   (if c <= 126578
                                    then
                                      (if c <= 126570
                                       then 0
                                       else if c <= 126571 then (-1) else 0)
                                    else
                                      if c <= 126579
                                      then (-1)
                                      else
                                        if c <= 126583
                                        then 0
                                        else if c <= 126584 then (-1) else 0)
                                 else
                                   if c <= 126589
                                   then (-1)
                                   else
                                     if c <= 126601
                                     then
                                       (if c <= 126590
                                        then 0
                                        else if c <= 126591 then (-1) else 0)
                                     else
                                       if c <= 126602
                                       then (-1)
                                       else
                                         if c <= 126619
                                         then 0
                                         else if c <= 126624 then (-1) else 0)
                              else
                                if c <= 126628
                                then (-1)
                                else
                                  if c <= 177976
                                  then
                                    (if c <= 126651
                                     then
                                       (if c <= 126633
                                        then 0
                                        else if c <= 126634 then (-1) else 0)
                                     else
                                       if c <= 131071
                                       then (-1)
                                       else
                                         if c <= 173791
                                         then 0
                                         else if c <= 173823 then (-1) else 0)
                                  else
                                    if c <= 177983
                                    then (-1)
                                    else
                                      if c <= 183969
                                      then
                                        (if c <= 178205
                                         then 0
                                         else if c <= 178207 then (-1) else 0)
                                      else
                                        if c <= 183983
                                        then (-1)
                                        else
                                          if c <= 191456
                                          then 0
                                          else
                                            if c <= 194559 then (-1) else 0)
                   else if c <= 196607 then (-1) else 0)
        else (-1)
let __sedlex_partition_83 c =
  if c <= 35
  then (-1)
  else
    if c <= 122
    then (Char.code (String.unsafe_get __sedlex_table_62 (c - 36))) - 1
    else (-1)
let __sedlex_partition_124 c =
  if c <= 106 then (-1) else if c <= 107 then 0 else (-1)
let __sedlex_partition_125 c =
  if c <= 37 then (-1) else if c <= 38 then 0 else (-1)
let __sedlex_partition_14 c =
  if c <= 13
  then (Char.code (String.unsafe_get __sedlex_table_63 (c - (-1)))) - 1
  else if c <= 8233 then (if c <= 8231 then 1 else 2) else 1
let __sedlex_partition_46 c =
  if c <= 47
  then (-1)
  else
    if c <= 95
    then (Char.code (String.unsafe_get __sedlex_table_64 (c - 48))) - 1
    else (-1)
let __sedlex_partition_87 c =
  if c <= 35
  then (-1)
  else
    if c <= 122
    then (Char.code (String.unsafe_get __sedlex_table_65 (c - 36))) - 1
    else (-1)
let __sedlex_partition_103 c =
  if c <= 92
  then (Char.code (String.unsafe_get __sedlex_table_66 (c - (-1)))) - 1
  else if c <= 8233 then (if c <= 8231 then 1 else 2) else 1
let __sedlex_partition_117 c =
  if c <= 39
  then (Char.code (String.unsafe_get __sedlex_table_67 (c - (-1)))) - 1
  else if c <= 8233 then (if c <= 8231 then 1 else 2) else 1
let __sedlex_partition_75 c =
  if c <= 100 then (-1) else if c <= 101 then 0 else (-1)
let __sedlex_partition_116 c =
  if c <= 58 then (-1) else if c <= 59 then 0 else (-1)
let __sedlex_partition_61 c =
  if c <= 35
  then (-1)
  else
    if c <= 122
    then (Char.code (String.unsafe_get __sedlex_table_68 (c - 36))) - 1
    else (-1)
let __sedlex_partition_108 c =
  if c <= 41
  then (-1)
  else
    if c <= 47
    then (Char.code (String.unsafe_get __sedlex_table_69 (c - 42))) - 1
    else (-1)
let __sedlex_partition_81 c =
  if c <= 35
  then (-1)
  else
    if c <= 122
    then (Char.code (String.unsafe_get __sedlex_table_70 (c - 36))) - 1
    else (-1)
let __sedlex_partition_78 c =
  if c <= 35
  then (-1)
  else
    if c <= 122
    then (Char.code (String.unsafe_get __sedlex_table_71 (c - 36))) - 1
    else (-1)
let __sedlex_partition_121 c =
  if c <= (-1)
  then (-1)
  else
    if c <= 8191
    then (Char.code (String.unsafe_get __sedlex_table_72 c)) - 1
    else
      if c <= 12287
      then
        (if c <= 8238
         then
           (if c <= 8231
            then (if c <= 8202 then 1 else 0)
            else if c <= 8233 then 2 else 0)
         else
           if c <= 8286
           then (if c <= 8239 then 1 else 0)
           else if c <= 8287 then 1 else 0)
      else
        if c <= 65278
        then (if c <= 12288 then 1 else 0)
        else if c <= 65279 then 1 else 0
let __sedlex_partition_69 c =
  if c <= 118 then (-1) else if c <= 119 then 0 else (-1)
let __sedlex_partition_85 c =
  if c <= 35
  then (-1)
  else
    if c <= 122
    then (Char.code (String.unsafe_get __sedlex_table_73 (c - 36))) - 1
    else (-1)
let __sedlex_partition_100 c =
  if c <= 93
  then (Char.code (String.unsafe_get __sedlex_table_74 (c - (-1)))) - 1
  else if c <= 8233 then (if c <= 8231 then 1 else 2) else 1
let __sedlex_partition_120 c =
  if c <= 123
  then (Char.code (String.unsafe_get __sedlex_table_75 (c - (-1)))) - 1
  else if c <= 8233 then (if c <= 8231 then 1 else 2) else 1
let __sedlex_partition_32 c =
  if c <= 47
  then (-1)
  else
    if c <= 57
    then (Char.code (String.unsafe_get __sedlex_table_76 (c - 48))) - 1
    else (-1)
let __sedlex_partition_109 c =
  if c <= 125
  then (Char.code (String.unsafe_get __sedlex_table_77 (c - (-1)))) - 1
  else if c <= 8233 then (if c <= 8231 then 1 else 2) else 1
let __sedlex_partition_38 c =
  if c <= 47
  then (-1)
  else
    if c <= 101
    then (Char.code (String.unsafe_get __sedlex_table_78 (c - 48))) - 1
    else (-1)
let __sedlex_partition_39 c =
  if c <= 42
  then (-1)
  else
    if c <= 57
    then (Char.code (String.unsafe_get __sedlex_table_79 (c - 43))) - 1
    else (-1)
let __sedlex_partition_1 c =
  if c <= 122
  then (Char.code (String.unsafe_get __sedlex_table_80 (c - (-1)))) - 1
  else 1
let __sedlex_partition_6 c =
  if c <= 122
  then (Char.code (String.unsafe_get __sedlex_table_81 (c - (-1)))) - 1
  else 1
let __sedlex_partition_12 c =
  if c <= 44
  then (-1)
  else
    if c <= 47
    then (Char.code (String.unsafe_get __sedlex_table_82 (c - 45))) - 1
    else (-1)
let __sedlex_partition_114 c =
  if c <= 47
  then (-1)
  else
    if c <= 102
    then (Char.code (String.unsafe_get __sedlex_table_83 (c - 48))) - 1
    else (-1)
let __sedlex_partition_49 c =
  if c <= 62 then (-1) else if c <= 63 then 0 else (-1)
let __sedlex_partition_48 c =
  if c <= 45
  then (-1)
  else
    if c <= 95
    then (Char.code (String.unsafe_get __sedlex_table_84 (c - 46))) - 1
    else (-1)
let __sedlex_partition_2 c =
  if c <= 116 then (-1) else if c <= 117 then 0 else (-1)
let __sedlex_partition_13 c =
  if c <= 46 then (-1) else if c <= 47 then 0 else (-1)
let __sedlex_partition_66 c =
  if c <= 57 then (-1) else if c <= 58 then 0 else (-1)
let __sedlex_partition_122 c =
  if c <= 8191
  then (Char.code (String.unsafe_get __sedlex_table_85 (c - (-1)))) - 1
  else
    if c <= 194559
    then
      (if c <= 69599
       then
         (if c <= 43711
          then
            (if c <= 12703
             then
               (if c <= 11519
                then
                  (if c <= 8489
                   then
                     (if c <= 8454
                      then
                        (if c <= 8304
                         then
                           (if c <= 8238
                            then
                              (if c <= 8231
                               then (if c <= 8202 then 2 else 1)
                               else if c <= 8233 then 3 else 1)
                            else
                              if c <= 8286
                              then (if c <= 8239 then 2 else 1)
                              else if c <= 8287 then 2 else 1)
                         else
                           if c <= 8335
                           then
                             (if c <= 8318
                              then (if c <= 8305 then 6 else 1)
                              else if c <= 8319 then 6 else 1)
                           else
                             if c <= 8449
                             then (if c <= 8348 then 6 else 1)
                             else if c <= 8450 then 6 else 1)
                      else
                        if c <= 8477
                        then
                          (if c <= 8468
                           then
                             (if c <= 8457
                              then (if c <= 8455 then 6 else 1)
                              else if c <= 8467 then 6 else 1)
                           else
                             if c <= 8471
                             then (if c <= 8469 then 6 else 1)
                             else 6)
                        else
                          if c <= 8485
                          then
                            (if c <= 8483
                             then 1
                             else if c <= 8484 then 6 else 1)
                          else
                            if c <= 8487
                            then (if c <= 8486 then 6 else 1)
                            else if c <= 8488 then 6 else 1)
                   else
                     if c <= 8543
                     then
                       (if c <= 8505
                        then 6
                        else
                          if c <= 8516
                          then
                            (if c <= 8507
                             then 1
                             else if c <= 8511 then 6 else 1)
                          else
                            if c <= 8525
                            then (if c <= 8521 then 6 else 1)
                            else if c <= 8526 then 6 else 1)
                     else
                       if c <= 11389
                       then
                         (if c <= 8584
                          then 6
                          else if c <= 11263 then 1 else 6)
                       else
                         if c <= 11498
                         then (if c <= 11492 then 6 else 1)
                         else
                           if c <= 11505
                           then (if c <= 11502 then 6 else 1)
                           else if c <= 11507 then 6 else 1)
                else
                  if c <= 12294
                  then
                    (if c <= 11695
                     then
                       (if c <= 11630
                        then
                          (if c <= 11564
                           then
                             (if c <= 11558
                              then (if c <= 11557 then 6 else 1)
                              else if c <= 11559 then 6 else 1)
                           else
                             if c <= 11567
                             then (if c <= 11565 then 6 else 1)
                             else if c <= 11623 then 6 else 1)
                        else
                          if c <= 11679
                          then
                            (if c <= 11647
                             then (if c <= 11631 then 6 else 1)
                             else if c <= 11670 then 6 else 1)
                          else
                            if c <= 11687
                            then (if c <= 11686 then 6 else 1)
                            else if c <= 11694 then 6 else 1)
                     else
                       if c <= 11727
                       then
                         (if c <= 11711
                          then
                            (if c <= 11703
                             then (if c <= 11702 then 6 else 1)
                             else if c <= 11710 then 6 else 1)
                          else
                            if c <= 11719
                            then (if c <= 11718 then 6 else 1)
                            else if c <= 11726 then 6 else 1)
                       else
                         if c <= 12287
                         then
                           (if c <= 11735
                            then (if c <= 11734 then 6 else 1)
                            else if c <= 11742 then 6 else 1)
                         else
                           if c <= 12292
                           then (if c <= 12288 then 2 else 1)
                           else 6)
                  else
                    if c <= 12442
                    then
                      (if c <= 12343
                       then
                         (if c <= 12320
                          then (if c <= 12295 then 6 else 1)
                          else
                            if c <= 12336
                            then (if c <= 12329 then 6 else 1)
                            else if c <= 12341 then 6 else 1)
                       else
                         if c <= 12348
                         then 6
                         else
                           if c <= 12352
                           then 1
                           else if c <= 12438 then 6 else 1)
                    else
                      if c <= 12539
                      then
                        (if c <= 12447
                         then 6
                         else
                           if c <= 12448
                           then 1
                           else if c <= 12538 then 6 else 1)
                      else
                        if c <= 12548
                        then (if c <= 12543 then 6 else 1)
                        else
                          if c <= 12592
                          then (if c <= 12591 then 6 else 1)
                          else if c <= 12686 then 6 else 1)
             else
               if c <= 42999
               then
                 (if c <= 42653
                  then
                    (if c <= 42239
                     then
                       (if c <= 40981
                        then
                          (if c <= 13311
                           then
                             (if c <= 12783
                              then (if c <= 12735 then 6 else 1)
                              else if c <= 12799 then 6 else 1)
                           else
                             if c <= 19967
                             then (if c <= 19903 then 6 else 1)
                             else 6)
                        else
                          if c <= 42191
                          then (if c <= 42124 then 6 else 1)
                          else if c <= 42237 then 6 else 1)
                     else
                       if c <= 42559
                       then
                         (if c <= 42511
                          then (if c <= 42508 then 6 else 1)
                          else
                            if c <= 42537
                            then (if c <= 42527 then 6 else 1)
                            else if c <= 42539 then 6 else 1)
                       else
                         if c <= 42622
                         then (if c <= 42606 then 6 else 1)
                         else 6)
                  else
                    if c <= 42890
                    then
                      (if c <= 42785
                       then
                         (if c <= 42735
                          then (if c <= 42655 then 1 else 6)
                          else
                            if c <= 42774
                            then 1
                            else if c <= 42783 then 6 else 1)
                       else
                         if c <= 42887
                         then 6
                         else if c <= 42888 then 6 else 1)
                    else
                      if c <= 42962
                      then
                        (if c <= 42954
                         then 6
                         else
                           if c <= 42959
                           then 1
                           else if c <= 42961 then 6 else 1)
                      else
                        if c <= 42993
                        then
                          (if c <= 42964
                           then (if c <= 42963 then 6 else 1)
                           else if c <= 42969 then 6 else 1)
                        else 6)
               else
                 if c <= 43470
                 then
                   (if c <= 43137
                    then
                      (if c <= 43010
                       then
                         (if c <= 43002
                          then 6
                          else if c <= 43009 then 6 else 1)
                       else
                         if c <= 43019
                         then
                           (if c <= 43014
                            then (if c <= 43013 then 6 else 1)
                            else if c <= 43018 then 6 else 1)
                         else
                           if c <= 43071
                           then (if c <= 43042 then 6 else 1)
                           else if c <= 43123 then 6 else 1)
                    else
                      if c <= 43273
                      then
                        (if c <= 43258
                         then
                           (if c <= 43249
                            then (if c <= 43187 then 6 else 1)
                            else if c <= 43255 then 6 else 1)
                         else
                           if c <= 43260
                           then (if c <= 43259 then 6 else 1)
                           else if c <= 43262 then 6 else 1)
                      else
                        if c <= 43359
                        then
                          (if c <= 43311
                           then (if c <= 43301 then 6 else 1)
                           else if c <= 43334 then 6 else 1)
                        else
                          if c <= 43395
                          then (if c <= 43388 then 6 else 1)
                          else if c <= 43442 then 6 else 1)
                 else
                   if c <= 43615
                   then
                     (if c <= 43513
                      then
                        (if c <= 43493
                         then
                           (if c <= 43487
                            then (if c <= 43471 then 6 else 1)
                            else if c <= 43492 then 6 else 1)
                         else if c <= 43503 then 6 else 1)
                      else
                        if c <= 43583
                        then
                          (if c <= 43519
                           then (if c <= 43518 then 6 else 1)
                           else if c <= 43560 then 6 else 1)
                        else
                          if c <= 43587
                          then (if c <= 43586 then 6 else 1)
                          else if c <= 43595 then 6 else 1)
                   else
                     if c <= 43645
                     then
                       (if c <= 43638
                        then 6
                        else
                          if c <= 43641
                          then 1
                          else if c <= 43642 then 6 else 1)
                     else
                       if c <= 43700
                       then
                         (if c <= 43696
                          then (if c <= 43695 then 6 else 1)
                          else if c <= 43697 then 6 else 1)
                       else
                         if c <= 43704
                         then (if c <= 43702 then 6 else 1)
                         else if c <= 43709 then 6 else 1)
          else
            if c <= 66377
            then
              (if c <= 64325
               then
                 (if c <= 43887
                  then
                    (if c <= 43784
                     then
                       (if c <= 43743
                        then
                          (if c <= 43738
                           then
                             (if c <= 43713
                              then (if c <= 43712 then 6 else 1)
                              else if c <= 43714 then 6 else 1)
                           else if c <= 43741 then 6 else 1)
                        else
                          if c <= 43764
                          then
                            (if c <= 43761
                             then (if c <= 43754 then 6 else 1)
                             else 6)
                          else
                            if c <= 43776
                            then 1
                            else if c <= 43782 then 6 else 1)
                     else
                       if c <= 43823
                       then
                         (if c <= 43807
                          then
                            (if c <= 43792
                             then (if c <= 43790 then 6 else 1)
                             else if c <= 43798 then 6 else 1)
                          else
                            if c <= 43815
                            then (if c <= 43814 then 6 else 1)
                            else if c <= 43822 then 6 else 1)
                       else
                         if c <= 43880
                         then
                           (if c <= 43867
                            then (if c <= 43866 then 6 else 1)
                            else 6)
                         else if c <= 43881 then 6 else 1)
                  else
                    if c <= 64274
                    then
                      (if c <= 55242
                       then
                         (if c <= 44031
                          then (if c <= 44002 then 6 else 1)
                          else
                            if c <= 55215
                            then (if c <= 55203 then 6 else 1)
                            else if c <= 55238 then 6 else 1)
                       else
                         if c <= 64111
                         then
                           (if c <= 63743
                            then (if c <= 55291 then 6 else 1)
                            else if c <= 64109 then 6 else 1)
                         else
                           if c <= 64255
                           then (if c <= 64217 then 6 else 1)
                           else if c <= 64262 then 6 else 1)
                    else
                      if c <= 64311
                      then
                        (if c <= 64286
                         then
                           (if c <= 64284
                            then (if c <= 64279 then 6 else 1)
                            else if c <= 64285 then 6 else 1)
                         else
                           if c <= 64297
                           then (if c <= 64296 then 6 else 1)
                           else if c <= 64310 then 6 else 1)
                      else
                        if c <= 64319
                        then
                          (if c <= 64317
                           then (if c <= 64316 then 6 else 1)
                           else if c <= 64318 then 6 else 1)
                        else
                          if c <= 64322
                          then (if c <= 64321 then 6 else 1)
                          else if c <= 64324 then 6 else 1)
               else
                 if c <= 65481
                 then
                   (if c <= 65312
                    then
                      (if c <= 65007
                       then
                         (if c <= 64847
                          then
                            (if c <= 64466
                             then (if c <= 64433 then 6 else 1)
                             else if c <= 64829 then 6 else 1)
                          else
                            if c <= 64913
                            then (if c <= 64911 then 6 else 1)
                            else if c <= 64967 then 6 else 1)
                       else
                         if c <= 65141
                         then
                           (if c <= 65135
                            then (if c <= 65019 then 6 else 1)
                            else if c <= 65140 then 6 else 1)
                         else
                           if c <= 65278
                           then (if c <= 65276 then 6 else 1)
                           else if c <= 65279 then 2 else 1)
                    else
                      if c <= 65437
                      then
                        (if c <= 65381
                         then
                           (if c <= 65344
                            then (if c <= 65338 then 6 else 1)
                            else if c <= 65370 then 6 else 1)
                         else 6)
                      else
                        if c <= 65470
                        then 6
                        else
                          if c <= 65473
                          then 1
                          else if c <= 65479 then 6 else 1)
                 else
                   if c <= 65615
                   then
                     (if c <= 65548
                      then
                        (if c <= 65497
                         then
                           (if c <= 65489
                            then (if c <= 65487 then 6 else 1)
                            else if c <= 65495 then 6 else 1)
                         else
                           if c <= 65535
                           then (if c <= 65500 then 6 else 1)
                           else if c <= 65547 then 6 else 1)
                      else
                        if c <= 65595
                        then
                          (if c <= 65575
                           then (if c <= 65574 then 6 else 1)
                           else if c <= 65594 then 6 else 1)
                        else
                          if c <= 65598
                          then (if c <= 65597 then 6 else 1)
                          else if c <= 65613 then 6 else 1)
                   else
                     if c <= 66207
                     then
                       (if c <= 65855
                        then
                          (if c <= 65663
                           then (if c <= 65629 then 6 else 1)
                           else if c <= 65786 then 6 else 1)
                        else
                          if c <= 66175
                          then (if c <= 65908 then 6 else 1)
                          else if c <= 66204 then 6 else 1)
                     else
                       if c <= 66348
                       then
                         (if c <= 66303
                          then (if c <= 66256 then 6 else 1)
                          else if c <= 66335 then 6 else 1)
                       else 6)
            else
              if c <= 67646
              then
                (if c <= 66963
                 then
                   (if c <= 66717
                    then
                      (if c <= 66463
                       then
                         (if c <= 66383
                          then (if c <= 66378 then 6 else 1)
                          else
                            if c <= 66431
                            then (if c <= 66421 then 6 else 1)
                            else if c <= 66461 then 6 else 1)
                       else
                         if c <= 66512
                         then
                           (if c <= 66503
                            then (if c <= 66499 then 6 else 1)
                            else if c <= 66511 then 6 else 1)
                         else
                           if c <= 66559
                           then (if c <= 66517 then 6 else 1)
                           else 6)
                    else
                      if c <= 66863
                      then
                        (if c <= 66775
                         then
                           (if c <= 66735
                            then 1
                            else if c <= 66771 then 6 else 1)
                         else
                           if c <= 66815
                           then (if c <= 66811 then 6 else 1)
                           else if c <= 66855 then 6 else 1)
                      else
                        if c <= 66939
                        then
                          (if c <= 66927
                           then (if c <= 66915 then 6 else 1)
                           else if c <= 66938 then 6 else 1)
                        else
                          if c <= 66955
                          then (if c <= 66954 then 6 else 1)
                          else if c <= 66962 then 6 else 1)
                 else
                   if c <= 67455
                   then
                     (if c <= 67002
                      then
                        (if c <= 66978
                         then
                           (if c <= 66966
                            then (if c <= 66965 then 6 else 1)
                            else if c <= 66977 then 6 else 1)
                         else
                           if c <= 66994
                           then (if c <= 66993 then 6 else 1)
                           else if c <= 67001 then 6 else 1)
                      else
                        if c <= 67391
                        then
                          (if c <= 67071
                           then (if c <= 67004 then 6 else 1)
                           else if c <= 67382 then 6 else 1)
                        else
                          if c <= 67423
                          then (if c <= 67413 then 6 else 1)
                          else if c <= 67431 then 6 else 1)
                   else
                     if c <= 67591
                     then
                       (if c <= 67505
                        then
                          (if c <= 67462
                           then (if c <= 67461 then 6 else 1)
                           else if c <= 67504 then 6 else 1)
                        else
                          if c <= 67583
                          then (if c <= 67514 then 6 else 1)
                          else if c <= 67589 then 6 else 1)
                     else
                       if c <= 67638
                       then
                         (if c <= 67593
                          then (if c <= 67592 then 6 else 1)
                          else if c <= 67637 then 6 else 1)
                       else
                         if c <= 67643
                         then (if c <= 67640 then 6 else 1)
                         else if c <= 67644 then 6 else 1)
              else
                if c <= 68296
                then
                  (if c <= 68029
                   then
                     (if c <= 67827
                      then
                        (if c <= 67711
                         then
                           (if c <= 67679
                            then (if c <= 67669 then 6 else 1)
                            else if c <= 67702 then 6 else 1)
                         else
                           if c <= 67807
                           then (if c <= 67742 then 6 else 1)
                           else if c <= 67826 then 6 else 1)
                      else
                        if c <= 67871
                        then
                          (if c <= 67839
                           then (if c <= 67829 then 6 else 1)
                           else if c <= 67861 then 6 else 1)
                        else
                          if c <= 67967
                          then (if c <= 67897 then 6 else 1)
                          else if c <= 68023 then 6 else 1)
                   else
                     if c <= 68120
                     then
                       (if c <= 68111
                        then
                          (if c <= 68095
                           then (if c <= 68031 then 6 else 1)
                           else if c <= 68096 then 6 else 1)
                        else
                          if c <= 68116
                          then (if c <= 68115 then 6 else 1)
                          else if c <= 68119 then 6 else 1)
                     else
                       if c <= 68223
                       then
                         (if c <= 68191
                          then (if c <= 68149 then 6 else 1)
                          else if c <= 68220 then 6 else 1)
                       else
                         if c <= 68287
                         then (if c <= 68252 then 6 else 1)
                         else if c <= 68295 then 6 else 1)
                else
                  if c <= 68863
                  then
                    (if c <= 68479
                     then
                       (if c <= 68415
                        then
                          (if c <= 68351
                           then (if c <= 68324 then 6 else 1)
                           else if c <= 68405 then 6 else 1)
                        else
                          if c <= 68447
                          then (if c <= 68437 then 6 else 1)
                          else if c <= 68466 then 6 else 1)
                     else
                       if c <= 68735
                       then
                         (if c <= 68607
                          then (if c <= 68497 then 6 else 1)
                          else if c <= 68680 then 6 else 1)
                       else
                         if c <= 68799
                         then (if c <= 68786 then 6 else 1)
                         else if c <= 68850 then 6 else 1)
                  else
                    if c <= 69414
                    then
                      (if c <= 69295
                       then
                         (if c <= 69247
                          then (if c <= 68899 then 6 else 1)
                          else if c <= 69289 then 6 else 1)
                       else
                         if c <= 69375
                         then (if c <= 69297 then 6 else 1)
                         else if c <= 69404 then 6 else 1)
                    else
                      if c <= 69487
                      then
                        (if c <= 69423
                         then (if c <= 69415 then 6 else 1)
                         else if c <= 69445 then 6 else 1)
                      else
                        if c <= 69551
                        then (if c <= 69505 then 6 else 1)
                        else if c <= 69572 then 6 else 1)
       else
         if c <= 120122
         then
           (if c <= 72348
            then
              (if c <= 70655
               then
                 (if c <= 70162
                  then
                    (if c <= 69958
                     then
                       (if c <= 69762
                        then
                          (if c <= 69744
                           then
                             (if c <= 69634
                              then (if c <= 69622 then 6 else 1)
                              else if c <= 69687 then 6 else 1)
                           else
                             if c <= 69748
                             then (if c <= 69746 then 6 else 1)
                             else if c <= 69749 then 6 else 1)
                        else
                          if c <= 69890
                          then
                            (if c <= 69839
                             then (if c <= 69807 then 6 else 1)
                             else if c <= 69864 then 6 else 1)
                          else
                            if c <= 69955
                            then (if c <= 69926 then 6 else 1)
                            else if c <= 69956 then 6 else 1)
                     else
                       if c <= 70080
                       then
                         (if c <= 70005
                          then
                            (if c <= 69967
                             then (if c <= 69959 then 6 else 1)
                             else if c <= 70002 then 6 else 1)
                          else
                            if c <= 70018
                            then (if c <= 70006 then 6 else 1)
                            else if c <= 70066 then 6 else 1)
                       else
                         if c <= 70107
                         then
                           (if c <= 70105
                            then (if c <= 70084 then 6 else 1)
                            else if c <= 70106 then 6 else 1)
                         else
                           if c <= 70143
                           then (if c <= 70108 then 6 else 1)
                           else if c <= 70161 then 6 else 1)
                  else
                    if c <= 70414
                    then
                      (if c <= 70286
                       then
                         (if c <= 70279
                          then
                            (if c <= 70271
                             then (if c <= 70187 then 6 else 1)
                             else if c <= 70278 then 6 else 1)
                          else
                            if c <= 70281
                            then (if c <= 70280 then 6 else 1)
                            else if c <= 70285 then 6 else 1)
                       else
                         if c <= 70319
                         then
                           (if c <= 70302
                            then (if c <= 70301 then 6 else 1)
                            else if c <= 70312 then 6 else 1)
                         else
                           if c <= 70404
                           then (if c <= 70366 then 6 else 1)
                           else if c <= 70412 then 6 else 1)
                    else
                      if c <= 70452
                      then
                        (if c <= 70441
                         then
                           (if c <= 70418
                            then (if c <= 70416 then 6 else 1)
                            else if c <= 70440 then 6 else 1)
                         else
                           if c <= 70449
                           then (if c <= 70448 then 6 else 1)
                           else if c <= 70451 then 6 else 1)
                      else
                        if c <= 70479
                        then
                          (if c <= 70460
                           then (if c <= 70457 then 6 else 1)
                           else if c <= 70461 then 6 else 1)
                        else
                          if c <= 70492
                          then (if c <= 70480 then 6 else 1)
                          else if c <= 70497 then 6 else 1)
               else
                 if c <= 71934
                 then
                   (if c <= 71167
                    then
                      (if c <= 70851
                       then
                         (if c <= 70750
                          then
                            (if c <= 70726
                             then (if c <= 70708 then 6 else 1)
                             else if c <= 70730 then 6 else 1)
                          else
                            if c <= 70783
                            then (if c <= 70753 then 6 else 1)
                            else if c <= 70831 then 6 else 1)
                       else
                         if c <= 71039
                         then
                           (if c <= 70854
                            then (if c <= 70853 then 6 else 1)
                            else if c <= 70855 then 6 else 1)
                         else
                           if c <= 71127
                           then (if c <= 71086 then 6 else 1)
                           else if c <= 71131 then 6 else 1)
                    else
                      if c <= 71423
                      then
                        (if c <= 71295
                         then
                           (if c <= 71235
                            then (if c <= 71215 then 6 else 1)
                            else if c <= 71236 then 6 else 1)
                         else
                           if c <= 71351
                           then (if c <= 71338 then 6 else 1)
                           else if c <= 71352 then 6 else 1)
                      else
                        if c <= 71679
                        then
                          (if c <= 71487
                           then (if c <= 71450 then 6 else 1)
                           else if c <= 71494 then 6 else 1)
                        else
                          if c <= 71839
                          then (if c <= 71723 then 6 else 1)
                          else if c <= 71903 then 6 else 1)
                 else
                   if c <= 72105
                   then
                     (if c <= 71959
                      then
                        (if c <= 71947
                         then
                           (if c <= 71944
                            then (if c <= 71942 then 6 else 1)
                            else if c <= 71945 then 6 else 1)
                         else
                           if c <= 71956
                           then (if c <= 71955 then 6 else 1)
                           else if c <= 71958 then 6 else 1)
                      else
                        if c <= 72000
                        then
                          (if c <= 71998
                           then (if c <= 71983 then 6 else 1)
                           else if c <= 71999 then 6 else 1)
                        else
                          if c <= 72095
                          then (if c <= 72001 then 6 else 1)
                          else if c <= 72103 then 6 else 1)
                   else
                     if c <= 72202
                     then
                       (if c <= 72162
                        then
                          (if c <= 72160
                           then (if c <= 72144 then 6 else 1)
                           else if c <= 72161 then 6 else 1)
                        else
                          if c <= 72191
                          then (if c <= 72163 then 6 else 1)
                          else if c <= 72192 then 6 else 1)
                     else
                       if c <= 72271
                       then
                         (if c <= 72249
                          then (if c <= 72242 then 6 else 1)
                          else if c <= 72250 then 6 else 1)
                       else
                         if c <= 72283
                         then (if c <= 72272 then 6 else 1)
                         else if c <= 72329 then 6 else 1)
            else
              if c <= 94031
              then
                (if c <= 73727
                 then
                   (if c <= 72970
                    then
                      (if c <= 72767
                       then
                         (if c <= 72703
                          then
                            (if c <= 72367
                             then (if c <= 72349 then 6 else 1)
                             else if c <= 72440 then 6 else 1)
                          else
                            if c <= 72713
                            then (if c <= 72712 then 6 else 1)
                            else if c <= 72750 then 6 else 1)
                       else
                         if c <= 72959
                         then
                           (if c <= 72817
                            then (if c <= 72768 then 6 else 1)
                            else if c <= 72847 then 6 else 1)
                         else
                           if c <= 72967
                           then (if c <= 72966 then 6 else 1)
                           else if c <= 72969 then 6 else 1)
                    else
                      if c <= 73065
                      then
                        (if c <= 73055
                         then
                           (if c <= 73029
                            then (if c <= 73008 then 6 else 1)
                            else if c <= 73030 then 6 else 1)
                         else
                           if c <= 73062
                           then (if c <= 73061 then 6 else 1)
                           else if c <= 73064 then 6 else 1)
                      else
                        if c <= 73439
                        then
                          (if c <= 73111
                           then (if c <= 73097 then 6 else 1)
                           else if c <= 73112 then 6 else 1)
                        else
                          if c <= 73647
                          then (if c <= 73458 then 6 else 1)
                          else if c <= 73648 then 6 else 1)
                 else
                   if c <= 92783
                   then
                     (if c <= 77823
                      then
                        (if c <= 74879
                         then
                           (if c <= 74751
                            then (if c <= 74649 then 6 else 1)
                            else if c <= 74862 then 6 else 1)
                         else
                           if c <= 77711
                           then (if c <= 75075 then 6 else 1)
                           else if c <= 77808 then 6 else 1)
                      else
                        if c <= 92159
                        then
                          (if c <= 82943
                           then (if c <= 78894 then 6 else 1)
                           else if c <= 83526 then 6 else 1)
                        else
                          if c <= 92735
                          then (if c <= 92728 then 6 else 1)
                          else if c <= 92766 then 6 else 1)
                   else
                     if c <= 93026
                     then
                       (if c <= 92927
                        then
                          (if c <= 92879
                           then (if c <= 92862 then 6 else 1)
                           else if c <= 92909 then 6 else 1)
                        else
                          if c <= 92991
                          then (if c <= 92975 then 6 else 1)
                          else if c <= 92995 then 6 else 1)
                     else
                       if c <= 93759
                       then
                         (if c <= 93052
                          then (if c <= 93047 then 6 else 1)
                          else if c <= 93071 then 6 else 1)
                       else
                         if c <= 93951
                         then (if c <= 93823 then 6 else 1)
                         else if c <= 94026 then 6 else 1)
              else
                if c <= 113791
                then
                  (if c <= 110580
                   then
                     (if c <= 94207
                      then
                        (if c <= 94175
                         then
                           (if c <= 94098
                            then (if c <= 94032 then 6 else 1)
                            else if c <= 94111 then 6 else 1)
                         else
                           if c <= 94178
                           then (if c <= 94177 then 6 else 1)
                           else if c <= 94179 then 6 else 1)
                      else
                        if c <= 101631
                        then
                          (if c <= 100351
                           then (if c <= 100343 then 6 else 1)
                           else if c <= 101589 then 6 else 1)
                        else
                          if c <= 110575
                          then (if c <= 101640 then 6 else 1)
                          else if c <= 110579 then 6 else 1)
                   else
                     if c <= 110947
                     then
                       (if c <= 110591
                        then
                          (if c <= 110588
                           then (if c <= 110587 then 6 else 1)
                           else if c <= 110590 then 6 else 1)
                        else
                          if c <= 110927
                          then (if c <= 110882 then 6 else 1)
                          else if c <= 110930 then 6 else 1)
                     else
                       if c <= 113663
                       then
                         (if c <= 110959
                          then (if c <= 110951 then 6 else 1)
                          else if c <= 111355 then 6 else 1)
                       else
                         if c <= 113775
                         then (if c <= 113770 then 6 else 1)
                         else if c <= 113788 then 6 else 1)
                else
                  if c <= 119981
                  then
                    (if c <= 119965
                     then
                       (if c <= 119807
                        then
                          (if c <= 113807
                           then (if c <= 113800 then 6 else 1)
                           else if c <= 113817 then 6 else 1)
                        else
                          if c <= 119893
                          then (if c <= 119892 then 6 else 1)
                          else if c <= 119964 then 6 else 1)
                     else
                       if c <= 119972
                       then
                         (if c <= 119969
                          then (if c <= 119967 then 6 else 1)
                          else if c <= 119970 then 6 else 1)
                       else
                         if c <= 119976
                         then (if c <= 119974 then 6 else 1)
                         else if c <= 119980 then 6 else 1)
                  else
                    if c <= 120070
                    then
                      (if c <= 119996
                       then
                         (if c <= 119994
                          then (if c <= 119993 then 6 else 1)
                          else if c <= 119995 then 6 else 1)
                       else
                         if c <= 120004
                         then (if c <= 120003 then 6 else 1)
                         else if c <= 120069 then 6 else 1)
                    else
                      if c <= 120085
                      then
                        (if c <= 120076
                         then (if c <= 120074 then 6 else 1)
                         else if c <= 120084 then 6 else 1)
                      else
                        if c <= 120093
                        then (if c <= 120092 then 6 else 1)
                        else if c <= 120121 then 6 else 1)
         else
           if c <= 131071
           then
             (if c <= 126468
              then
                (if c <= 122623
                 then
                   (if c <= 120571
                    then
                      (if c <= 120145
                       then
                         (if c <= 120133
                          then
                            (if c <= 120127
                             then (if c <= 120126 then 6 else 1)
                             else if c <= 120132 then 6 else 1)
                          else
                            if c <= 120137
                            then (if c <= 120134 then 6 else 1)
                            else if c <= 120144 then 6 else 1)
                       else
                         if c <= 120513
                         then
                           (if c <= 120487
                            then (if c <= 120485 then 6 else 1)
                            else if c <= 120512 then 6 else 1)
                         else
                           if c <= 120539
                           then (if c <= 120538 then 6 else 1)
                           else if c <= 120570 then 6 else 1)
                    else
                      if c <= 120687
                      then
                        (if c <= 120629
                         then
                           (if c <= 120597
                            then (if c <= 120596 then 6 else 1)
                            else if c <= 120628 then 6 else 1)
                         else
                           if c <= 120655
                           then (if c <= 120654 then 6 else 1)
                           else if c <= 120686 then 6 else 1)
                      else
                        if c <= 120745
                        then
                          (if c <= 120713
                           then (if c <= 120712 then 6 else 1)
                           else if c <= 120744 then 6 else 1)
                        else
                          if c <= 120771
                          then (if c <= 120770 then 6 else 1)
                          else if c <= 120779 then 6 else 1)
                 else
                   if c <= 124895
                   then
                     (if c <= 123190
                      then
                        (if c <= 122654
                         then 6
                         else
                           if c <= 123135
                           then 1
                           else if c <= 123180 then 6 else 1)
                      else
                        if c <= 123535
                        then
                          (if c <= 123213
                           then (if c <= 123197 then 6 else 1)
                           else if c <= 123214 then 6 else 1)
                        else
                          if c <= 123583
                          then (if c <= 123565 then 6 else 1)
                          else if c <= 123627 then 6 else 1)
                   else
                     if c <= 124927
                     then
                       (if c <= 124908
                        then
                          (if c <= 124903
                           then (if c <= 124902 then 6 else 1)
                           else if c <= 124907 then 6 else 1)
                        else
                          if c <= 124911
                          then (if c <= 124910 then 6 else 1)
                          else if c <= 124926 then 6 else 1)
                     else
                       if c <= 125258
                       then
                         (if c <= 125183
                          then (if c <= 125124 then 6 else 1)
                          else if c <= 125251 then 6 else 1)
                       else
                         if c <= 126463
                         then (if c <= 125259 then 6 else 1)
                         else if c <= 126467 then 6 else 1)
              else
                if c <= 126552
                then
                  (if c <= 126529
                   then
                     (if c <= 126504
                      then
                        (if c <= 126499
                         then
                           (if c <= 126496
                            then (if c <= 126495 then 6 else 1)
                            else if c <= 126498 then 6 else 1)
                         else
                           if c <= 126502
                           then (if c <= 126500 then 6 else 1)
                           else if c <= 126503 then 6 else 1)
                      else
                        if c <= 126520
                        then
                          (if c <= 126515
                           then (if c <= 126514 then 6 else 1)
                           else if c <= 126519 then 6 else 1)
                        else
                          if c <= 126522
                          then (if c <= 126521 then 6 else 1)
                          else if c <= 126523 then 6 else 1)
                   else
                     if c <= 126540
                     then
                       (if c <= 126536
                        then
                          (if c <= 126534
                           then (if c <= 126530 then 6 else 1)
                           else if c <= 126535 then 6 else 1)
                        else
                          if c <= 126538
                          then (if c <= 126537 then 6 else 1)
                          else if c <= 126539 then 6 else 1)
                     else
                       if c <= 126547
                       then
                         (if c <= 126544
                          then (if c <= 126543 then 6 else 1)
                          else if c <= 126546 then 6 else 1)
                       else
                         if c <= 126550
                         then (if c <= 126548 then 6 else 1)
                         else if c <= 126551 then 6 else 1)
                else
                  if c <= 126579
                  then
                    (if c <= 126560
                     then
                       (if c <= 126556
                        then
                          (if c <= 126554
                           then (if c <= 126553 then 6 else 1)
                           else if c <= 126555 then 6 else 1)
                        else
                          if c <= 126558
                          then (if c <= 126557 then 6 else 1)
                          else if c <= 126559 then 6 else 1)
                     else
                       if c <= 126566
                       then
                         (if c <= 126563
                          then (if c <= 126562 then 6 else 1)
                          else if c <= 126564 then 6 else 1)
                       else
                         if c <= 126571
                         then (if c <= 126570 then 6 else 1)
                         else if c <= 126578 then 6 else 1)
                  else
                    if c <= 126602
                    then
                      (if c <= 126589
                       then
                         (if c <= 126584
                          then (if c <= 126583 then 6 else 1)
                          else if c <= 126588 then 6 else 1)
                       else
                         if c <= 126591
                         then (if c <= 126590 then 6 else 1)
                         else if c <= 126601 then 6 else 1)
                    else
                      if c <= 126628
                      then
                        (if c <= 126624
                         then (if c <= 126619 then 6 else 1)
                         else if c <= 126627 then 6 else 1)
                      else
                        if c <= 126634
                        then (if c <= 126633 then 6 else 1)
                        else if c <= 126651 then 6 else 1)
           else
             if c <= 183983
             then
               (if c <= 177983
                then
                  (if c <= 173823
                   then (if c <= 173791 then 6 else 1)
                   else if c <= 177976 then 6 else 1)
                else
                  if c <= 178207
                  then (if c <= 178205 then 6 else 1)
                  else if c <= 183969 then 6 else 1)
             else if c <= 191456 then 6 else 1)
    else (-1)
let __sedlex_partition_60 c =
  if c <= 35
  then (-1)
  else
    if c <= 122
    then (Char.code (String.unsafe_get __sedlex_table_86 (c - 36))) - 1
    else (-1)
let __sedlex_partition_111 c =
  if c <= 34
  then (-1)
  else
    if c <= 122
    then (Char.code (String.unsafe_get __sedlex_table_87 (c - 35))) - 1
    else (-1)
let __sedlex_partition_119 c =
  if c <= 8191
  then (Char.code (String.unsafe_get __sedlex_table_88 (c - (-1)))) - 1
  else
    if c <= 194559
    then
      (if c <= 69599
       then
         (if c <= 43711
          then
            (if c <= 12703
             then
               (if c <= 11519
                then
                  (if c <= 8489
                   then
                     (if c <= 8454
                      then
                        (if c <= 8304
                         then
                           (if c <= 8238
                            then
                              (if c <= 8231
                               then (if c <= 8202 then 2 else 1)
                               else if c <= 8233 then 3 else 1)
                            else
                              if c <= 8286
                              then (if c <= 8239 then 2 else 1)
                              else if c <= 8287 then 2 else 1)
                         else
                           if c <= 8335
                           then
                             (if c <= 8318
                              then (if c <= 8305 then 6 else 1)
                              else if c <= 8319 then 6 else 1)
                           else
                             if c <= 8449
                             then (if c <= 8348 then 6 else 1)
                             else if c <= 8450 then 6 else 1)
                      else
                        if c <= 8477
                        then
                          (if c <= 8468
                           then
                             (if c <= 8457
                              then (if c <= 8455 then 6 else 1)
                              else if c <= 8467 then 6 else 1)
                           else
                             if c <= 8471
                             then (if c <= 8469 then 6 else 1)
                             else 6)
                        else
                          if c <= 8485
                          then
                            (if c <= 8483
                             then 1
                             else if c <= 8484 then 6 else 1)
                          else
                            if c <= 8487
                            then (if c <= 8486 then 6 else 1)
                            else if c <= 8488 then 6 else 1)
                   else
                     if c <= 8543
                     then
                       (if c <= 8505
                        then 6
                        else
                          if c <= 8516
                          then
                            (if c <= 8507
                             then 1
                             else if c <= 8511 then 6 else 1)
                          else
                            if c <= 8525
                            then (if c <= 8521 then 6 else 1)
                            else if c <= 8526 then 6 else 1)
                     else
                       if c <= 11389
                       then
                         (if c <= 8584
                          then 6
                          else if c <= 11263 then 1 else 6)
                       else
                         if c <= 11498
                         then (if c <= 11492 then 6 else 1)
                         else
                           if c <= 11505
                           then (if c <= 11502 then 6 else 1)
                           else if c <= 11507 then 6 else 1)
                else
                  if c <= 12294
                  then
                    (if c <= 11695
                     then
                       (if c <= 11630
                        then
                          (if c <= 11564
                           then
                             (if c <= 11558
                              then (if c <= 11557 then 6 else 1)
                              else if c <= 11559 then 6 else 1)
                           else
                             if c <= 11567
                             then (if c <= 11565 then 6 else 1)
                             else if c <= 11623 then 6 else 1)
                        else
                          if c <= 11679
                          then
                            (if c <= 11647
                             then (if c <= 11631 then 6 else 1)
                             else if c <= 11670 then 6 else 1)
                          else
                            if c <= 11687
                            then (if c <= 11686 then 6 else 1)
                            else if c <= 11694 then 6 else 1)
                     else
                       if c <= 11727
                       then
                         (if c <= 11711
                          then
                            (if c <= 11703
                             then (if c <= 11702 then 6 else 1)
                             else if c <= 11710 then 6 else 1)
                          else
                            if c <= 11719
                            then (if c <= 11718 then 6 else 1)
                            else if c <= 11726 then 6 else 1)
                       else
                         if c <= 12287
                         then
                           (if c <= 11735
                            then (if c <= 11734 then 6 else 1)
                            else if c <= 11742 then 6 else 1)
                         else
                           if c <= 12292
                           then (if c <= 12288 then 2 else 1)
                           else 6)
                  else
                    if c <= 12442
                    then
                      (if c <= 12343
                       then
                         (if c <= 12320
                          then (if c <= 12295 then 6 else 1)
                          else
                            if c <= 12336
                            then (if c <= 12329 then 6 else 1)
                            else if c <= 12341 then 6 else 1)
                       else
                         if c <= 12348
                         then 6
                         else
                           if c <= 12352
                           then 1
                           else if c <= 12438 then 6 else 1)
                    else
                      if c <= 12539
                      then
                        (if c <= 12447
                         then 6
                         else
                           if c <= 12448
                           then 1
                           else if c <= 12538 then 6 else 1)
                      else
                        if c <= 12548
                        then (if c <= 12543 then 6 else 1)
                        else
                          if c <= 12592
                          then (if c <= 12591 then 6 else 1)
                          else if c <= 12686 then 6 else 1)
             else
               if c <= 42999
               then
                 (if c <= 42653
                  then
                    (if c <= 42239
                     then
                       (if c <= 40981
                        then
                          (if c <= 13311
                           then
                             (if c <= 12783
                              then (if c <= 12735 then 6 else 1)
                              else if c <= 12799 then 6 else 1)
                           else
                             if c <= 19967
                             then (if c <= 19903 then 6 else 1)
                             else 6)
                        else
                          if c <= 42191
                          then (if c <= 42124 then 6 else 1)
                          else if c <= 42237 then 6 else 1)
                     else
                       if c <= 42559
                       then
                         (if c <= 42511
                          then (if c <= 42508 then 6 else 1)
                          else
                            if c <= 42537
                            then (if c <= 42527 then 6 else 1)
                            else if c <= 42539 then 6 else 1)
                       else
                         if c <= 42622
                         then (if c <= 42606 then 6 else 1)
                         else 6)
                  else
                    if c <= 42890
                    then
                      (if c <= 42785
                       then
                         (if c <= 42735
                          then (if c <= 42655 then 1 else 6)
                          else
                            if c <= 42774
                            then 1
                            else if c <= 42783 then 6 else 1)
                       else
                         if c <= 42887
                         then 6
                         else if c <= 42888 then 6 else 1)
                    else
                      if c <= 42962
                      then
                        (if c <= 42954
                         then 6
                         else
                           if c <= 42959
                           then 1
                           else if c <= 42961 then 6 else 1)
                      else
                        if c <= 42993
                        then
                          (if c <= 42964
                           then (if c <= 42963 then 6 else 1)
                           else if c <= 42969 then 6 else 1)
                        else 6)
               else
                 if c <= 43470
                 then
                   (if c <= 43137
                    then
                      (if c <= 43010
                       then
                         (if c <= 43002
                          then 6
                          else if c <= 43009 then 6 else 1)
                       else
                         if c <= 43019
                         then
                           (if c <= 43014
                            then (if c <= 43013 then 6 else 1)
                            else if c <= 43018 then 6 else 1)
                         else
                           if c <= 43071
                           then (if c <= 43042 then 6 else 1)
                           else if c <= 43123 then 6 else 1)
                    else
                      if c <= 43273
                      then
                        (if c <= 43258
                         then
                           (if c <= 43249
                            then (if c <= 43187 then 6 else 1)
                            else if c <= 43255 then 6 else 1)
                         else
                           if c <= 43260
                           then (if c <= 43259 then 6 else 1)
                           else if c <= 43262 then 6 else 1)
                      else
                        if c <= 43359
                        then
                          (if c <= 43311
                           then (if c <= 43301 then 6 else 1)
                           else if c <= 43334 then 6 else 1)
                        else
                          if c <= 43395
                          then (if c <= 43388 then 6 else 1)
                          else if c <= 43442 then 6 else 1)
                 else
                   if c <= 43615
                   then
                     (if c <= 43513
                      then
                        (if c <= 43493
                         then
                           (if c <= 43487
                            then (if c <= 43471 then 6 else 1)
                            else if c <= 43492 then 6 else 1)
                         else if c <= 43503 then 6 else 1)
                      else
                        if c <= 43583
                        then
                          (if c <= 43519
                           then (if c <= 43518 then 6 else 1)
                           else if c <= 43560 then 6 else 1)
                        else
                          if c <= 43587
                          then (if c <= 43586 then 6 else 1)
                          else if c <= 43595 then 6 else 1)
                   else
                     if c <= 43645
                     then
                       (if c <= 43638
                        then 6
                        else
                          if c <= 43641
                          then 1
                          else if c <= 43642 then 6 else 1)
                     else
                       if c <= 43700
                       then
                         (if c <= 43696
                          then (if c <= 43695 then 6 else 1)
                          else if c <= 43697 then 6 else 1)
                       else
                         if c <= 43704
                         then (if c <= 43702 then 6 else 1)
                         else if c <= 43709 then 6 else 1)
          else
            if c <= 66377
            then
              (if c <= 64325
               then
                 (if c <= 43887
                  then
                    (if c <= 43784
                     then
                       (if c <= 43743
                        then
                          (if c <= 43738
                           then
                             (if c <= 43713
                              then (if c <= 43712 then 6 else 1)
                              else if c <= 43714 then 6 else 1)
                           else if c <= 43741 then 6 else 1)
                        else
                          if c <= 43764
                          then
                            (if c <= 43761
                             then (if c <= 43754 then 6 else 1)
                             else 6)
                          else
                            if c <= 43776
                            then 1
                            else if c <= 43782 then 6 else 1)
                     else
                       if c <= 43823
                       then
                         (if c <= 43807
                          then
                            (if c <= 43792
                             then (if c <= 43790 then 6 else 1)
                             else if c <= 43798 then 6 else 1)
                          else
                            if c <= 43815
                            then (if c <= 43814 then 6 else 1)
                            else if c <= 43822 then 6 else 1)
                       else
                         if c <= 43880
                         then
                           (if c <= 43867
                            then (if c <= 43866 then 6 else 1)
                            else 6)
                         else if c <= 43881 then 6 else 1)
                  else
                    if c <= 64274
                    then
                      (if c <= 55242
                       then
                         (if c <= 44031
                          then (if c <= 44002 then 6 else 1)
                          else
                            if c <= 55215
                            then (if c <= 55203 then 6 else 1)
                            else if c <= 55238 then 6 else 1)
                       else
                         if c <= 64111
                         then
                           (if c <= 63743
                            then (if c <= 55291 then 6 else 1)
                            else if c <= 64109 then 6 else 1)
                         else
                           if c <= 64255
                           then (if c <= 64217 then 6 else 1)
                           else if c <= 64262 then 6 else 1)
                    else
                      if c <= 64311
                      then
                        (if c <= 64286
                         then
                           (if c <= 64284
                            then (if c <= 64279 then 6 else 1)
                            else if c <= 64285 then 6 else 1)
                         else
                           if c <= 64297
                           then (if c <= 64296 then 6 else 1)
                           else if c <= 64310 then 6 else 1)
                      else
                        if c <= 64319
                        then
                          (if c <= 64317
                           then (if c <= 64316 then 6 else 1)
                           else if c <= 64318 then 6 else 1)
                        else
                          if c <= 64322
                          then (if c <= 64321 then 6 else 1)
                          else if c <= 64324 then 6 else 1)
               else
                 if c <= 65481
                 then
                   (if c <= 65312
                    then
                      (if c <= 65007
                       then
                         (if c <= 64847
                          then
                            (if c <= 64466
                             then (if c <= 64433 then 6 else 1)
                             else if c <= 64829 then 6 else 1)
                          else
                            if c <= 64913
                            then (if c <= 64911 then 6 else 1)
                            else if c <= 64967 then 6 else 1)
                       else
                         if c <= 65141
                         then
                           (if c <= 65135
                            then (if c <= 65019 then 6 else 1)
                            else if c <= 65140 then 6 else 1)
                         else
                           if c <= 65278
                           then (if c <= 65276 then 6 else 1)
                           else if c <= 65279 then 2 else 1)
                    else
                      if c <= 65437
                      then
                        (if c <= 65381
                         then
                           (if c <= 65344
                            then (if c <= 65338 then 6 else 1)
                            else if c <= 65370 then 6 else 1)
                         else 6)
                      else
                        if c <= 65470
                        then 6
                        else
                          if c <= 65473
                          then 1
                          else if c <= 65479 then 6 else 1)
                 else
                   if c <= 65615
                   then
                     (if c <= 65548
                      then
                        (if c <= 65497
                         then
                           (if c <= 65489
                            then (if c <= 65487 then 6 else 1)
                            else if c <= 65495 then 6 else 1)
                         else
                           if c <= 65535
                           then (if c <= 65500 then 6 else 1)
                           else if c <= 65547 then 6 else 1)
                      else
                        if c <= 65595
                        then
                          (if c <= 65575
                           then (if c <= 65574 then 6 else 1)
                           else if c <= 65594 then 6 else 1)
                        else
                          if c <= 65598
                          then (if c <= 65597 then 6 else 1)
                          else if c <= 65613 then 6 else 1)
                   else
                     if c <= 66207
                     then
                       (if c <= 65855
                        then
                          (if c <= 65663
                           then (if c <= 65629 then 6 else 1)
                           else if c <= 65786 then 6 else 1)
                        else
                          if c <= 66175
                          then (if c <= 65908 then 6 else 1)
                          else if c <= 66204 then 6 else 1)
                     else
                       if c <= 66348
                       then
                         (if c <= 66303
                          then (if c <= 66256 then 6 else 1)
                          else if c <= 66335 then 6 else 1)
                       else 6)
            else
              if c <= 67646
              then
                (if c <= 66963
                 then
                   (if c <= 66717
                    then
                      (if c <= 66463
                       then
                         (if c <= 66383
                          then (if c <= 66378 then 6 else 1)
                          else
                            if c <= 66431
                            then (if c <= 66421 then 6 else 1)
                            else if c <= 66461 then 6 else 1)
                       else
                         if c <= 66512
                         then
                           (if c <= 66503
                            then (if c <= 66499 then 6 else 1)
                            else if c <= 66511 then 6 else 1)
                         else
                           if c <= 66559
                           then (if c <= 66517 then 6 else 1)
                           else 6)
                    else
                      if c <= 66863
                      then
                        (if c <= 66775
                         then
                           (if c <= 66735
                            then 1
                            else if c <= 66771 then 6 else 1)
                         else
                           if c <= 66815
                           then (if c <= 66811 then 6 else 1)
                           else if c <= 66855 then 6 else 1)
                      else
                        if c <= 66939
                        then
                          (if c <= 66927
                           then (if c <= 66915 then 6 else 1)
                           else if c <= 66938 then 6 else 1)
                        else
                          if c <= 66955
                          then (if c <= 66954 then 6 else 1)
                          else if c <= 66962 then 6 else 1)
                 else
                   if c <= 67455
                   then
                     (if c <= 67002
                      then
                        (if c <= 66978
                         then
                           (if c <= 66966
                            then (if c <= 66965 then 6 else 1)
                            else if c <= 66977 then 6 else 1)
                         else
                           if c <= 66994
                           then (if c <= 66993 then 6 else 1)
                           else if c <= 67001 then 6 else 1)
                      else
                        if c <= 67391
                        then
                          (if c <= 67071
                           then (if c <= 67004 then 6 else 1)
                           else if c <= 67382 then 6 else 1)
                        else
                          if c <= 67423
                          then (if c <= 67413 then 6 else 1)
                          else if c <= 67431 then 6 else 1)
                   else
                     if c <= 67591
                     then
                       (if c <= 67505
                        then
                          (if c <= 67462
                           then (if c <= 67461 then 6 else 1)
                           else if c <= 67504 then 6 else 1)
                        else
                          if c <= 67583
                          then (if c <= 67514 then 6 else 1)
                          else if c <= 67589 then 6 else 1)
                     else
                       if c <= 67638
                       then
                         (if c <= 67593
                          then (if c <= 67592 then 6 else 1)
                          else if c <= 67637 then 6 else 1)
                       else
                         if c <= 67643
                         then (if c <= 67640 then 6 else 1)
                         else if c <= 67644 then 6 else 1)
              else
                if c <= 68296
                then
                  (if c <= 68029
                   then
                     (if c <= 67827
                      then
                        (if c <= 67711
                         then
                           (if c <= 67679
                            then (if c <= 67669 then 6 else 1)
                            else if c <= 67702 then 6 else 1)
                         else
                           if c <= 67807
                           then (if c <= 67742 then 6 else 1)
                           else if c <= 67826 then 6 else 1)
                      else
                        if c <= 67871
                        then
                          (if c <= 67839
                           then (if c <= 67829 then 6 else 1)
                           else if c <= 67861 then 6 else 1)
                        else
                          if c <= 67967
                          then (if c <= 67897 then 6 else 1)
                          else if c <= 68023 then 6 else 1)
                   else
                     if c <= 68120
                     then
                       (if c <= 68111
                        then
                          (if c <= 68095
                           then (if c <= 68031 then 6 else 1)
                           else if c <= 68096 then 6 else 1)
                        else
                          if c <= 68116
                          then (if c <= 68115 then 6 else 1)
                          else if c <= 68119 then 6 else 1)
                     else
                       if c <= 68223
                       then
                         (if c <= 68191
                          then (if c <= 68149 then 6 else 1)
                          else if c <= 68220 then 6 else 1)
                       else
                         if c <= 68287
                         then (if c <= 68252 then 6 else 1)
                         else if c <= 68295 then 6 else 1)
                else
                  if c <= 68863
                  then
                    (if c <= 68479
                     then
                       (if c <= 68415
                        then
                          (if c <= 68351
                           then (if c <= 68324 then 6 else 1)
                           else if c <= 68405 then 6 else 1)
                        else
                          if c <= 68447
                          then (if c <= 68437 then 6 else 1)
                          else if c <= 68466 then 6 else 1)
                     else
                       if c <= 68735
                       then
                         (if c <= 68607
                          then (if c <= 68497 then 6 else 1)
                          else if c <= 68680 then 6 else 1)
                       else
                         if c <= 68799
                         then (if c <= 68786 then 6 else 1)
                         else if c <= 68850 then 6 else 1)
                  else
                    if c <= 69414
                    then
                      (if c <= 69295
                       then
                         (if c <= 69247
                          then (if c <= 68899 then 6 else 1)
                          else if c <= 69289 then 6 else 1)
                       else
                         if c <= 69375
                         then (if c <= 69297 then 6 else 1)
                         else if c <= 69404 then 6 else 1)
                    else
                      if c <= 69487
                      then
                        (if c <= 69423
                         then (if c <= 69415 then 6 else 1)
                         else if c <= 69445 then 6 else 1)
                      else
                        if c <= 69551
                        then (if c <= 69505 then 6 else 1)
                        else if c <= 69572 then 6 else 1)
       else
         if c <= 120122
         then
           (if c <= 72348
            then
              (if c <= 70655
               then
                 (if c <= 70162
                  then
                    (if c <= 69958
                     then
                       (if c <= 69762
                        then
                          (if c <= 69744
                           then
                             (if c <= 69634
                              then (if c <= 69622 then 6 else 1)
                              else if c <= 69687 then 6 else 1)
                           else
                             if c <= 69748
                             then (if c <= 69746 then 6 else 1)
                             else if c <= 69749 then 6 else 1)
                        else
                          if c <= 69890
                          then
                            (if c <= 69839
                             then (if c <= 69807 then 6 else 1)
                             else if c <= 69864 then 6 else 1)
                          else
                            if c <= 69955
                            then (if c <= 69926 then 6 else 1)
                            else if c <= 69956 then 6 else 1)
                     else
                       if c <= 70080
                       then
                         (if c <= 70005
                          then
                            (if c <= 69967
                             then (if c <= 69959 then 6 else 1)
                             else if c <= 70002 then 6 else 1)
                          else
                            if c <= 70018
                            then (if c <= 70006 then 6 else 1)
                            else if c <= 70066 then 6 else 1)
                       else
                         if c <= 70107
                         then
                           (if c <= 70105
                            then (if c <= 70084 then 6 else 1)
                            else if c <= 70106 then 6 else 1)
                         else
                           if c <= 70143
                           then (if c <= 70108 then 6 else 1)
                           else if c <= 70161 then 6 else 1)
                  else
                    if c <= 70414
                    then
                      (if c <= 70286
                       then
                         (if c <= 70279
                          then
                            (if c <= 70271
                             then (if c <= 70187 then 6 else 1)
                             else if c <= 70278 then 6 else 1)
                          else
                            if c <= 70281
                            then (if c <= 70280 then 6 else 1)
                            else if c <= 70285 then 6 else 1)
                       else
                         if c <= 70319
                         then
                           (if c <= 70302
                            then (if c <= 70301 then 6 else 1)
                            else if c <= 70312 then 6 else 1)
                         else
                           if c <= 70404
                           then (if c <= 70366 then 6 else 1)
                           else if c <= 70412 then 6 else 1)
                    else
                      if c <= 70452
                      then
                        (if c <= 70441
                         then
                           (if c <= 70418
                            then (if c <= 70416 then 6 else 1)
                            else if c <= 70440 then 6 else 1)
                         else
                           if c <= 70449
                           then (if c <= 70448 then 6 else 1)
                           else if c <= 70451 then 6 else 1)
                      else
                        if c <= 70479
                        then
                          (if c <= 70460
                           then (if c <= 70457 then 6 else 1)
                           else if c <= 70461 then 6 else 1)
                        else
                          if c <= 70492
                          then (if c <= 70480 then 6 else 1)
                          else if c <= 70497 then 6 else 1)
               else
                 if c <= 71934
                 then
                   (if c <= 71167
                    then
                      (if c <= 70851
                       then
                         (if c <= 70750
                          then
                            (if c <= 70726
                             then (if c <= 70708 then 6 else 1)
                             else if c <= 70730 then 6 else 1)
                          else
                            if c <= 70783
                            then (if c <= 70753 then 6 else 1)
                            else if c <= 70831 then 6 else 1)
                       else
                         if c <= 71039
                         then
                           (if c <= 70854
                            then (if c <= 70853 then 6 else 1)
                            else if c <= 70855 then 6 else 1)
                         else
                           if c <= 71127
                           then (if c <= 71086 then 6 else 1)
                           else if c <= 71131 then 6 else 1)
                    else
                      if c <= 71423
                      then
                        (if c <= 71295
                         then
                           (if c <= 71235
                            then (if c <= 71215 then 6 else 1)
                            else if c <= 71236 then 6 else 1)
                         else
                           if c <= 71351
                           then (if c <= 71338 then 6 else 1)
                           else if c <= 71352 then 6 else 1)
                      else
                        if c <= 71679
                        then
                          (if c <= 71487
                           then (if c <= 71450 then 6 else 1)
                           else if c <= 71494 then 6 else 1)
                        else
                          if c <= 71839
                          then (if c <= 71723 then 6 else 1)
                          else if c <= 71903 then 6 else 1)
                 else
                   if c <= 72105
                   then
                     (if c <= 71959
                      then
                        (if c <= 71947
                         then
                           (if c <= 71944
                            then (if c <= 71942 then 6 else 1)
                            else if c <= 71945 then 6 else 1)
                         else
                           if c <= 71956
                           then (if c <= 71955 then 6 else 1)
                           else if c <= 71958 then 6 else 1)
                      else
                        if c <= 72000
                        then
                          (if c <= 71998
                           then (if c <= 71983 then 6 else 1)
                           else if c <= 71999 then 6 else 1)
                        else
                          if c <= 72095
                          then (if c <= 72001 then 6 else 1)
                          else if c <= 72103 then 6 else 1)
                   else
                     if c <= 72202
                     then
                       (if c <= 72162
                        then
                          (if c <= 72160
                           then (if c <= 72144 then 6 else 1)
                           else if c <= 72161 then 6 else 1)
                        else
                          if c <= 72191
                          then (if c <= 72163 then 6 else 1)
                          else if c <= 72192 then 6 else 1)
                     else
                       if c <= 72271
                       then
                         (if c <= 72249
                          then (if c <= 72242 then 6 else 1)
                          else if c <= 72250 then 6 else 1)
                       else
                         if c <= 72283
                         then (if c <= 72272 then 6 else 1)
                         else if c <= 72329 then 6 else 1)
            else
              if c <= 94031
              then
                (if c <= 73727
                 then
                   (if c <= 72970
                    then
                      (if c <= 72767
                       then
                         (if c <= 72703
                          then
                            (if c <= 72367
                             then (if c <= 72349 then 6 else 1)
                             else if c <= 72440 then 6 else 1)
                          else
                            if c <= 72713
                            then (if c <= 72712 then 6 else 1)
                            else if c <= 72750 then 6 else 1)
                       else
                         if c <= 72959
                         then
                           (if c <= 72817
                            then (if c <= 72768 then 6 else 1)
                            else if c <= 72847 then 6 else 1)
                         else
                           if c <= 72967
                           then (if c <= 72966 then 6 else 1)
                           else if c <= 72969 then 6 else 1)
                    else
                      if c <= 73065
                      then
                        (if c <= 73055
                         then
                           (if c <= 73029
                            then (if c <= 73008 then 6 else 1)
                            else if c <= 73030 then 6 else 1)
                         else
                           if c <= 73062
                           then (if c <= 73061 then 6 else 1)
                           else if c <= 73064 then 6 else 1)
                      else
                        if c <= 73439
                        then
                          (if c <= 73111
                           then (if c <= 73097 then 6 else 1)
                           else if c <= 73112 then 6 else 1)
                        else
                          if c <= 73647
                          then (if c <= 73458 then 6 else 1)
                          else if c <= 73648 then 6 else 1)
                 else
                   if c <= 92783
                   then
                     (if c <= 77823
                      then
                        (if c <= 74879
                         then
                           (if c <= 74751
                            then (if c <= 74649 then 6 else 1)
                            else if c <= 74862 then 6 else 1)
                         else
                           if c <= 77711
                           then (if c <= 75075 then 6 else 1)
                           else if c <= 77808 then 6 else 1)
                      else
                        if c <= 92159
                        then
                          (if c <= 82943
                           then (if c <= 78894 then 6 else 1)
                           else if c <= 83526 then 6 else 1)
                        else
                          if c <= 92735
                          then (if c <= 92728 then 6 else 1)
                          else if c <= 92766 then 6 else 1)
                   else
                     if c <= 93026
                     then
                       (if c <= 92927
                        then
                          (if c <= 92879
                           then (if c <= 92862 then 6 else 1)
                           else if c <= 92909 then 6 else 1)
                        else
                          if c <= 92991
                          then (if c <= 92975 then 6 else 1)
                          else if c <= 92995 then 6 else 1)
                     else
                       if c <= 93759
                       then
                         (if c <= 93052
                          then (if c <= 93047 then 6 else 1)
                          else if c <= 93071 then 6 else 1)
                       else
                         if c <= 93951
                         then (if c <= 93823 then 6 else 1)
                         else if c <= 94026 then 6 else 1)
              else
                if c <= 113791
                then
                  (if c <= 110580
                   then
                     (if c <= 94207
                      then
                        (if c <= 94175
                         then
                           (if c <= 94098
                            then (if c <= 94032 then 6 else 1)
                            else if c <= 94111 then 6 else 1)
                         else
                           if c <= 94178
                           then (if c <= 94177 then 6 else 1)
                           else if c <= 94179 then 6 else 1)
                      else
                        if c <= 101631
                        then
                          (if c <= 100351
                           then (if c <= 100343 then 6 else 1)
                           else if c <= 101589 then 6 else 1)
                        else
                          if c <= 110575
                          then (if c <= 101640 then 6 else 1)
                          else if c <= 110579 then 6 else 1)
                   else
                     if c <= 110947
                     then
                       (if c <= 110591
                        then
                          (if c <= 110588
                           then (if c <= 110587 then 6 else 1)
                           else if c <= 110590 then 6 else 1)
                        else
                          if c <= 110927
                          then (if c <= 110882 then 6 else 1)
                          else if c <= 110930 then 6 else 1)
                     else
                       if c <= 113663
                       then
                         (if c <= 110959
                          then (if c <= 110951 then 6 else 1)
                          else if c <= 111355 then 6 else 1)
                       else
                         if c <= 113775
                         then (if c <= 113770 then 6 else 1)
                         else if c <= 113788 then 6 else 1)
                else
                  if c <= 119981
                  then
                    (if c <= 119965
                     then
                       (if c <= 119807
                        then
                          (if c <= 113807
                           then (if c <= 113800 then 6 else 1)
                           else if c <= 113817 then 6 else 1)
                        else
                          if c <= 119893
                          then (if c <= 119892 then 6 else 1)
                          else if c <= 119964 then 6 else 1)
                     else
                       if c <= 119972
                       then
                         (if c <= 119969
                          then (if c <= 119967 then 6 else 1)
                          else if c <= 119970 then 6 else 1)
                       else
                         if c <= 119976
                         then (if c <= 119974 then 6 else 1)
                         else if c <= 119980 then 6 else 1)
                  else
                    if c <= 120070
                    then
                      (if c <= 119996
                       then
                         (if c <= 119994
                          then (if c <= 119993 then 6 else 1)
                          else if c <= 119995 then 6 else 1)
                       else
                         if c <= 120004
                         then (if c <= 120003 then 6 else 1)
                         else if c <= 120069 then 6 else 1)
                    else
                      if c <= 120085
                      then
                        (if c <= 120076
                         then (if c <= 120074 then 6 else 1)
                         else if c <= 120084 then 6 else 1)
                      else
                        if c <= 120093
                        then (if c <= 120092 then 6 else 1)
                        else if c <= 120121 then 6 else 1)
         else
           if c <= 131071
           then
             (if c <= 126468
              then
                (if c <= 122623
                 then
                   (if c <= 120571
                    then
                      (if c <= 120145
                       then
                         (if c <= 120133
                          then
                            (if c <= 120127
                             then (if c <= 120126 then 6 else 1)
                             else if c <= 120132 then 6 else 1)
                          else
                            if c <= 120137
                            then (if c <= 120134 then 6 else 1)
                            else if c <= 120144 then 6 else 1)
                       else
                         if c <= 120513
                         then
                           (if c <= 120487
                            then (if c <= 120485 then 6 else 1)
                            else if c <= 120512 then 6 else 1)
                         else
                           if c <= 120539
                           then (if c <= 120538 then 6 else 1)
                           else if c <= 120570 then 6 else 1)
                    else
                      if c <= 120687
                      then
                        (if c <= 120629
                         then
                           (if c <= 120597
                            then (if c <= 120596 then 6 else 1)
                            else if c <= 120628 then 6 else 1)
                         else
                           if c <= 120655
                           then (if c <= 120654 then 6 else 1)
                           else if c <= 120686 then 6 else 1)
                      else
                        if c <= 120745
                        then
                          (if c <= 120713
                           then (if c <= 120712 then 6 else 1)
                           else if c <= 120744 then 6 else 1)
                        else
                          if c <= 120771
                          then (if c <= 120770 then 6 else 1)
                          else if c <= 120779 then 6 else 1)
                 else
                   if c <= 124895
                   then
                     (if c <= 123190
                      then
                        (if c <= 122654
                         then 6
                         else
                           if c <= 123135
                           then 1
                           else if c <= 123180 then 6 else 1)
                      else
                        if c <= 123535
                        then
                          (if c <= 123213
                           then (if c <= 123197 then 6 else 1)
                           else if c <= 123214 then 6 else 1)
                        else
                          if c <= 123583
                          then (if c <= 123565 then 6 else 1)
                          else if c <= 123627 then 6 else 1)
                   else
                     if c <= 124927
                     then
                       (if c <= 124908
                        then
                          (if c <= 124903
                           then (if c <= 124902 then 6 else 1)
                           else if c <= 124907 then 6 else 1)
                        else
                          if c <= 124911
                          then (if c <= 124910 then 6 else 1)
                          else if c <= 124926 then 6 else 1)
                     else
                       if c <= 125258
                       then
                         (if c <= 125183
                          then (if c <= 125124 then 6 else 1)
                          else if c <= 125251 then 6 else 1)
                       else
                         if c <= 126463
                         then (if c <= 125259 then 6 else 1)
                         else if c <= 126467 then 6 else 1)
              else
                if c <= 126552
                then
                  (if c <= 126529
                   then
                     (if c <= 126504
                      then
                        (if c <= 126499
                         then
                           (if c <= 126496
                            then (if c <= 126495 then 6 else 1)
                            else if c <= 126498 then 6 else 1)
                         else
                           if c <= 126502
                           then (if c <= 126500 then 6 else 1)
                           else if c <= 126503 then 6 else 1)
                      else
                        if c <= 126520
                        then
                          (if c <= 126515
                           then (if c <= 126514 then 6 else 1)
                           else if c <= 126519 then 6 else 1)
                        else
                          if c <= 126522
                          then (if c <= 126521 then 6 else 1)
                          else if c <= 126523 then 6 else 1)
                   else
                     if c <= 126540
                     then
                       (if c <= 126536
                        then
                          (if c <= 126534
                           then (if c <= 126530 then 6 else 1)
                           else if c <= 126535 then 6 else 1)
                        else
                          if c <= 126538
                          then (if c <= 126537 then 6 else 1)
                          else if c <= 126539 then 6 else 1)
                     else
                       if c <= 126547
                       then
                         (if c <= 126544
                          then (if c <= 126543 then 6 else 1)
                          else if c <= 126546 then 6 else 1)
                       else
                         if c <= 126550
                         then (if c <= 126548 then 6 else 1)
                         else if c <= 126551 then 6 else 1)
                else
                  if c <= 126579
                  then
                    (if c <= 126560
                     then
                       (if c <= 126556
                        then
                          (if c <= 126554
                           then (if c <= 126553 then 6 else 1)
                           else if c <= 126555 then 6 else 1)
                        else
                          if c <= 126558
                          then (if c <= 126557 then 6 else 1)
                          else if c <= 126559 then 6 else 1)
                     else
                       if c <= 126566
                       then
                         (if c <= 126563
                          then (if c <= 126562 then 6 else 1)
                          else if c <= 126564 then 6 else 1)
                       else
                         if c <= 126571
                         then (if c <= 126570 then 6 else 1)
                         else if c <= 126578 then 6 else 1)
                  else
                    if c <= 126602
                    then
                      (if c <= 126589
                       then
                         (if c <= 126584
                          then (if c <= 126583 then 6 else 1)
                          else if c <= 126588 then 6 else 1)
                       else
                         if c <= 126591
                         then (if c <= 126590 then 6 else 1)
                         else if c <= 126601 then 6 else 1)
                    else
                      if c <= 126628
                      then
                        (if c <= 126624
                         then (if c <= 126619 then 6 else 1)
                         else if c <= 126627 then 6 else 1)
                      else
                        if c <= 126634
                        then (if c <= 126633 then 6 else 1)
                        else if c <= 126651 then 6 else 1)
           else
             if c <= 183983
             then
               (if c <= 177983
                then
                  (if c <= 173823
                   then (if c <= 173791 then 6 else 1)
                   else if c <= 177976 then 6 else 1)
                else
                  if c <= 178207
                  then (if c <= 178205 then 6 else 1)
                  else if c <= 183969 then 6 else 1)
             else if c <= 191456 then 6 else 1)
    else (-1)
[@@@warning "-39"]
open Token
open Lex_env
module Sedlexing = Flow_sedlexing
let lexeme = Sedlexing.Utf8.lexeme
let lexeme_to_buffer = Sedlexing.Utf8.lexeme_to_buffer
let lexeme_to_buffer2 = Sedlexing.Utf8.lexeme_to_buffer2
let sub_lexeme = Sedlexing.Utf8.sub_lexeme
let rec loop_id_continues lexbuf =
  let rec __sedlex_state_0 =
    function
    | lexbuf ->
        (match __sedlex_partition_1 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> 1
         | 1 -> 2
         | 2 -> 0
         | 3 -> __sedlex_state_4 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_4 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 2;
         (match __sedlex_partition_2 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_5 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_5 =
    function
    | lexbuf ->
        (match __sedlex_partition_3 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_6 lexbuf
         | 1 -> __sedlex_state_10 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_6 =
    function
    | lexbuf ->
        (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_7 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_7 =
    function
    | lexbuf ->
        (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_8 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_8 =
    function
    | lexbuf ->
        (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> 0
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_10 =
    function
    | lexbuf ->
        (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_11 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_11 =
    function
    | lexbuf ->
        (match __sedlex_partition_5 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_11 lexbuf
         | 1 -> 0
         | _ -> Sedlexing.backtrack lexbuf) in
  Sedlexing.start lexbuf;
  (match __sedlex_state_0 lexbuf with
   | 0 -> loop_id_continues lexbuf
   | 1 -> true
   | 2 ->
       let s = Sedlexing.current_code_point lexbuf in
       if Js_id.is_valid_unicode_id s
       then loop_id_continues lexbuf
       else (Sedlexing.backoff lexbuf 1; false)
   | _ -> assert false)
let rec loop_jsx_id_continues lexbuf =
  (let rec __sedlex_state_0 =
     function
     | lexbuf ->
         (match __sedlex_partition_6 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 1
          | 1 -> 2
          | 2 -> 0
          | 3 -> __sedlex_state_4 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_4 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 2;
          (match __sedlex_partition_2 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_5 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_5 =
     function
     | lexbuf ->
         (match __sedlex_partition_3 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_6 lexbuf
          | 1 -> __sedlex_state_10 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_6 =
     function
     | lexbuf ->
         (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_7 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_7 =
     function
     | lexbuf ->
         (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_8 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_8 =
     function
     | lexbuf ->
         (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 0
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_10 =
     function
     | lexbuf ->
         (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_11 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_11 =
     function
     | lexbuf ->
         (match __sedlex_partition_5 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_11 lexbuf
          | 1 -> 0
          | _ -> Sedlexing.backtrack lexbuf) in
   Sedlexing.start lexbuf;
   (match __sedlex_state_0 lexbuf with
    | 0 -> loop_jsx_id_continues lexbuf
    | 1 -> ()
    | 2 ->
        let s = Sedlexing.current_code_point lexbuf in
        if Js_id.is_valid_unicode_id s
        then loop_jsx_id_continues lexbuf
        else Sedlexing.backoff lexbuf 1
    | _ -> assert false) : unit)
let pos_at_offset env offset =
  {
    Loc.line = (Lex_env.line env);
    column = (offset - (Lex_env.bol_offset env))
  }
let loc_of_offsets env start_offset end_offset =
  {
    Loc.source = (Lex_env.source env);
    start = (pos_at_offset env start_offset);
    _end = (pos_at_offset env end_offset)
  }
let start_pos_of_lexbuf env (lexbuf : Sedlexing.lexbuf) =
  let start_offset = Sedlexing.lexeme_start lexbuf in
  pos_at_offset env start_offset
let end_pos_of_lexbuf env (lexbuf : Sedlexing.lexbuf) =
  let end_offset = Sedlexing.lexeme_end lexbuf in
  pos_at_offset env end_offset
let loc_of_lexbuf env (lexbuf : Sedlexing.lexbuf) =
  let start_offset = Sedlexing.lexeme_start lexbuf in
  let end_offset = Sedlexing.lexeme_end lexbuf in
  loc_of_offsets env start_offset end_offset
let loc_of_token env lex_token =
  match lex_token with
  | T_IDENTIFIER { loc;_} | T_JSX_IDENTIFIER { loc;_} | T_STRING
    (loc, _, _, _) -> loc
  | T_JSX_CHILD_TEXT (loc, _, _) -> loc
  | T_JSX_QUOTE_TEXT (loc, _, _) -> loc
  | T_TEMPLATE_PART (loc, _, _, _, _) -> loc
  | T_REGEXP (loc, _, _) -> loc
  | _ -> loc_of_lexbuf env env.lex_lb
let lex_error (env : Lex_env.t) loc err =
  (let lex_errors_acc = (loc, err) :: ((env.lex_state).lex_errors_acc) in
   { env with lex_state = { lex_errors_acc } } : Lex_env.t)
let unexpected_error (env : Lex_env.t) (loc : Loc.t) value =
  lex_error env loc (Parse_error.Unexpected (quote_token_value value))
let unexpected_error_w_suggest (env : Lex_env.t) (loc : Loc.t) value suggest
  =
  lex_error env loc
    (Parse_error.UnexpectedTokenWithSuggestion (value, suggest))
let illegal (env : Lex_env.t) (loc : Loc.t) =
  lex_error env loc (Parse_error.Unexpected "token ILLEGAL")
let new_line env lexbuf =
  let offset = Sedlexing.lexeme_end lexbuf in
  let lex_bol = { line = ((Lex_env.line env) + 1); offset } in
  { env with Lex_env.lex_bol = lex_bol }
let bigint_strip_n raw =
  let size = String.length raw in
  let str =
    if (size != 0) && ((raw.[size - 1]) == 'n')
    then String.sub raw 0 (size - 1)
    else raw in
  str
let mk_comment (env : Lex_env.t) (start : Loc.position) (_end : Loc.position)
  (buf : Buffer.t) (multiline : bool) =
  (let open Flow_ast.Comment in
     let loc = { Loc.source = (Lex_env.source env); start; _end } in
     let text = Buffer.contents buf in
     let kind = if multiline then Block else Line in
     let on_newline =
       let open Loc in
         ((env.lex_last_loc)._end).Loc.line < (loc.start).Loc.line in
     let c = { kind; text; on_newline } in (loc, c) : Loc.t
                                                        Flow_ast.Comment.t)
let mk_num_singleton number_type (lexeme : int array) =
  let raw = Sedlexing.string_of_utf8 lexeme in
  let value =
    match number_type with
    | LEGACY_OCTAL ->
        (try Int64.to_float (Int64.of_string ("0o" ^ raw))
         with | Failure _ -> failwith ("Invalid legacy octal " ^ raw))
    | BINARY | OCTAL ->
        (try Int64.to_float (Int64.of_string raw)
         with | Failure _ -> failwith ("Invalid binary/octal " ^ raw))
    | LEGACY_NON_OCTAL | NORMAL ->
        (try float_of_string raw
         with | Failure _ -> failwith ("Invalid number " ^ raw)) in
  T_NUMBER_SINGLETON_TYPE { kind = number_type; value; raw }
let mk_bignum_singleton kind lexeme =
  let raw = Sedlexing.string_of_utf8 lexeme in
  let postraw = bigint_strip_n raw in
  let value = Int64.of_string_opt postraw in
  T_BIGINT_SINGLETON_TYPE { kind; value; raw }
let assert_valid_unicode_in_identifier env loc code =
  if Js_id.is_valid_unicode_id code
  then env
  else lex_error env loc Parse_error.IllegalUnicodeEscape
let decode_identifier =
  let loc_and_sub_lexeme env offset lexbuf trim_start trim_end =
    let start_offset = offset + (Sedlexing.lexeme_start lexbuf) in
    let end_offset = offset + (Sedlexing.lexeme_end lexbuf) in
    let loc = loc_of_offsets env start_offset end_offset in
    (loc,
      (sub_lexeme lexbuf trim_start
         (((Sedlexing.lexeme_length lexbuf) - trim_start) - trim_end))) in
  let rec id_char env offset buf lexbuf =
    let rec __sedlex_state_0 =
      function
      | lexbuf ->
          (match __sedlex_partition_7 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> 2
           | 1 -> __sedlex_state_2 lexbuf
           | 2 -> __sedlex_state_3 lexbuf
           | _ -> Sedlexing.backtrack lexbuf)
    and __sedlex_state_2 =
      function
      | lexbuf ->
          (Sedlexing.mark lexbuf 3;
           (match __sedlex_partition_8 (Sedlexing.__private__next_int lexbuf)
            with
            | 0 -> __sedlex_state_2 lexbuf
            | _ -> Sedlexing.backtrack lexbuf))
    and __sedlex_state_3 =
      function
      | lexbuf ->
          (Sedlexing.mark lexbuf 3;
           (match __sedlex_partition_2 (Sedlexing.__private__next_int lexbuf)
            with
            | 0 -> __sedlex_state_4 lexbuf
            | _ -> Sedlexing.backtrack lexbuf))
    and __sedlex_state_4 =
      function
      | lexbuf ->
          (match __sedlex_partition_3 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_5 lexbuf
           | 1 -> __sedlex_state_9 lexbuf
           | _ -> Sedlexing.backtrack lexbuf)
    and __sedlex_state_5 =
      function
      | lexbuf ->
          (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_6 lexbuf
           | _ -> Sedlexing.backtrack lexbuf)
    and __sedlex_state_6 =
      function
      | lexbuf ->
          (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_7 lexbuf
           | _ -> Sedlexing.backtrack lexbuf)
    and __sedlex_state_7 =
      function
      | lexbuf ->
          (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> 0
           | _ -> Sedlexing.backtrack lexbuf)
    and __sedlex_state_9 =
      function
      | lexbuf ->
          (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_10 lexbuf
           | _ -> Sedlexing.backtrack lexbuf)
    and __sedlex_state_10 =
      function
      | lexbuf ->
          (match __sedlex_partition_5 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_10 lexbuf
           | 1 -> 1
           | _ -> Sedlexing.backtrack lexbuf) in
    Sedlexing.start lexbuf;
    (match __sedlex_state_0 lexbuf with
     | 0 ->
         let (loc, hex) = loc_and_sub_lexeme env offset lexbuf 2 0 in
         let code = int_of_string ("0x" ^ hex) in
         let env =
           if not (Uchar.is_valid code)
           then lex_error env loc Parse_error.IllegalUnicodeEscape
           else assert_valid_unicode_in_identifier env loc code in
         (Wtf8.add_wtf_8 buf code; id_char env offset buf lexbuf)
     | 1 ->
         let (loc, hex) = loc_and_sub_lexeme env offset lexbuf 3 1 in
         let code = int_of_string ("0x" ^ hex) in
         let env = assert_valid_unicode_in_identifier env loc code in
         (Wtf8.add_wtf_8 buf code; id_char env offset buf lexbuf)
     | 2 -> (env, (Buffer.contents buf))
     | 3 -> (lexeme_to_buffer lexbuf buf; id_char env offset buf lexbuf)
     | _ -> failwith "unreachable id_char") in
  fun env ->
    fun raw ->
      let offset = Sedlexing.lexeme_start env.lex_lb in
      let lexbuf = Sedlexing.from_int_array raw in
      let buf = Buffer.create (Array.length raw) in
      id_char env offset buf lexbuf
let recover env lexbuf ~f  =
  let env = illegal env (loc_of_lexbuf env lexbuf) in
  Sedlexing.rollback lexbuf; f env lexbuf
type result =
  | Token of Lex_env.t * Token.t
  | Comment of Lex_env.t * Loc.t Flow_ast.Comment.t
  | Continue of Lex_env.t
let rec comment env buf lexbuf =
  let rec __sedlex_state_0 =
    function
    | lexbuf ->
        (match __sedlex_partition_9 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_1 lexbuf
         | 1 -> 0
         | 2 -> __sedlex_state_3 lexbuf
         | 3 -> __sedlex_state_5 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_1 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 3;
         (match __sedlex_partition_10 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_1 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_3 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 0;
         (match __sedlex_partition_11 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 0
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_5 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 3;
         (match __sedlex_partition_12 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_6 lexbuf
          | 1 -> 1
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_6 =
    function
    | lexbuf ->
        (match __sedlex_partition_13 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> 2
         | _ -> Sedlexing.backtrack lexbuf) in
  Sedlexing.start lexbuf;
  (match __sedlex_state_0 lexbuf with
   | 0 ->
       let env = new_line env lexbuf in
       (lexeme_to_buffer lexbuf buf; comment env buf lexbuf)
   | 1 ->
       let env =
         if is_in_comment_syntax env
         then
           let loc = loc_of_lexbuf env lexbuf in
           unexpected_error_w_suggest env loc "*/" "*-/"
         else env in
       (env, (end_pos_of_lexbuf env lexbuf))
   | 2 ->
       if is_in_comment_syntax env
       then (env, (end_pos_of_lexbuf env lexbuf))
       else (Buffer.add_string buf "*-/"; comment env buf lexbuf)
   | 3 -> (lexeme_to_buffer lexbuf buf; comment env buf lexbuf)
   | _ ->
       let env = illegal env (loc_of_lexbuf env lexbuf) in
       (env, (end_pos_of_lexbuf env lexbuf)))
let rec line_comment env buf lexbuf =
  let rec __sedlex_state_0 =
    function
    | lexbuf ->
        (match __sedlex_partition_14 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> 0
         | 1 -> __sedlex_state_2 lexbuf
         | 2 -> 1
         | 3 -> __sedlex_state_4 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_2 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 2;
         (match __sedlex_partition_15 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_2 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_4 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 1;
         (match __sedlex_partition_11 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 1
          | _ -> Sedlexing.backtrack lexbuf)) in
  Sedlexing.start lexbuf;
  (match __sedlex_state_0 lexbuf with
   | 0 -> (env, (end_pos_of_lexbuf env lexbuf))
   | 1 ->
       let { Loc.line = line; column } = end_pos_of_lexbuf env lexbuf in
       let env = new_line env lexbuf in
       let len = Sedlexing.lexeme_length lexbuf in
       let end_pos = { Loc.line = line; column = (column - len) } in
       (env, end_pos)
   | 2 -> (lexeme_to_buffer lexbuf buf; line_comment env buf lexbuf)
   | _ -> failwith "unreachable line_comment")
let string_escape env lexbuf =
  let rec __sedlex_state_0 =
    function
    | lexbuf ->
        (match __sedlex_partition_16 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> 0
         | 1 -> 16
         | 2 -> 15
         | 3 -> __sedlex_state_4 lexbuf
         | 4 -> __sedlex_state_6 lexbuf
         | 5 -> __sedlex_state_9 lexbuf
         | 6 -> 0
         | 7 -> 5
         | 8 -> 6
         | 9 -> 7
         | 10 -> 8
         | 11 -> 9
         | 12 -> __sedlex_state_16 lexbuf
         | 13 -> 10
         | 14 -> __sedlex_state_25 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_4 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 15;
         (match __sedlex_partition_11 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 15
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_6 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 4;
         (match __sedlex_partition_17 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_7 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_7 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 3;
         (match __sedlex_partition_17 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 2
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_9 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 11;
         (match __sedlex_partition_17 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_7 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_16 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 14;
         (match __sedlex_partition_3 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_17 lexbuf
          | 1 -> __sedlex_state_21 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_17 =
    function
    | lexbuf ->
        (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_18 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_18 =
    function
    | lexbuf ->
        (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_19 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_19 =
    function
    | lexbuf ->
        (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> 12
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_21 =
    function
    | lexbuf ->
        (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_22 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_22 =
    function
    | lexbuf ->
        (match __sedlex_partition_5 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_22 lexbuf
         | 1 -> 13
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_25 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 14;
         (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_26 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_26 =
    function
    | lexbuf ->
        (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> 1
         | _ -> Sedlexing.backtrack lexbuf) in
  Sedlexing.start lexbuf;
  (match __sedlex_state_0 lexbuf with
   | 0 ->
       let str = lexeme lexbuf in
       let codes = Sedlexing.lexeme lexbuf in (env, str, codes, false)
   | 1 ->
       let str = lexeme lexbuf in
       let code = int_of_string ("0" ^ str) in (env, str, [|code|], false)
   | 2 ->
       let str = lexeme lexbuf in
       let code = int_of_string ("0o" ^ str) in
       if code < 256
       then (env, str, [|code|], true)
       else
         (let remainder = code land 7 in
          let code = code lsr 3 in
          (env, str, [|code;((Char.code '0') + remainder)|], true))
   | 3 ->
       let str = lexeme lexbuf in
       let code = int_of_string ("0o" ^ str) in (env, str, [|code|], true)
   | 4 -> (env, "0", [|0x0|], false)
   | 5 -> (env, "b", [|0x8|], false)
   | 6 -> (env, "f", [|0xC|], false)
   | 7 -> (env, "n", [|0xA|], false)
   | 8 -> (env, "r", [|0xD|], false)
   | 9 -> (env, "t", [|0x9|], false)
   | 10 -> (env, "v", [|0xB|], false)
   | 11 ->
       let str = lexeme lexbuf in
       let code = int_of_string ("0o" ^ str) in (env, str, [|code|], true)
   | 12 ->
       let str = lexeme lexbuf in
       let hex = String.sub str 1 ((String.length str) - 1) in
       let code = int_of_string ("0x" ^ hex) in (env, str, [|code|], false)
   | 13 ->
       let str = lexeme lexbuf in
       let hex = String.sub str 2 ((String.length str) - 3) in
       let code = int_of_string ("0x" ^ hex) in
       let env =
         if code > 0x10FFFF
         then illegal env (loc_of_lexbuf env lexbuf)
         else env in
       (env, str, [|code|], false)
   | 14 ->
       let str = lexeme lexbuf in
       let codes = Sedlexing.lexeme lexbuf in
       let env = illegal env (loc_of_lexbuf env lexbuf) in
       (env, str, codes, false)
   | 15 ->
       let str = lexeme lexbuf in
       let env = new_line env lexbuf in (env, str, [||], false)
   | 16 ->
       let str = lexeme lexbuf in
       let codes = Sedlexing.lexeme lexbuf in (env, str, codes, false)
   | _ -> failwith "unreachable string_escape")
let rec string_quote env q buf raw octal lexbuf =
  let rec __sedlex_state_0 =
    function
    | lexbuf ->
        (match __sedlex_partition_18 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> 3
         | 1 -> __sedlex_state_2 lexbuf
         | 2 -> 2
         | 3 -> 0
         | 4 -> 1
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_2 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 4;
         (match __sedlex_partition_19 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_2 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)) in
  Sedlexing.start lexbuf;
  (match __sedlex_state_0 lexbuf with
   | 0 ->
       let q' = lexeme lexbuf in
       (Buffer.add_string raw q';
        if q = q'
        then (env, (end_pos_of_lexbuf env lexbuf), octal)
        else
          (Buffer.add_string buf q'; string_quote env q buf raw octal lexbuf))
   | 1 ->
       (Buffer.add_string raw "\\";
        (let (env, str, codes, octal') = string_escape env lexbuf in
         let octal = octal' || octal in
         Buffer.add_string raw str;
         Array.iter (Wtf8.add_wtf_8 buf) codes;
         string_quote env q buf raw octal lexbuf))
   | 2 ->
       let x = lexeme lexbuf in
       (Buffer.add_string raw x;
        (let env = illegal env (loc_of_lexbuf env lexbuf) in
         let env = new_line env lexbuf in
         Buffer.add_string buf x;
         (env, (end_pos_of_lexbuf env lexbuf), octal)))
   | 3 ->
       let x = lexeme lexbuf in
       (Buffer.add_string raw x;
        (let env = illegal env (loc_of_lexbuf env lexbuf) in
         Buffer.add_string buf x;
         (env, (end_pos_of_lexbuf env lexbuf), octal)))
   | 4 ->
       (lexeme_to_buffer2 lexbuf raw buf;
        string_quote env q buf raw octal lexbuf)
   | _ -> failwith "unreachable string_quote")
let rec template_part env cooked raw lexbuf =
  let rec __sedlex_state_0 =
    function
    | lexbuf ->
        (match __sedlex_partition_20 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> 0
         | 1 -> __sedlex_state_2 lexbuf
         | 2 -> 5
         | 3 -> __sedlex_state_4 lexbuf
         | 4 -> __sedlex_state_6 lexbuf
         | 5 -> 3
         | 6 -> 1
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_2 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 6;
         (match __sedlex_partition_21 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_2 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_4 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 5;
         (match __sedlex_partition_11 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 4
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_6 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 6;
         (match __sedlex_partition_22 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 2
          | _ -> Sedlexing.backtrack lexbuf)) in
  Sedlexing.start lexbuf;
  (match __sedlex_state_0 lexbuf with
   | 0 -> let env = illegal env (loc_of_lexbuf env lexbuf) in (env, true)
   | 1 -> (env, true)
   | 2 -> (env, false)
   | 3 ->
       (Buffer.add_char raw '\\';
        (let (env, str, codes, _) = string_escape env lexbuf in
         Buffer.add_string raw str;
         Array.iter (Wtf8.add_wtf_8 cooked) codes;
         template_part env cooked raw lexbuf))
   | 4 ->
       (Buffer.add_string raw "\r\n";
        Buffer.add_string cooked "\n";
        (let env = new_line env lexbuf in template_part env cooked raw lexbuf))
   | 5 ->
       let lf = lexeme lexbuf in
       (Buffer.add_string raw lf;
        Buffer.add_char cooked '\n';
        (let env = new_line env lexbuf in template_part env cooked raw lexbuf))
   | 6 ->
       let c = lexeme lexbuf in
       (Buffer.add_string raw c;
        Buffer.add_string cooked c;
        template_part env cooked raw lexbuf)
   | _ -> failwith "unreachable template_part")
let token (env : Lex_env.t) lexbuf =
  (let rec __sedlex_state_0 =
     function
     | lexbuf ->
         (match __sedlex_partition_50 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 98
          | 1 -> 99
          | 2 -> __sedlex_state_3 lexbuf
          | 3 -> 0
          | 4 -> __sedlex_state_6 lexbuf
          | 5 -> __sedlex_state_8 lexbuf
          | 6 -> 7
          | 7 -> __sedlex_state_12 lexbuf
          | 8 -> 97
          | 9 -> __sedlex_state_15 lexbuf
          | 10 -> __sedlex_state_17 lexbuf
          | 11 -> 38
          | 12 -> 39
          | 13 -> __sedlex_state_23 lexbuf
          | 14 -> __sedlex_state_28 lexbuf
          | 15 -> 45
          | 16 -> __sedlex_state_32 lexbuf
          | 17 -> __sedlex_state_35 lexbuf
          | 18 -> __sedlex_state_58 lexbuf
          | 19 -> __sedlex_state_76 lexbuf
          | 20 -> __sedlex_state_129 lexbuf
          | 21 -> 46
          | 22 -> 44
          | 23 -> __sedlex_state_135 lexbuf
          | 24 -> __sedlex_state_139 lexbuf
          | 25 -> __sedlex_state_143 lexbuf
          | 26 -> __sedlex_state_149 lexbuf
          | 27 -> __sedlex_state_154 lexbuf
          | 28 -> 40
          | 29 -> __sedlex_state_177 lexbuf
          | 30 -> 41
          | 31 -> __sedlex_state_186 lexbuf
          | 32 -> 8
          | 33 -> 36
          | 34 -> __sedlex_state_190 lexbuf
          | 35 -> 37
          | 36 -> 89
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_3 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 1;
          (match __sedlex_partition_51 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_4 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_4 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 1;
          (match __sedlex_partition_51 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_4 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_6 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 0;
          (match __sedlex_partition_11 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> 0
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_8 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 88;
          (match __sedlex_partition_52 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_9 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_9 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 58;
          (match __sedlex_partition_52 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> 54
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_12 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 95;
          (match __sedlex_partition_53 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> 6
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_15 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 84;
          (match __sedlex_partition_52 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> 71
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_17 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 86;
          (match __sedlex_partition_54 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_18 lexbuf
           | 1 -> 72
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_18 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 51;
          (match __sedlex_partition_52 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> 76
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_23 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 82;
          (match __sedlex_partition_55 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_24 lexbuf
           | 1 -> 4
           | 2 -> 69
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_24 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 83;
          (match __sedlex_partition_52 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> 70
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_28 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 80;
          (match __sedlex_partition_56 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> 59
           | 1 -> 67
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_32 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 81;
          (match __sedlex_partition_57 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> 60
           | 1 -> 68
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_35 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 43;
          (match __sedlex_partition_47 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_36 lexbuf
           | 1 -> __sedlex_state_38 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_36 =
     function
     | lexbuf ->
         (match __sedlex_partition_58 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 42
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_38 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 34;
          (match __sedlex_partition_59 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_39 lexbuf
           | 1 -> __sedlex_state_38 lexbuf
           | 2 -> __sedlex_state_40 lexbuf
           | 3 -> __sedlex_state_54 lexbuf
           | 4 -> __sedlex_state_56 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_39 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 33;
          (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_39 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_40 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 33;
          (match __sedlex_partition_61 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_39 lexbuf
           | 1 -> __sedlex_state_41 lexbuf
           | 2 -> __sedlex_state_49 lexbuf
           | 3 -> __sedlex_state_53 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_41 =
     function
     | lexbuf ->
         (match __sedlex_partition_40 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_42 lexbuf
          | 1 -> __sedlex_state_46 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_42 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 28;
          (match __sedlex_partition_62 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_43 lexbuf
           | 1 -> __sedlex_state_42 lexbuf
           | 2 -> __sedlex_state_44 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_43 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 27;
          (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_43 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_44 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 26;
          (match __sedlex_partition_63 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_45 lexbuf
           | 1 -> __sedlex_state_43 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_45 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 25;
          (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_45 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_46 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 28;
          (match __sedlex_partition_64 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_43 lexbuf
           | 1 -> __sedlex_state_46 lexbuf
           | 2 -> __sedlex_state_47 lexbuf
           | 3 -> __sedlex_state_44 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_47 =
     function
     | lexbuf ->
         (match __sedlex_partition_33 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_48 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_48 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 28;
          (match __sedlex_partition_64 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_43 lexbuf
           | 1 -> __sedlex_state_48 lexbuf
           | 2 -> __sedlex_state_47 lexbuf
           | 3 -> __sedlex_state_44 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_49 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 28;
          (match __sedlex_partition_62 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_50 lexbuf
           | 1 -> __sedlex_state_49 lexbuf
           | 2 -> __sedlex_state_51 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_50 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 27;
          (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_50 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_51 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 26;
          (match __sedlex_partition_63 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_52 lexbuf
           | 1 -> __sedlex_state_50 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_52 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 25;
          (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_52 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_53 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 28;
          (match __sedlex_partition_64 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_50 lexbuf
           | 1 -> __sedlex_state_53 lexbuf
           | 2 -> __sedlex_state_47 lexbuf
           | 3 -> __sedlex_state_51 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_54 =
     function
     | lexbuf ->
         (match __sedlex_partition_33 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_55 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_55 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 34;
          (match __sedlex_partition_59 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_39 lexbuf
           | 1 -> __sedlex_state_55 lexbuf
           | 2 -> __sedlex_state_40 lexbuf
           | 3 -> __sedlex_state_54 lexbuf
           | 4 -> __sedlex_state_56 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_56 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 31;
          (match __sedlex_partition_63 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_57 lexbuf
           | 1 -> __sedlex_state_39 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_57 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 29;
          (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_57 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_58 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 93;
          (match __sedlex_partition_55 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_59 lexbuf
           | 1 -> 5
           | 2 -> 92
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_59 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 2;
          (match __sedlex_partition_65 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_60 lexbuf
           | 1 -> __sedlex_state_61 lexbuf
           | 2 -> __sedlex_state_63 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_60 =
     function
     | lexbuf ->
         (match __sedlex_partition_65 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_60 lexbuf
          | 1 -> __sedlex_state_61 lexbuf
          | 2 -> __sedlex_state_63 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_61 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 3;
          (match __sedlex_partition_66 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> 3
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_63 =
     function
     | lexbuf ->
         (match __sedlex_partition_67 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_64 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_64 =
     function
     | lexbuf ->
         (match __sedlex_partition_68 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_65 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_65 =
     function
     | lexbuf ->
         (match __sedlex_partition_69 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_66 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_66 =
     function
     | lexbuf ->
         (match __sedlex_partition_70 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_67 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_67 =
     function
     | lexbuf ->
         (match __sedlex_partition_71 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_68 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_68 =
     function
     | lexbuf ->
         (match __sedlex_partition_72 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_69 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_69 =
     function
     | lexbuf ->
         (match __sedlex_partition_73 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_70 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_70 =
     function
     | lexbuf ->
         (match __sedlex_partition_67 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_71 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_71 =
     function
     | lexbuf ->
         (match __sedlex_partition_2 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_72 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_72 =
     function
     | lexbuf ->
         (match __sedlex_partition_74 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_73 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_73 =
     function
     | lexbuf ->
         (match __sedlex_partition_75 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 3
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_76 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 34;
          (match __sedlex_partition_76 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_39 lexbuf
           | 1 -> __sedlex_state_77 lexbuf
           | 2 -> __sedlex_state_81 lexbuf
           | 3 -> __sedlex_state_93 lexbuf
           | 4 -> __sedlex_state_97 lexbuf
           | 5 -> __sedlex_state_40 lexbuf
           | 6 -> __sedlex_state_107 lexbuf
           | 7 -> __sedlex_state_117 lexbuf
           | 8 -> __sedlex_state_127 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_77 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 34;
          (match __sedlex_partition_77 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_39 lexbuf
           | 1 -> __sedlex_state_78 lexbuf
           | 2 -> __sedlex_state_40 lexbuf
           | 3 -> __sedlex_state_56 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_78 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 34;
          (match __sedlex_partition_59 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_39 lexbuf
           | 1 -> __sedlex_state_78 lexbuf
           | 2 -> __sedlex_state_40 lexbuf
           | 3 -> __sedlex_state_79 lexbuf
           | 4 -> __sedlex_state_56 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_79 =
     function
     | lexbuf ->
         (match __sedlex_partition_33 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_80 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_80 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 34;
          (match __sedlex_partition_59 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_39 lexbuf
           | 1 -> __sedlex_state_80 lexbuf
           | 2 -> __sedlex_state_40 lexbuf
           | 3 -> __sedlex_state_79 lexbuf
           | 4 -> __sedlex_state_56 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_81 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 20;
          (match __sedlex_partition_78 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_82 lexbuf
           | 1 -> __sedlex_state_83 lexbuf
           | 2 -> __sedlex_state_81 lexbuf
           | 3 -> __sedlex_state_87 lexbuf
           | 4 -> __sedlex_state_91 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_82 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 19;
          (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_82 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_83 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 34;
          (match __sedlex_partition_62 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_39 lexbuf
           | 1 -> __sedlex_state_84 lexbuf
           | 2 -> __sedlex_state_56 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_84 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 34;
          (match __sedlex_partition_64 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_39 lexbuf
           | 1 -> __sedlex_state_84 lexbuf
           | 2 -> __sedlex_state_85 lexbuf
           | 3 -> __sedlex_state_56 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_85 =
     function
     | lexbuf ->
         (match __sedlex_partition_33 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_86 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_86 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 34;
          (match __sedlex_partition_64 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_39 lexbuf
           | 1 -> __sedlex_state_86 lexbuf
           | 2 -> __sedlex_state_85 lexbuf
           | 3 -> __sedlex_state_56 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_87 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 18;
          (match __sedlex_partition_79 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_88 lexbuf
           | 1 -> __sedlex_state_83 lexbuf
           | 2 -> __sedlex_state_87 lexbuf
           | 3 -> __sedlex_state_89 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_88 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 17;
          (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_88 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_89 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 17;
          (match __sedlex_partition_63 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_90 lexbuf
           | 1 -> __sedlex_state_88 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_90 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 17;
          (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_90 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_91 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 19;
          (match __sedlex_partition_63 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_92 lexbuf
           | 1 -> __sedlex_state_82 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_92 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 19;
          (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_92 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_93 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 18;
          (match __sedlex_partition_79 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_94 lexbuf
           | 1 -> __sedlex_state_83 lexbuf
           | 2 -> __sedlex_state_93 lexbuf
           | 3 -> __sedlex_state_95 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_94 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 17;
          (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_94 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_95 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 17;
          (match __sedlex_partition_63 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_96 lexbuf
           | 1 -> __sedlex_state_94 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_96 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 17;
          (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_96 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_97 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 33;
          (match __sedlex_partition_80 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_39 lexbuf
           | 1 -> __sedlex_state_98 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_98 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 12;
          (match __sedlex_partition_81 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_99 lexbuf
           | 1 -> __sedlex_state_98 lexbuf
           | 2 -> __sedlex_state_100 lexbuf
           | 3 -> __sedlex_state_105 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_99 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 11;
          (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_99 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_100 =
     function
     | lexbuf ->
         (match __sedlex_partition_26 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_101 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_101 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 12;
          (match __sedlex_partition_81 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_102 lexbuf
           | 1 -> __sedlex_state_101 lexbuf
           | 2 -> __sedlex_state_100 lexbuf
           | 3 -> __sedlex_state_103 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_102 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 11;
          (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_102 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_103 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 10;
          (match __sedlex_partition_63 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_104 lexbuf
           | 1 -> __sedlex_state_102 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_104 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 9;
          (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_104 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_105 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 10;
          (match __sedlex_partition_63 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_106 lexbuf
           | 1 -> __sedlex_state_99 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_106 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 9;
          (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_106 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_107 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 33;
          (match __sedlex_partition_82 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_39 lexbuf
           | 1 -> __sedlex_state_108 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_108 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 16;
          (match __sedlex_partition_83 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_109 lexbuf
           | 1 -> __sedlex_state_108 lexbuf
           | 2 -> __sedlex_state_110 lexbuf
           | 3 -> __sedlex_state_115 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_109 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 15;
          (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_109 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_110 =
     function
     | lexbuf ->
         (match __sedlex_partition_17 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_111 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_111 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 16;
          (match __sedlex_partition_83 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_112 lexbuf
           | 1 -> __sedlex_state_111 lexbuf
           | 2 -> __sedlex_state_110 lexbuf
           | 3 -> __sedlex_state_113 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_112 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 15;
          (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_112 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_113 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 14;
          (match __sedlex_partition_63 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_114 lexbuf
           | 1 -> __sedlex_state_112 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_114 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 13;
          (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_114 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_115 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 14;
          (match __sedlex_partition_63 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_116 lexbuf
           | 1 -> __sedlex_state_109 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_116 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 13;
          (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_116 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_117 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 33;
          (match __sedlex_partition_84 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_39 lexbuf
           | 1 -> __sedlex_state_118 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_118 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 24;
          (match __sedlex_partition_85 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_119 lexbuf
           | 1 -> __sedlex_state_118 lexbuf
           | 2 -> __sedlex_state_120 lexbuf
           | 3 -> __sedlex_state_125 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_119 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 23;
          (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_119 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_120 =
     function
     | lexbuf ->
         (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_121 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_121 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 24;
          (match __sedlex_partition_85 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_122 lexbuf
           | 1 -> __sedlex_state_121 lexbuf
           | 2 -> __sedlex_state_120 lexbuf
           | 3 -> __sedlex_state_123 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_122 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 23;
          (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_122 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_123 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 22;
          (match __sedlex_partition_63 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_124 lexbuf
           | 1 -> __sedlex_state_122 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_124 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 21;
          (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_124 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_125 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 22;
          (match __sedlex_partition_63 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_126 lexbuf
           | 1 -> __sedlex_state_119 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_126 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 21;
          (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_126 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_127 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 32;
          (match __sedlex_partition_63 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_128 lexbuf
           | 1 -> __sedlex_state_39 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_128 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 30;
          (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_128 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_129 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 34;
          (match __sedlex_partition_86 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_39 lexbuf
           | 1 -> __sedlex_state_77 lexbuf
           | 2 -> __sedlex_state_130 lexbuf
           | 3 -> __sedlex_state_40 lexbuf
           | 4 -> __sedlex_state_131 lexbuf
           | 5 -> __sedlex_state_127 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_130 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 34;
          (match __sedlex_partition_86 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_39 lexbuf
           | 1 -> __sedlex_state_77 lexbuf
           | 2 -> __sedlex_state_130 lexbuf
           | 3 -> __sedlex_state_40 lexbuf
           | 4 -> __sedlex_state_131 lexbuf
           | 5 -> __sedlex_state_127 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_131 =
     function
     | lexbuf ->
         (match __sedlex_partition_33 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_132 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_132 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 34;
          (match __sedlex_partition_87 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_39 lexbuf
           | 1 -> __sedlex_state_83 lexbuf
           | 2 -> __sedlex_state_132 lexbuf
           | 3 -> __sedlex_state_131 lexbuf
           | 4 -> __sedlex_state_127 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_135 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 78;
          (match __sedlex_partition_88 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_136 lexbuf
           | 1 -> 55
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_136 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 62;
          (match __sedlex_partition_52 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> 61
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_139 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 90;
          (match __sedlex_partition_89 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_140 lexbuf
           | 1 -> 91
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_140 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 57;
          (match __sedlex_partition_52 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> 53
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_143 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 79;
          (match __sedlex_partition_89 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> 56
           | 1 -> __sedlex_state_145 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_145 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 66;
          (match __sedlex_partition_89 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> 63
           | 1 -> __sedlex_state_147 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_147 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 65;
          (match __sedlex_partition_52 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> 64
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_149 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 50;
          (match __sedlex_partition_90 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_150 lexbuf
           | 1 -> __sedlex_state_152 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_150 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 48;
          (match __sedlex_partition_33 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> 47
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_152 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 49;
          (match __sedlex_partition_52 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> 75
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_154 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 94;
          (match __sedlex_partition_91 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_155 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_155 =
     function
     | lexbuf ->
         (match __sedlex_partition_92 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_156 lexbuf
          | 1 -> __sedlex_state_169 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_156 =
     function
     | lexbuf ->
         (match __sedlex_partition_93 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_157 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_157 =
     function
     | lexbuf ->
         (match __sedlex_partition_94 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_158 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_158 =
     function
     | lexbuf ->
         (match __sedlex_partition_72 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_159 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_159 =
     function
     | lexbuf ->
         (match __sedlex_partition_73 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_160 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_160 =
     function
     | lexbuf ->
         (match __sedlex_partition_95 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_161 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_161 =
     function
     | lexbuf ->
         (match __sedlex_partition_96 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_162 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_162 =
     function
     | lexbuf ->
         (match __sedlex_partition_75 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_163 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_163 =
     function
     | lexbuf ->
         (match __sedlex_partition_97 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_164 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_164 =
     function
     | lexbuf ->
         (match __sedlex_partition_98 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_165 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_165 =
     function
     | lexbuf ->
         (match __sedlex_partition_96 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_166 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_166 =
     function
     | lexbuf ->
         (match __sedlex_partition_68 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_167 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_167 =
     function
     | lexbuf ->
         (match __sedlex_partition_97 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 35
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_169 =
     function
     | lexbuf ->
         (match __sedlex_partition_96 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_170 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_170 =
     function
     | lexbuf ->
         (match __sedlex_partition_75 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_171 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_171 =
     function
     | lexbuf ->
         (match __sedlex_partition_97 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_172 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_172 =
     function
     | lexbuf ->
         (match __sedlex_partition_98 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_173 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_173 =
     function
     | lexbuf ->
         (match __sedlex_partition_96 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_174 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_174 =
     function
     | lexbuf ->
         (match __sedlex_partition_68 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_175 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_175 =
     function
     | lexbuf ->
         (match __sedlex_partition_97 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 35
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_177 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 96;
          (match __sedlex_partition_2 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> __sedlex_state_178 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_178 =
     function
     | lexbuf ->
         (match __sedlex_partition_3 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_179 lexbuf
          | 1 -> __sedlex_state_183 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_179 =
     function
     | lexbuf ->
         (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_180 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_180 =
     function
     | lexbuf ->
         (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_181 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_181 =
     function
     | lexbuf ->
         (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 97
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_183 =
     function
     | lexbuf ->
         (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_184 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_184 =
     function
     | lexbuf ->
         (match __sedlex_partition_5 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_184 lexbuf
          | 1 -> 97
          | _ -> Sedlexing.backtrack lexbuf)
   and __sedlex_state_186 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 87;
          (match __sedlex_partition_52 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> 74
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_190 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 85;
          (match __sedlex_partition_99 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> 73
           | 1 -> __sedlex_state_192 lexbuf
           | _ -> Sedlexing.backtrack lexbuf))
   and __sedlex_state_192 =
     function
     | lexbuf ->
         (Sedlexing.mark lexbuf 52;
          (match __sedlex_partition_52 (Sedlexing.__private__next_int lexbuf)
           with
           | 0 -> 77
           | _ -> Sedlexing.backtrack lexbuf)) in
   Sedlexing.start lexbuf;
   (match __sedlex_state_0 lexbuf with
    | 0 -> let env = new_line env lexbuf in Continue env
    | 1 -> Continue env
    | 2 ->
        let start_pos = start_pos_of_lexbuf env lexbuf in
        let buf = Buffer.create 127 in
        let (env, end_pos) = comment env buf lexbuf in
        Comment (env, (mk_comment env start_pos end_pos buf true))
    | 3 ->
        let pattern = lexeme lexbuf in
        if not (is_comment_syntax_enabled env)
        then
          let start_pos = start_pos_of_lexbuf env lexbuf in
          let buf = Buffer.create 127 in
          (Buffer.add_string buf
             (String.sub pattern 2 ((String.length pattern) - 2));
           (let (env, end_pos) = comment env buf lexbuf in
            Comment (env, (mk_comment env start_pos end_pos buf true))))
        else
          (let env =
             if is_in_comment_syntax env
             then
               let loc = loc_of_lexbuf env lexbuf in
               unexpected_error env loc pattern
             else env in
           let env = in_comment_syntax true env in
           let len = Sedlexing.lexeme_length lexbuf in
           if
             ((Sedlexing.Utf8.sub_lexeme lexbuf (len - 1) 1) = ":") &&
               ((Sedlexing.Utf8.sub_lexeme lexbuf (len - 2) 1) <> ":")
           then Token (env, T_COLON)
           else Continue env)
    | 4 ->
        if is_in_comment_syntax env
        then let env = in_comment_syntax false env in Continue env
        else
          (Sedlexing.rollback lexbuf;
           (let __sedlex_state_0 =
              function
              | lexbuf ->
                  (match __sedlex_partition_23
                           (Sedlexing.__private__next_int lexbuf)
                   with
                   | 0 -> 0
                   | _ -> Sedlexing.backtrack lexbuf) in
            Sedlexing.start lexbuf;
            (match __sedlex_state_0 lexbuf with
             | 0 -> Token (env, T_MULT)
             | _ -> failwith "expected *")))
    | 5 ->
        let start_pos = start_pos_of_lexbuf env lexbuf in
        let buf = Buffer.create 127 in
        let (env, end_pos) = line_comment env buf lexbuf in
        Comment (env, (mk_comment env start_pos end_pos buf false))
    | 6 ->
        if (Sedlexing.lexeme_start lexbuf) = 0
        then
          let start = start_pos_of_lexbuf env lexbuf in
          let buf = Buffer.create 127 in
          let (env, _end) = line_comment env buf lexbuf in
          let loc = { Loc.source = (Lex_env.source env); start; _end } in
          Token (env, (T_INTERPRETER (loc, (Buffer.contents buf))))
        else Token (env, (T_ERROR "#!"))
    | 7 ->
        let quote = lexeme lexbuf in
        let start = start_pos_of_lexbuf env lexbuf in
        let buf = Buffer.create 127 in
        let raw = Buffer.create 127 in
        (Buffer.add_string raw quote;
         (let octal = false in
          let (env, _end, octal) =
            string_quote env quote buf raw octal lexbuf in
          let loc = { Loc.source = (Lex_env.source env); start; _end } in
          Token
            (env,
              (T_STRING
                 (loc, (Buffer.contents buf), (Buffer.contents raw), octal)))))
    | 8 ->
        let value = Buffer.create 127 in
        let raw = Buffer.create 127 in
        let start = start_pos_of_lexbuf env lexbuf in
        let (env, is_tail) = template_part env value raw lexbuf in
        let _end = end_pos_of_lexbuf env lexbuf in
        let loc = { Loc.source = (Lex_env.source env); start; _end } in
        Token
          (env,
            (T_TEMPLATE_PART
               (loc, (Buffer.contents value), (Buffer.contents raw), true,
                 is_tail)))
    | 9 ->
        recover env lexbuf
          ~f:(fun env ->
                fun lexbuf ->
                  let rec __sedlex_state_0 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_24
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_1 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_1 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_25
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_2 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_2 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_26
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_3 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_3 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_27
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_3 lexbuf
                         | 1 -> __sedlex_state_4 lexbuf
                         | 2 -> 0
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_4 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_26
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_5 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_5 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_27
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_5 lexbuf
                         | 1 -> __sedlex_state_4 lexbuf
                         | 2 -> 0
                         | _ -> Sedlexing.backtrack lexbuf) in
                  Sedlexing.start lexbuf;
                  (match __sedlex_state_0 lexbuf with
                   | 0 ->
                       Token
                         (env,
                           (T_BIGINT
                              { kind = BIG_BINARY; raw = (lexeme lexbuf) }))
                   | _ -> failwith "unreachable token bigint"))
    | 10 ->
        Token (env, (T_BIGINT { kind = BIG_BINARY; raw = (lexeme lexbuf) }))
    | 11 ->
        recover env lexbuf
          ~f:(fun env ->
                fun lexbuf ->
                  let rec __sedlex_state_0 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_24
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_1 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_1 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_25
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_2 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_2 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_26
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_3 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_3 =
                    function
                    | lexbuf ->
                        (Sedlexing.mark lexbuf 0;
                         (match __sedlex_partition_28
                                  (Sedlexing.__private__next_int lexbuf)
                          with
                          | 0 -> __sedlex_state_3 lexbuf
                          | 1 -> __sedlex_state_4 lexbuf
                          | _ -> Sedlexing.backtrack lexbuf))
                  and __sedlex_state_4 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_26
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_5 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_5 =
                    function
                    | lexbuf ->
                        (Sedlexing.mark lexbuf 0;
                         (match __sedlex_partition_28
                                  (Sedlexing.__private__next_int lexbuf)
                          with
                          | 0 -> __sedlex_state_5 lexbuf
                          | 1 -> __sedlex_state_4 lexbuf
                          | _ -> Sedlexing.backtrack lexbuf)) in
                  Sedlexing.start lexbuf;
                  (match __sedlex_state_0 lexbuf with
                   | 0 ->
                       Token
                         (env,
                           (T_NUMBER { kind = BINARY; raw = (lexeme lexbuf) }))
                   | _ -> failwith "unreachable token bignumber"))
    | 12 -> Token (env, (T_NUMBER { kind = BINARY; raw = (lexeme lexbuf) }))
    | 13 ->
        recover env lexbuf
          ~f:(fun env ->
                fun lexbuf ->
                  let rec __sedlex_state_0 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_24
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_1 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_1 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_29
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_2 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_2 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_17
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_3 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_3 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_30
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_3 lexbuf
                         | 1 -> __sedlex_state_4 lexbuf
                         | 2 -> 0
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_4 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_17
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_5 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_5 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_30
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_5 lexbuf
                         | 1 -> __sedlex_state_4 lexbuf
                         | 2 -> 0
                         | _ -> Sedlexing.backtrack lexbuf) in
                  Sedlexing.start lexbuf;
                  (match __sedlex_state_0 lexbuf with
                   | 0 ->
                       Token
                         (env,
                           (T_BIGINT
                              { kind = BIG_OCTAL; raw = (lexeme lexbuf) }))
                   | _ -> failwith "unreachable token octbigint"))
    | 14 ->
        Token (env, (T_BIGINT { kind = BIG_OCTAL; raw = (lexeme lexbuf) }))
    | 15 ->
        recover env lexbuf
          ~f:(fun env ->
                fun lexbuf ->
                  let rec __sedlex_state_0 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_24
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_1 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_1 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_29
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_2 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_2 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_17
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_3 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_3 =
                    function
                    | lexbuf ->
                        (Sedlexing.mark lexbuf 0;
                         (match __sedlex_partition_31
                                  (Sedlexing.__private__next_int lexbuf)
                          with
                          | 0 -> __sedlex_state_3 lexbuf
                          | 1 -> __sedlex_state_4 lexbuf
                          | _ -> Sedlexing.backtrack lexbuf))
                  and __sedlex_state_4 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_17
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_5 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_5 =
                    function
                    | lexbuf ->
                        (Sedlexing.mark lexbuf 0;
                         (match __sedlex_partition_31
                                  (Sedlexing.__private__next_int lexbuf)
                          with
                          | 0 -> __sedlex_state_5 lexbuf
                          | 1 -> __sedlex_state_4 lexbuf
                          | _ -> Sedlexing.backtrack lexbuf)) in
                  Sedlexing.start lexbuf;
                  (match __sedlex_state_0 lexbuf with
                   | 0 ->
                       Token
                         (env,
                           (T_NUMBER { kind = OCTAL; raw = (lexeme lexbuf) }))
                   | _ -> failwith "unreachable token octnumber"))
    | 16 -> Token (env, (T_NUMBER { kind = OCTAL; raw = (lexeme lexbuf) }))
    | 17 ->
        recover env lexbuf
          ~f:(fun env ->
                fun lexbuf ->
                  let rec __sedlex_state_0 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_24
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_1 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_1 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_32
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_1 lexbuf
                         | 1 -> __sedlex_state_2 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_2 =
                    function
                    | lexbuf ->
                        (Sedlexing.mark lexbuf 0;
                         (match __sedlex_partition_33
                                  (Sedlexing.__private__next_int lexbuf)
                          with
                          | 0 -> __sedlex_state_2 lexbuf
                          | _ -> Sedlexing.backtrack lexbuf)) in
                  Sedlexing.start lexbuf;
                  (match __sedlex_state_0 lexbuf with
                   | 0 ->
                       Token
                         (env,
                           (T_NUMBER
                              {
                                kind = LEGACY_NON_OCTAL;
                                raw = (lexeme lexbuf)
                              }))
                   | _ -> failwith "unreachable token legacynonoctnumber"))
    | 18 ->
        Token
          (env,
            (T_NUMBER { kind = LEGACY_NON_OCTAL; raw = (lexeme lexbuf) }))
    | 19 ->
        recover env lexbuf
          ~f:(fun env ->
                fun lexbuf ->
                  let rec __sedlex_state_0 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_24
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_1 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_1 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_17
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_2 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_2 =
                    function
                    | lexbuf ->
                        (Sedlexing.mark lexbuf 0;
                         (match __sedlex_partition_17
                                  (Sedlexing.__private__next_int lexbuf)
                          with
                          | 0 -> __sedlex_state_2 lexbuf
                          | _ -> Sedlexing.backtrack lexbuf)) in
                  Sedlexing.start lexbuf;
                  (match __sedlex_state_0 lexbuf with
                   | 0 ->
                       Token
                         (env,
                           (T_NUMBER
                              { kind = LEGACY_OCTAL; raw = (lexeme lexbuf) }))
                   | _ -> failwith "unreachable token legacyoctnumber"))
    | 20 ->
        Token
          (env, (T_NUMBER { kind = LEGACY_OCTAL; raw = (lexeme lexbuf) }))
    | 21 ->
        recover env lexbuf
          ~f:(fun env ->
                fun lexbuf ->
                  let rec __sedlex_state_0 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_24
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_1 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_1 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_34
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_2 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_2 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_4
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_3 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_3 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_35
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_3 lexbuf
                         | 1 -> __sedlex_state_4 lexbuf
                         | 2 -> 0
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_4 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_4
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_5 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_5 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_35
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_5 lexbuf
                         | 1 -> __sedlex_state_4 lexbuf
                         | 2 -> 0
                         | _ -> Sedlexing.backtrack lexbuf) in
                  Sedlexing.start lexbuf;
                  (match __sedlex_state_0 lexbuf with
                   | 0 ->
                       Token
                         (env,
                           (T_BIGINT
                              { kind = BIG_NORMAL; raw = (lexeme lexbuf) }))
                   | _ -> failwith "unreachable token hexbigint"))
    | 22 ->
        Token (env, (T_BIGINT { kind = BIG_NORMAL; raw = (lexeme lexbuf) }))
    | 23 ->
        recover env lexbuf
          ~f:(fun env ->
                fun lexbuf ->
                  let rec __sedlex_state_0 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_24
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_1 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_1 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_34
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_2 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_2 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_4
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_3 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_3 =
                    function
                    | lexbuf ->
                        (Sedlexing.mark lexbuf 0;
                         (match __sedlex_partition_36
                                  (Sedlexing.__private__next_int lexbuf)
                          with
                          | 0 -> __sedlex_state_3 lexbuf
                          | 1 -> __sedlex_state_4 lexbuf
                          | _ -> Sedlexing.backtrack lexbuf))
                  and __sedlex_state_4 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_4
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_5 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_5 =
                    function
                    | lexbuf ->
                        (Sedlexing.mark lexbuf 0;
                         (match __sedlex_partition_36
                                  (Sedlexing.__private__next_int lexbuf)
                          with
                          | 0 -> __sedlex_state_5 lexbuf
                          | 1 -> __sedlex_state_4 lexbuf
                          | _ -> Sedlexing.backtrack lexbuf)) in
                  Sedlexing.start lexbuf;
                  (match __sedlex_state_0 lexbuf with
                   | 0 ->
                       Token
                         (env,
                           (T_NUMBER { kind = NORMAL; raw = (lexeme lexbuf) }))
                   | _ -> failwith "unreachable token hexnumber"))
    | 24 -> Token (env, (T_NUMBER { kind = NORMAL; raw = (lexeme lexbuf) }))
    | 25 ->
        recover env lexbuf
          ~f:(fun env ->
                fun lexbuf ->
                  let rec __sedlex_state_0 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_37
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_1 lexbuf
                         | 1 -> __sedlex_state_12 lexbuf
                         | 2 -> __sedlex_state_17 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_1 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_33
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_2 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_2 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_38
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_2 lexbuf
                         | 1 -> __sedlex_state_3 lexbuf
                         | 2 -> __sedlex_state_10 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_3 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_39
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_4 lexbuf
                         | 1 -> __sedlex_state_5 lexbuf
                         | 2 -> __sedlex_state_7 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_4 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_40
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_5 lexbuf
                         | 1 -> __sedlex_state_7 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_5 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_41
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_5 lexbuf
                         | 1 -> 0
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_7 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_42
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_7 lexbuf
                         | 1 -> __sedlex_state_8 lexbuf
                         | 2 -> 0
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_8 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_33
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_9 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_9 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_42
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_9 lexbuf
                         | 1 -> __sedlex_state_8 lexbuf
                         | 2 -> 0
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_10 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_33
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_11 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_11 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_38
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_11 lexbuf
                         | 1 -> __sedlex_state_3 lexbuf
                         | 2 -> __sedlex_state_10 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_12 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_43
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_13 lexbuf
                         | 1 -> __sedlex_state_3 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_13 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_44
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_14 lexbuf
                         | 1 -> __sedlex_state_3 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_14 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_38
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_14 lexbuf
                         | 1 -> __sedlex_state_3 lexbuf
                         | 2 -> __sedlex_state_15 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_15 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_33
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_16 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_16 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_38
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_16 lexbuf
                         | 1 -> __sedlex_state_3 lexbuf
                         | 2 -> __sedlex_state_15 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_17 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_45
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_13 lexbuf
                         | 1 -> __sedlex_state_17 lexbuf
                         | 2 -> __sedlex_state_3 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf) in
                  Sedlexing.start lexbuf;
                  (match __sedlex_state_0 lexbuf with
                   | 0 ->
                       let loc = loc_of_lexbuf env lexbuf in
                       let env =
                         lex_error env loc Parse_error.InvalidSciBigInt in
                       Token
                         (env,
                           (T_BIGINT
                              { kind = BIG_NORMAL; raw = (lexeme lexbuf) }))
                   | _ -> failwith "unreachable token scibigint"))
    | 26 ->
        let loc = loc_of_lexbuf env lexbuf in
        let env = lex_error env loc Parse_error.InvalidSciBigInt in
        Token (env, (T_BIGINT { kind = BIG_NORMAL; raw = (lexeme lexbuf) }))
    | 27 ->
        recover env lexbuf
          ~f:(fun env ->
                fun lexbuf ->
                  let rec __sedlex_state_0 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_37
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_1 lexbuf
                         | 1 -> __sedlex_state_11 lexbuf
                         | 2 -> __sedlex_state_16 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_1 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_33
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_2 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_2 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_38
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_2 lexbuf
                         | 1 -> __sedlex_state_3 lexbuf
                         | 2 -> __sedlex_state_9 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_3 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_39
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_4 lexbuf
                         | 1 -> __sedlex_state_5 lexbuf
                         | 2 -> __sedlex_state_6 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_4 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_40
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_5 lexbuf
                         | 1 -> __sedlex_state_6 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_5 =
                    function
                    | lexbuf ->
                        (Sedlexing.mark lexbuf 0;
                         (match __sedlex_partition_33
                                  (Sedlexing.__private__next_int lexbuf)
                          with
                          | 0 -> __sedlex_state_5 lexbuf
                          | _ -> Sedlexing.backtrack lexbuf))
                  and __sedlex_state_6 =
                    function
                    | lexbuf ->
                        (Sedlexing.mark lexbuf 0;
                         (match __sedlex_partition_46
                                  (Sedlexing.__private__next_int lexbuf)
                          with
                          | 0 -> __sedlex_state_6 lexbuf
                          | 1 -> __sedlex_state_7 lexbuf
                          | _ -> Sedlexing.backtrack lexbuf))
                  and __sedlex_state_7 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_33
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_8 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_8 =
                    function
                    | lexbuf ->
                        (Sedlexing.mark lexbuf 0;
                         (match __sedlex_partition_46
                                  (Sedlexing.__private__next_int lexbuf)
                          with
                          | 0 -> __sedlex_state_8 lexbuf
                          | 1 -> __sedlex_state_7 lexbuf
                          | _ -> Sedlexing.backtrack lexbuf))
                  and __sedlex_state_9 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_33
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_10 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_10 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_38
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_10 lexbuf
                         | 1 -> __sedlex_state_3 lexbuf
                         | 2 -> __sedlex_state_9 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_11 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_43
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_12 lexbuf
                         | 1 -> __sedlex_state_3 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_12 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_44
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_13 lexbuf
                         | 1 -> __sedlex_state_3 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_13 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_38
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_13 lexbuf
                         | 1 -> __sedlex_state_3 lexbuf
                         | 2 -> __sedlex_state_14 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_14 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_33
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_15 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_15 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_38
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_15 lexbuf
                         | 1 -> __sedlex_state_3 lexbuf
                         | 2 -> __sedlex_state_14 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_16 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_45
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_12 lexbuf
                         | 1 -> __sedlex_state_16 lexbuf
                         | 2 -> __sedlex_state_3 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf) in
                  Sedlexing.start lexbuf;
                  (match __sedlex_state_0 lexbuf with
                   | 0 ->
                       Token
                         (env,
                           (T_NUMBER { kind = NORMAL; raw = (lexeme lexbuf) }))
                   | _ -> failwith "unreachable token scinumber"))
    | 28 -> Token (env, (T_NUMBER { kind = NORMAL; raw = (lexeme lexbuf) }))
    | 29 ->
        recover env lexbuf
          ~f:(fun env ->
                fun lexbuf ->
                  let rec __sedlex_state_0 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_37
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_1 lexbuf
                         | 1 -> __sedlex_state_6 lexbuf
                         | 2 -> __sedlex_state_8 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_1 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_33
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_2 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_2 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_42
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_2 lexbuf
                         | 1 -> __sedlex_state_3 lexbuf
                         | 2 -> 0
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_3 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_33
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_4 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_4 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_42
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_4 lexbuf
                         | 1 -> __sedlex_state_3 lexbuf
                         | 2 -> 0
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_6 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_47
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_7 lexbuf
                         | 1 -> __sedlex_state_6 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_7 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_41
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_2 lexbuf
                         | 1 -> 0
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_8 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_48
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_7 lexbuf
                         | 1 -> __sedlex_state_8 lexbuf
                         | 2 -> __sedlex_state_9 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_9 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_33
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_10 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_10 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_48
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_7 lexbuf
                         | 1 -> __sedlex_state_10 lexbuf
                         | 2 -> __sedlex_state_9 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf) in
                  Sedlexing.start lexbuf;
                  (match __sedlex_state_0 lexbuf with
                   | 0 ->
                       let loc = loc_of_lexbuf env lexbuf in
                       let env =
                         lex_error env loc Parse_error.InvalidFloatBigInt in
                       Token
                         (env,
                           (T_BIGINT
                              { kind = BIG_NORMAL; raw = (lexeme lexbuf) }))
                   | _ -> failwith "unreachable token floatbigint"))
    | 30 ->
        recover env lexbuf
          ~f:(fun env ->
                fun lexbuf ->
                  let rec __sedlex_state_0 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_40
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_1 lexbuf
                         | 1 -> __sedlex_state_3 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_1 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_41
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_1 lexbuf
                         | 1 -> 0
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_3 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_42
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_3 lexbuf
                         | 1 -> __sedlex_state_4 lexbuf
                         | 2 -> 0
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_4 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_33
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_5 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_5 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_42
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_5 lexbuf
                         | 1 -> __sedlex_state_4 lexbuf
                         | 2 -> 0
                         | _ -> Sedlexing.backtrack lexbuf) in
                  Sedlexing.start lexbuf;
                  (match __sedlex_state_0 lexbuf with
                   | 0 ->
                       Token
                         (env,
                           (T_BIGINT
                              { kind = BIG_NORMAL; raw = (lexeme lexbuf) }))
                   | _ -> failwith "unreachable token wholebigint"))
    | 31 ->
        let loc = loc_of_lexbuf env lexbuf in
        let env = lex_error env loc Parse_error.InvalidFloatBigInt in
        Token (env, (T_BIGINT { kind = BIG_NORMAL; raw = (lexeme lexbuf) }))
    | 32 ->
        Token (env, (T_BIGINT { kind = BIG_NORMAL; raw = (lexeme lexbuf) }))
    | 33 ->
        recover env lexbuf
          ~f:(fun env ->
                fun lexbuf ->
                  let rec __sedlex_state_0 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_37
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_1 lexbuf
                         | 1 -> __sedlex_state_5 lexbuf
                         | 2 -> __sedlex_state_7 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_1 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_33
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_2 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_2 =
                    function
                    | lexbuf ->
                        (Sedlexing.mark lexbuf 0;
                         (match __sedlex_partition_46
                                  (Sedlexing.__private__next_int lexbuf)
                          with
                          | 0 -> __sedlex_state_2 lexbuf
                          | 1 -> __sedlex_state_3 lexbuf
                          | _ -> Sedlexing.backtrack lexbuf))
                  and __sedlex_state_3 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_33
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_4 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_4 =
                    function
                    | lexbuf ->
                        (Sedlexing.mark lexbuf 0;
                         (match __sedlex_partition_46
                                  (Sedlexing.__private__next_int lexbuf)
                          with
                          | 0 -> __sedlex_state_4 lexbuf
                          | 1 -> __sedlex_state_3 lexbuf
                          | _ -> Sedlexing.backtrack lexbuf))
                  and __sedlex_state_5 =
                    function
                    | lexbuf ->
                        (Sedlexing.mark lexbuf 0;
                         (match __sedlex_partition_47
                                  (Sedlexing.__private__next_int lexbuf)
                          with
                          | 0 -> __sedlex_state_6 lexbuf
                          | 1 -> __sedlex_state_5 lexbuf
                          | _ -> Sedlexing.backtrack lexbuf))
                  and __sedlex_state_6 =
                    function
                    | lexbuf ->
                        (Sedlexing.mark lexbuf 0;
                         (match __sedlex_partition_33
                                  (Sedlexing.__private__next_int lexbuf)
                          with
                          | 0 -> __sedlex_state_2 lexbuf
                          | _ -> Sedlexing.backtrack lexbuf))
                  and __sedlex_state_7 =
                    function
                    | lexbuf ->
                        (Sedlexing.mark lexbuf 0;
                         (match __sedlex_partition_48
                                  (Sedlexing.__private__next_int lexbuf)
                          with
                          | 0 -> __sedlex_state_6 lexbuf
                          | 1 -> __sedlex_state_7 lexbuf
                          | 2 -> __sedlex_state_8 lexbuf
                          | _ -> Sedlexing.backtrack lexbuf))
                  and __sedlex_state_8 =
                    function
                    | lexbuf ->
                        (match __sedlex_partition_33
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_9 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)
                  and __sedlex_state_9 =
                    function
                    | lexbuf ->
                        (Sedlexing.mark lexbuf 0;
                         (match __sedlex_partition_48
                                  (Sedlexing.__private__next_int lexbuf)
                          with
                          | 0 -> __sedlex_state_6 lexbuf
                          | 1 -> __sedlex_state_9 lexbuf
                          | 2 -> __sedlex_state_8 lexbuf
                          | _ -> Sedlexing.backtrack lexbuf)) in
                  Sedlexing.start lexbuf;
                  (match __sedlex_state_0 lexbuf with
                   | 0 ->
                       Token
                         (env,
                           (T_NUMBER { kind = NORMAL; raw = (lexeme lexbuf) }))
                   | _ -> failwith "unreachable token wholenumber"))
    | 34 -> Token (env, (T_NUMBER { kind = NORMAL; raw = (lexeme lexbuf) }))
    | 35 ->
        let loc = loc_of_lexbuf env lexbuf in
        let raw = lexeme lexbuf in
        Token (env, (T_IDENTIFIER { loc; value = raw; raw }))
    | 36 -> Token (env, T_LCURLY)
    | 37 -> Token (env, T_RCURLY)
    | 38 -> Token (env, T_LPAREN)
    | 39 -> Token (env, T_RPAREN)
    | 40 -> Token (env, T_LBRACKET)
    | 41 -> Token (env, T_RBRACKET)
    | 42 -> Token (env, T_ELLIPSIS)
    | 43 -> Token (env, T_PERIOD)
    | 44 -> Token (env, T_SEMICOLON)
    | 45 -> Token (env, T_COMMA)
    | 46 -> Token (env, T_COLON)
    | 47 ->
        (Sedlexing.rollback lexbuf;
         (let __sedlex_state_0 =
            function
            | lexbuf ->
                (match __sedlex_partition_49
                         (Sedlexing.__private__next_int lexbuf)
                 with
                 | 0 -> 0
                 | _ -> Sedlexing.backtrack lexbuf) in
          Sedlexing.start lexbuf;
          (match __sedlex_state_0 lexbuf with
           | 0 -> Token (env, T_PLING)
           | _ -> failwith "expected ?")))
    | 48 -> Token (env, T_PLING_PERIOD)
    | 49 -> Token (env, T_PLING_PLING)
    | 50 -> Token (env, T_PLING)
    | 51 -> Token (env, T_AND)
    | 52 -> Token (env, T_OR)
    | 53 -> Token (env, T_STRICT_EQUAL)
    | 54 -> Token (env, T_STRICT_NOT_EQUAL)
    | 55 -> Token (env, T_LESS_THAN_EQUAL)
    | 56 -> Token (env, T_GREATER_THAN_EQUAL)
    | 57 -> Token (env, T_EQUAL)
    | 58 -> Token (env, T_NOT_EQUAL)
    | 59 -> Token (env, T_INCR)
    | 60 -> Token (env, T_DECR)
    | 61 -> Token (env, T_LSHIFT_ASSIGN)
    | 62 -> Token (env, T_LSHIFT)
    | 63 -> Token (env, T_RSHIFT_ASSIGN)
    | 64 -> Token (env, T_RSHIFT3_ASSIGN)
    | 65 -> Token (env, T_RSHIFT3)
    | 66 -> Token (env, T_RSHIFT)
    | 67 -> Token (env, T_PLUS_ASSIGN)
    | 68 -> Token (env, T_MINUS_ASSIGN)
    | 69 -> Token (env, T_MULT_ASSIGN)
    | 70 -> Token (env, T_EXP_ASSIGN)
    | 71 -> Token (env, T_MOD_ASSIGN)
    | 72 -> Token (env, T_BIT_AND_ASSIGN)
    | 73 -> Token (env, T_BIT_OR_ASSIGN)
    | 74 -> Token (env, T_BIT_XOR_ASSIGN)
    | 75 -> Token (env, T_NULLISH_ASSIGN)
    | 76 -> Token (env, T_AND_ASSIGN)
    | 77 -> Token (env, T_OR_ASSIGN)
    | 78 -> Token (env, T_LESS_THAN)
    | 79 -> Token (env, T_GREATER_THAN)
    | 80 -> Token (env, T_PLUS)
    | 81 -> Token (env, T_MINUS)
    | 82 -> Token (env, T_MULT)
    | 83 -> Token (env, T_EXP)
    | 84 -> Token (env, T_MOD)
    | 85 -> Token (env, T_BIT_OR)
    | 86 -> Token (env, T_BIT_AND)
    | 87 -> Token (env, T_BIT_XOR)
    | 88 -> Token (env, T_NOT)
    | 89 -> Token (env, T_BIT_NOT)
    | 90 -> Token (env, T_ASSIGN)
    | 91 -> Token (env, T_ARROW)
    | 92 -> Token (env, T_DIV_ASSIGN)
    | 93 -> Token (env, T_DIV)
    | 94 -> Token (env, T_AT)
    | 95 -> Token (env, T_POUND)
    | 96 -> let env = illegal env (loc_of_lexbuf env lexbuf) in Continue env
    | 97 ->
        let start_offset = Sedlexing.lexeme_start lexbuf in
        ((loop_id_continues lexbuf) |> ignore;
         (let end_offset = Sedlexing.lexeme_end lexbuf in
          let loc = loc_of_offsets env start_offset end_offset in
          Sedlexing.set_lexeme_start lexbuf start_offset;
          (match lexeme lexbuf with
           | "async" -> Token (env, T_ASYNC)
           | "await" -> Token (env, T_AWAIT)
           | "break" -> Token (env, T_BREAK)
           | "case" -> Token (env, T_CASE)
           | "catch" -> Token (env, T_CATCH)
           | "class" -> Token (env, T_CLASS)
           | "const" -> Token (env, T_CONST)
           | "continue" -> Token (env, T_CONTINUE)
           | "debugger" -> Token (env, T_DEBUGGER)
           | "declare" -> Token (env, T_DECLARE)
           | "default" -> Token (env, T_DEFAULT)
           | "delete" -> Token (env, T_DELETE)
           | "do" -> Token (env, T_DO)
           | "else" -> Token (env, T_ELSE)
           | "enum" -> Token (env, T_ENUM)
           | "export" -> Token (env, T_EXPORT)
           | "extends" -> Token (env, T_EXTENDS)
           | "false" -> Token (env, T_FALSE)
           | "finally" -> Token (env, T_FINALLY)
           | "for" -> Token (env, T_FOR)
           | "function" -> Token (env, T_FUNCTION)
           | "if" -> Token (env, T_IF)
           | "implements" -> Token (env, T_IMPLEMENTS)
           | "import" -> Token (env, T_IMPORT)
           | "in" -> Token (env, T_IN)
           | "instanceof" -> Token (env, T_INSTANCEOF)
           | "interface" -> Token (env, T_INTERFACE)
           | "let" -> Token (env, T_LET)
           | "new" -> Token (env, T_NEW)
           | "null" -> Token (env, T_NULL)
           | "of" -> Token (env, T_OF)
           | "opaque" -> Token (env, T_OPAQUE)
           | "package" -> Token (env, T_PACKAGE)
           | "private" -> Token (env, T_PRIVATE)
           | "protected" -> Token (env, T_PROTECTED)
           | "public" -> Token (env, T_PUBLIC)
           | "return" -> Token (env, T_RETURN)
           | "static" -> Token (env, T_STATIC)
           | "super" -> Token (env, T_SUPER)
           | "switch" -> Token (env, T_SWITCH)
           | "this" -> Token (env, T_THIS)
           | "throw" -> Token (env, T_THROW)
           | "true" -> Token (env, T_TRUE)
           | "try" -> Token (env, T_TRY)
           | "type" -> Token (env, T_TYPE)
           | "typeof" -> Token (env, T_TYPEOF)
           | "var" -> Token (env, T_VAR)
           | "void" -> Token (env, T_VOID)
           | "while" -> Token (env, T_WHILE)
           | "with" -> Token (env, T_WITH)
           | "yield" -> Token (env, T_YIELD)
           | _ ->
               let raw = Sedlexing.lexeme lexbuf in
               let (nenv, value) = decode_identifier env raw in
               Token
                 (nenv,
                   (T_IDENTIFIER
                      { loc; value; raw = (Sedlexing.string_of_utf8 raw) })))))
    | 98 ->
        let env =
          if is_in_comment_syntax env
          then
            let loc = loc_of_lexbuf env lexbuf in
            lex_error env loc Parse_error.UnexpectedEOS
          else env in
        Token (env, T_EOF)
    | 99 ->
        let env = illegal env (loc_of_lexbuf env lexbuf) in
        Token (env, (T_ERROR (lexeme lexbuf)))
    | _ -> failwith "unreachable token") : result)
let rec regexp_class env buf lexbuf =
  let rec __sedlex_state_0 =
    function
    | lexbuf ->
        (match __sedlex_partition_100 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> 0
         | 1 -> __sedlex_state_2 lexbuf
         | 2 -> 4
         | 3 -> __sedlex_state_4 lexbuf
         | 4 -> __sedlex_state_6 lexbuf
         | 5 -> 3
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_2 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 5;
         (match __sedlex_partition_101 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_2 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_4 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 4;
         (match __sedlex_partition_11 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 4
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_6 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 5;
         (match __sedlex_partition_102 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 1
          | 1 -> 2
          | _ -> Sedlexing.backtrack lexbuf)) in
  Sedlexing.start lexbuf;
  (match __sedlex_state_0 lexbuf with
   | 0 -> env
   | 1 -> (Buffer.add_string buf "\\\\"; regexp_class env buf lexbuf)
   | 2 ->
       (Buffer.add_char buf '\\';
        Buffer.add_char buf ']';
        regexp_class env buf lexbuf)
   | 3 -> (Buffer.add_char buf ']'; env)
   | 4 ->
       let loc = loc_of_lexbuf env lexbuf in
       let env = lex_error env loc Parse_error.UnterminatedRegExp in
       let env = new_line env lexbuf in env
   | 5 ->
       let str = lexeme lexbuf in
       (Buffer.add_string buf str; regexp_class env buf lexbuf)
   | _ -> failwith "unreachable regexp_class")
let rec regexp_body env buf lexbuf =
  let rec __sedlex_state_0 =
    function
    | lexbuf ->
        (match __sedlex_partition_103 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> 0
         | 1 -> __sedlex_state_2 lexbuf
         | 2 -> 6
         | 3 -> __sedlex_state_4 lexbuf
         | 4 -> __sedlex_state_6 lexbuf
         | 5 -> 5
         | 6 -> __sedlex_state_9 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_2 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 7;
         (match __sedlex_partition_104 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_2 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_4 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 6;
         (match __sedlex_partition_11 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 6
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_6 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 4;
         (match __sedlex_partition_105 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_7 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_7 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 3;
         (match __sedlex_partition_105 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_7 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_9 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 7;
         (match __sedlex_partition_106 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 2
          | 1 -> 1
          | 2 -> __sedlex_state_12 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_12 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 1;
         (match __sedlex_partition_11 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 1
          | _ -> Sedlexing.backtrack lexbuf)) in
  Sedlexing.start lexbuf;
  (match __sedlex_state_0 lexbuf with
   | 0 ->
       let loc = loc_of_lexbuf env lexbuf in
       let env = lex_error env loc Parse_error.UnterminatedRegExp in
       (env, "")
   | 1 ->
       let loc = loc_of_lexbuf env lexbuf in
       let env = lex_error env loc Parse_error.UnterminatedRegExp in
       let env = new_line env lexbuf in (env, "")
   | 2 ->
       let s = lexeme lexbuf in
       (Buffer.add_string buf s; regexp_body env buf lexbuf)
   | 3 ->
       let flags =
         let str = lexeme lexbuf in
         String.sub str 1 ((String.length str) - 1) in
       (env, flags)
   | 4 -> (env, "")
   | 5 ->
       (Buffer.add_char buf '[';
        (let env = regexp_class env buf lexbuf in regexp_body env buf lexbuf))
   | 6 ->
       let loc = loc_of_lexbuf env lexbuf in
       let env = lex_error env loc Parse_error.UnterminatedRegExp in
       let env = new_line env lexbuf in (env, "")
   | 7 ->
       let str = lexeme lexbuf in
       (Buffer.add_string buf str; regexp_body env buf lexbuf)
   | _ -> failwith "unreachable regexp_body")
let regexp env lexbuf =
  let rec __sedlex_state_0 =
    function
    | lexbuf ->
        (match __sedlex_partition_107 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> 0
         | 1 -> 6
         | 2 -> __sedlex_state_3 lexbuf
         | 3 -> 1
         | 4 -> __sedlex_state_6 lexbuf
         | 5 -> __sedlex_state_8 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_3 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 2;
         (match __sedlex_partition_51 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_4 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_4 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 2;
         (match __sedlex_partition_51 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_4 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_6 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 1;
         (match __sedlex_partition_11 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 1
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_8 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 5;
         (match __sedlex_partition_108 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 4
          | 1 -> 3
          | _ -> Sedlexing.backtrack lexbuf)) in
  Sedlexing.start lexbuf;
  (match __sedlex_state_0 lexbuf with
   | 0 -> Token (env, T_EOF)
   | 1 -> let env = new_line env lexbuf in Continue env
   | 2 -> Continue env
   | 3 ->
       let start_pos = start_pos_of_lexbuf env lexbuf in
       let buf = Buffer.create 127 in
       let (env, end_pos) = line_comment env buf lexbuf in
       Comment (env, (mk_comment env start_pos end_pos buf false))
   | 4 ->
       let start_pos = start_pos_of_lexbuf env lexbuf in
       let buf = Buffer.create 127 in
       let (env, end_pos) = comment env buf lexbuf in
       Comment (env, (mk_comment env start_pos end_pos buf true))
   | 5 ->
       let start = start_pos_of_lexbuf env lexbuf in
       let buf = Buffer.create 127 in
       let (env, flags) = regexp_body env buf lexbuf in
       let _end = end_pos_of_lexbuf env lexbuf in
       let loc = { Loc.source = (Lex_env.source env); start; _end } in
       Token (env, (T_REGEXP (loc, (Buffer.contents buf), flags)))
   | 6 ->
       let env = illegal env (loc_of_lexbuf env lexbuf) in
       Token (env, (T_ERROR (lexeme lexbuf)))
   | _ -> failwith "unreachable regexp")
let decode_html_entity =
  function
  | "quot" -> Some 0x0022
  | "amp" -> Some 0x0026
  | "apos" -> Some 0x0027
  | "lt" -> Some 0x003C
  | "gt" -> Some 0x003E
  | "nbsp" -> Some 0x00A0
  | "iexcl" -> Some 0x00A1
  | "cent" -> Some 0x00A2
  | "pound" -> Some 0x00A3
  | "curren" -> Some 0x00A4
  | "yen" -> Some 0x00A5
  | "brvbar" -> Some 0x00A6
  | "sect" -> Some 0x00A7
  | "uml" -> Some 0x00A8
  | "copy" -> Some 0x00A9
  | "ordf" -> Some 0x00AA
  | "laquo" -> Some 0x00AB
  | "not" -> Some 0x00AC
  | "shy" -> Some 0x00AD
  | "reg" -> Some 0x00AE
  | "macr" -> Some 0x00AF
  | "deg" -> Some 0x00B0
  | "plusmn" -> Some 0x00B1
  | "sup2" -> Some 0x00B2
  | "sup3" -> Some 0x00B3
  | "acute" -> Some 0x00B4
  | "micro" -> Some 0x00B5
  | "para" -> Some 0x00B6
  | "middot" -> Some 0x00B7
  | "cedil" -> Some 0x00B8
  | "sup1" -> Some 0x00B9
  | "ordm" -> Some 0x00BA
  | "raquo" -> Some 0x00BB
  | "frac14" -> Some 0x00BC
  | "frac12" -> Some 0x00BD
  | "frac34" -> Some 0x00BE
  | "iquest" -> Some 0x00BF
  | "Agrave" -> Some 0x00C0
  | "Aacute" -> Some 0x00C1
  | "Acirc" -> Some 0x00C2
  | "Atilde" -> Some 0x00C3
  | "Auml" -> Some 0x00C4
  | "Aring" -> Some 0x00C5
  | "AElig" -> Some 0x00C6
  | "Ccedil" -> Some 0x00C7
  | "Egrave" -> Some 0x00C8
  | "Eacute" -> Some 0x00C9
  | "Ecirc" -> Some 0x00CA
  | "Euml" -> Some 0x00CB
  | "Igrave" -> Some 0x00CC
  | "Iacute" -> Some 0x00CD
  | "Icirc" -> Some 0x00CE
  | "Iuml" -> Some 0x00CF
  | "ETH" -> Some 0x00D0
  | "Ntilde" -> Some 0x00D1
  | "Ograve" -> Some 0x00D2
  | "Oacute" -> Some 0x00D3
  | "Ocirc" -> Some 0x00D4
  | "Otilde" -> Some 0x00D5
  | "Ouml" -> Some 0x00D6
  | "times" -> Some 0x00D7
  | "Oslash" -> Some 0x00D8
  | "Ugrave" -> Some 0x00D9
  | "Uacute" -> Some 0x00DA
  | "Ucirc" -> Some 0x00DB
  | "Uuml" -> Some 0x00DC
  | "Yacute" -> Some 0x00DD
  | "THORN" -> Some 0x00DE
  | "szlig" -> Some 0x00DF
  | "agrave" -> Some 0x00E0
  | "aacute" -> Some 0x00E1
  | "acirc" -> Some 0x00E2
  | "atilde" -> Some 0x00E3
  | "auml" -> Some 0x00E4
  | "aring" -> Some 0x00E5
  | "aelig" -> Some 0x00E6
  | "ccedil" -> Some 0x00E7
  | "egrave" -> Some 0x00E8
  | "eacute" -> Some 0x00E9
  | "ecirc" -> Some 0x00EA
  | "euml" -> Some 0x00EB
  | "igrave" -> Some 0x00EC
  | "iacute" -> Some 0x00ED
  | "icirc" -> Some 0x00EE
  | "iuml" -> Some 0x00EF
  | "eth" -> Some 0x00F0
  | "ntilde" -> Some 0x00F1
  | "ograve" -> Some 0x00F2
  | "oacute" -> Some 0x00F3
  | "ocirc" -> Some 0x00F4
  | "otilde" -> Some 0x00F5
  | "ouml" -> Some 0x00F6
  | "divide" -> Some 0x00F7
  | "oslash" -> Some 0x00F8
  | "ugrave" -> Some 0x00F9
  | "uacute" -> Some 0x00FA
  | "ucirc" -> Some 0x00FB
  | "uuml" -> Some 0x00FC
  | "yacute" -> Some 0x00FD
  | "thorn" -> Some 0x00FE
  | "yuml" -> Some 0x00FF
  | "OElig" -> Some 0x0152
  | "oelig" -> Some 0x0153
  | "Scaron" -> Some 0x0160
  | "scaron" -> Some 0x0161
  | "Yuml" -> Some 0x0178
  | "fnof" -> Some 0x0192
  | "circ" -> Some 0x02C6
  | "tilde" -> Some 0x02DC
  | "Alpha" -> Some 0x0391
  | "Beta" -> Some 0x0392
  | "Gamma" -> Some 0x0393
  | "Delta" -> Some 0x0394
  | "Epsilon" -> Some 0x0395
  | "Zeta" -> Some 0x0396
  | "Eta" -> Some 0x0397
  | "Theta" -> Some 0x0398
  | "Iota" -> Some 0x0399
  | "Kappa" -> Some 0x039A
  | "Lambda" -> Some 0x039B
  | "Mu" -> Some 0x039C
  | "Nu" -> Some 0x039D
  | "Xi" -> Some 0x039E
  | "Omicron" -> Some 0x039F
  | "Pi" -> Some 0x03A0
  | "Rho" -> Some 0x03A1
  | "Sigma" -> Some 0x03A3
  | "Tau" -> Some 0x03A4
  | "Upsilon" -> Some 0x03A5
  | "Phi" -> Some 0x03A6
  | "Chi" -> Some 0x03A7
  | "Psi" -> Some 0x03A8
  | "Omega" -> Some 0x03A9
  | "alpha" -> Some 0x03B1
  | "beta" -> Some 0x03B2
  | "gamma" -> Some 0x03B3
  | "delta" -> Some 0x03B4
  | "epsilon" -> Some 0x03B5
  | "zeta" -> Some 0x03B6
  | "eta" -> Some 0x03B7
  | "theta" -> Some 0x03B8
  | "iota" -> Some 0x03B9
  | "kappa" -> Some 0x03BA
  | "lambda" -> Some 0x03BB
  | "mu" -> Some 0x03BC
  | "nu" -> Some 0x03BD
  | "xi" -> Some 0x03BE
  | "omicron" -> Some 0x03BF
  | "pi" -> Some 0x03C0
  | "rho" -> Some 0x03C1
  | "sigmaf" -> Some 0x03C2
  | "sigma" -> Some 0x03C3
  | "tau" -> Some 0x03C4
  | "upsilon" -> Some 0x03C5
  | "phi" -> Some 0x03C6
  | "chi" -> Some 0x03C7
  | "psi" -> Some 0x03C8
  | "omega" -> Some 0x03C9
  | "thetasym" -> Some 0x03D1
  | "upsih" -> Some 0x03D2
  | "piv" -> Some 0x03D6
  | "ensp" -> Some 0x2002
  | "emsp" -> Some 0x2003
  | "thinsp" -> Some 0x2009
  | "zwnj" -> Some 0x200C
  | "zwj" -> Some 0x200D
  | "lrm" -> Some 0x200E
  | "rlm" -> Some 0x200F
  | "ndash" -> Some 0x2013
  | "mdash" -> Some 0x2014
  | "lsquo" -> Some 0x2018
  | "rsquo" -> Some 0x2019
  | "sbquo" -> Some 0x201A
  | "ldquo" -> Some 0x201C
  | "rdquo" -> Some 0x201D
  | "bdquo" -> Some 0x201E
  | "dagger" -> Some 0x2020
  | "Dagger" -> Some 0x2021
  | "bull" -> Some 0x2022
  | "hellip" -> Some 0x2026
  | "permil" -> Some 0x2030
  | "prime" -> Some 0x2032
  | "Prime" -> Some 0x2033
  | "lsaquo" -> Some 0x2039
  | "rsaquo" -> Some 0x203A
  | "oline" -> Some 0x203E
  | "frasl" -> Some 0x2044
  | "euro" -> Some 0x20AC
  | "image" -> Some 0x2111
  | "weierp" -> Some 0x2118
  | "real" -> Some 0x211C
  | "trade" -> Some 0x2122
  | "alefsym" -> Some 0x2135
  | "larr" -> Some 0x2190
  | "uarr" -> Some 0x2191
  | "rarr" -> Some 0x2192
  | "darr" -> Some 0x2193
  | "harr" -> Some 0x2194
  | "crarr" -> Some 0x21B5
  | "lArr" -> Some 0x21D0
  | "uArr" -> Some 0x21D1
  | "rArr" -> Some 0x21D2
  | "dArr" -> Some 0x21D3
  | "hArr" -> Some 0x21D4
  | "forall" -> Some 0x2200
  | "part" -> Some 0x2202
  | "exist" -> Some 0x2203
  | "empty" -> Some 0x2205
  | "nabla" -> Some 0x2207
  | "isin" -> Some 0x2208
  | "notin" -> Some 0x2209
  | "ni" -> Some 0x220B
  | "prod" -> Some 0x220F
  | "sum" -> Some 0x2211
  | "minus" -> Some 0x2212
  | "lowast" -> Some 0x2217
  | "radic" -> Some 0x221A
  | "prop" -> Some 0x221D
  | "infin" -> Some 0x221E
  | "ang" -> Some 0x2220
  | "and" -> Some 0x2227
  | "or" -> Some 0x2228
  | "cap" -> Some 0x2229
  | "cup" -> Some 0x222A
  | "'int'" -> Some 0x222B
  | "there4" -> Some 0x2234
  | "sim" -> Some 0x223C
  | "cong" -> Some 0x2245
  | "asymp" -> Some 0x2248
  | "ne" -> Some 0x2260
  | "equiv" -> Some 0x2261
  | "le" -> Some 0x2264
  | "ge" -> Some 0x2265
  | "sub" -> Some 0x2282
  | "sup" -> Some 0x2283
  | "nsub" -> Some 0x2284
  | "sube" -> Some 0x2286
  | "supe" -> Some 0x2287
  | "oplus" -> Some 0x2295
  | "otimes" -> Some 0x2297
  | "perp" -> Some 0x22A5
  | "sdot" -> Some 0x22C5
  | "lceil" -> Some 0x2308
  | "rceil" -> Some 0x2309
  | "lfloor" -> Some 0x230A
  | "rfloor" -> Some 0x230B
  | "lang" -> Some 0x27E8
  | "rang" -> Some 0x27E9
  | "loz" -> Some 0x25CA
  | "spades" -> Some 0x2660
  | "clubs" -> Some 0x2663
  | "hearts" -> Some 0x2665
  | "diams" -> Some 0x2666
  | _ -> None
let rec jsx_child_text env buf raw lexbuf =
  let rec __sedlex_state_0 =
    function
    | lexbuf ->
        (match __sedlex_partition_109 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> 3
         | 1 -> __sedlex_state_2 lexbuf
         | 2 -> 4
         | 3 -> __sedlex_state_4 lexbuf
         | 4 -> __sedlex_state_6 lexbuf
         | 5 -> 0
         | 6 -> __sedlex_state_23 lexbuf
         | 7 -> __sedlex_state_24 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_2 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 8;
         (match __sedlex_partition_110 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_2 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_4 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 4;
         (match __sedlex_partition_11 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 4
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_6 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 8;
         (match __sedlex_partition_111 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_7 lexbuf
          | 1 -> __sedlex_state_13 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_7 =
    function
    | lexbuf ->
        (match __sedlex_partition_112 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_8 lexbuf
         | 1 -> __sedlex_state_10 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_8 =
    function
    | lexbuf ->
        (match __sedlex_partition_113 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_8 lexbuf
         | 1 -> 6
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_10 =
    function
    | lexbuf ->
        (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_11 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_11 =
    function
    | lexbuf ->
        (match __sedlex_partition_114 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_11 lexbuf
         | 1 -> 5
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_13 =
    function
    | lexbuf ->
        (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_14 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_14 =
    function
    | lexbuf ->
        (match __sedlex_partition_115 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_15 lexbuf
         | 1 -> 7
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_15 =
    function
    | lexbuf ->
        (match __sedlex_partition_115 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_16 lexbuf
         | 1 -> 7
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_16 =
    function
    | lexbuf ->
        (match __sedlex_partition_115 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_17 lexbuf
         | 1 -> 7
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_17 =
    function
    | lexbuf ->
        (match __sedlex_partition_115 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_18 lexbuf
         | 1 -> 7
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_18 =
    function
    | lexbuf ->
        (match __sedlex_partition_115 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_19 lexbuf
         | 1 -> 7
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_19 =
    function
    | lexbuf ->
        (match __sedlex_partition_115 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_20 lexbuf
         | 1 -> 7
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_20 =
    function
    | lexbuf ->
        (match __sedlex_partition_116 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> 7
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_23 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 1;
         (match __sedlex_partition_110 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_2 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_24 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 2;
         (match __sedlex_partition_110 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_2 lexbuf
          | _ -> Sedlexing.backtrack lexbuf)) in
  Sedlexing.start lexbuf;
  (match __sedlex_state_0 lexbuf with
   | 0 -> (Sedlexing.rollback lexbuf; env)
   | 1 ->
       unexpected_error_w_suggest env (loc_of_lexbuf env lexbuf) ">" "{'>'}"
   | 2 ->
       unexpected_error_w_suggest env (loc_of_lexbuf env lexbuf) "}" "{'}'}"
   | 3 -> illegal env (loc_of_lexbuf env lexbuf)
   | 4 ->
       let lt = lexeme lexbuf in
       (Buffer.add_string raw lt;
        Buffer.add_string buf lt;
        (let env = new_line env lexbuf in jsx_child_text env buf raw lexbuf))
   | 5 ->
       let s = lexeme lexbuf in
       let n = String.sub s 3 ((String.length s) - 4) in
       (Buffer.add_string raw s;
        (let code = int_of_string ("0x" ^ n) in
         Wtf8.add_wtf_8 buf code; jsx_child_text env buf raw lexbuf))
   | 6 ->
       let s = lexeme lexbuf in
       let n = String.sub s 2 ((String.length s) - 3) in
       (Buffer.add_string raw s;
        (let code = int_of_string n in
         Wtf8.add_wtf_8 buf code; jsx_child_text env buf raw lexbuf))
   | 7 ->
       let s = lexeme lexbuf in
       let entity = String.sub s 1 ((String.length s) - 2) in
       (Buffer.add_string raw s;
        (match decode_html_entity entity with
         | Some code -> Wtf8.add_wtf_8 buf code
         | None -> Buffer.add_string buf ("&" ^ (entity ^ ";")));
        jsx_child_text env buf raw lexbuf)
   | 8 ->
       let c = lexeme lexbuf in
       (Buffer.add_string raw c;
        Buffer.add_string buf c;
        jsx_child_text env buf raw lexbuf)
   | _ -> failwith "unreachable jsxtext")
let rec jsx_quote_text env single buf raw lexbuf =
  let rec __sedlex_state_0 =
    function
    | lexbuf ->
        (match __sedlex_partition_117 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> 2
         | 1 -> __sedlex_state_2 lexbuf
         | 2 -> 3
         | 3 -> __sedlex_state_4 lexbuf
         | 4 -> 1
         | 5 -> __sedlex_state_7 lexbuf
         | 6 -> 0
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_2 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 7;
         (match __sedlex_partition_118 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_2 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_4 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 3;
         (match __sedlex_partition_11 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 3
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_7 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 7;
         (match __sedlex_partition_111 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_8 lexbuf
          | 1 -> __sedlex_state_14 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_8 =
    function
    | lexbuf ->
        (match __sedlex_partition_112 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_9 lexbuf
         | 1 -> __sedlex_state_11 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_9 =
    function
    | lexbuf ->
        (match __sedlex_partition_113 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_9 lexbuf
         | 1 -> 5
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_11 =
    function
    | lexbuf ->
        (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_12 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_12 =
    function
    | lexbuf ->
        (match __sedlex_partition_114 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_12 lexbuf
         | 1 -> 4
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_14 =
    function
    | lexbuf ->
        (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_15 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_15 =
    function
    | lexbuf ->
        (match __sedlex_partition_115 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_16 lexbuf
         | 1 -> 6
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_16 =
    function
    | lexbuf ->
        (match __sedlex_partition_115 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_17 lexbuf
         | 1 -> 6
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_17 =
    function
    | lexbuf ->
        (match __sedlex_partition_115 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_18 lexbuf
         | 1 -> 6
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_18 =
    function
    | lexbuf ->
        (match __sedlex_partition_115 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_19 lexbuf
         | 1 -> 6
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_19 =
    function
    | lexbuf ->
        (match __sedlex_partition_115 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_20 lexbuf
         | 1 -> 6
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_20 =
    function
    | lexbuf ->
        (match __sedlex_partition_115 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_21 lexbuf
         | 1 -> 6
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_21 =
    function
    | lexbuf ->
        (match __sedlex_partition_116 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> 6
         | _ -> Sedlexing.backtrack lexbuf) in
  Sedlexing.start lexbuf;
  (match __sedlex_state_0 lexbuf with
   | 0 ->
       if single
       then env
       else
         (Buffer.add_char raw '\'';
          Buffer.add_char buf '\'';
          jsx_quote_text env single buf raw lexbuf)
   | 1 ->
       if not single
       then env
       else
         (Buffer.add_char raw '"';
          Buffer.add_char buf '"';
          jsx_quote_text env single buf raw lexbuf)
   | 2 -> let env = illegal env (loc_of_lexbuf env lexbuf) in env
   | 3 ->
       let lt = lexeme lexbuf in
       (Buffer.add_string raw lt;
        Buffer.add_string buf lt;
        (let env = new_line env lexbuf in
         jsx_quote_text env single buf raw lexbuf))
   | 4 ->
       let s = lexeme lexbuf in
       let n = String.sub s 3 ((String.length s) - 4) in
       (Buffer.add_string raw s;
        (let code = int_of_string ("0x" ^ n) in
         Wtf8.add_wtf_8 buf code; jsx_quote_text env single buf raw lexbuf))
   | 5 ->
       let s = lexeme lexbuf in
       let n = String.sub s 2 ((String.length s) - 3) in
       (Buffer.add_string raw s;
        (let code = int_of_string n in
         Wtf8.add_wtf_8 buf code; jsx_quote_text env single buf raw lexbuf))
   | 6 ->
       let s = lexeme lexbuf in
       let entity = String.sub s 1 ((String.length s) - 2) in
       (Buffer.add_string raw s;
        (match decode_html_entity entity with
         | Some code -> Wtf8.add_wtf_8 buf code
         | None -> Buffer.add_string buf ("&" ^ (entity ^ ";")));
        jsx_quote_text env single buf raw lexbuf)
   | 7 ->
       let c = lexeme lexbuf in
       (Buffer.add_string raw c;
        Buffer.add_string buf c;
        jsx_quote_text env single buf raw lexbuf)
   | _ -> failwith "unreachable jsxtext")
let jsx_tag env lexbuf =
  let rec __sedlex_state_0 =
    function
    | lexbuf ->
        (match __sedlex_partition_119 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> 0
         | 1 -> 14
         | 2 -> __sedlex_state_3 lexbuf
         | 3 -> 1
         | 4 -> __sedlex_state_6 lexbuf
         | 5 -> 12
         | 6 -> 13
         | 7 -> 10
         | 8 -> __sedlex_state_11 lexbuf
         | 9 -> 9
         | 10 -> 5
         | 11 -> 11
         | 12 -> 7
         | 13 -> __sedlex_state_18 lexbuf
         | 14 -> 8
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_3 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 2;
         (match __sedlex_partition_51 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_4 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_4 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 2;
         (match __sedlex_partition_51 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_4 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_6 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 1;
         (match __sedlex_partition_11 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 1
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_11 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 6;
         (match __sedlex_partition_108 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 4
          | 1 -> 3
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_18 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 14;
         (match __sedlex_partition_2 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_19 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_19 =
    function
    | lexbuf ->
        (match __sedlex_partition_3 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_20 lexbuf
         | 1 -> __sedlex_state_24 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_20 =
    function
    | lexbuf ->
        (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_21 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_21 =
    function
    | lexbuf ->
        (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_22 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_22 =
    function
    | lexbuf ->
        (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> 13
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_24 =
    function
    | lexbuf ->
        (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_25 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_25 =
    function
    | lexbuf ->
        (match __sedlex_partition_5 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_25 lexbuf
         | 1 -> 13
         | _ -> Sedlexing.backtrack lexbuf) in
  Sedlexing.start lexbuf;
  (match __sedlex_state_0 lexbuf with
   | 0 -> Token (env, T_EOF)
   | 1 -> let env = new_line env lexbuf in Continue env
   | 2 -> Continue env
   | 3 ->
       let start_pos = start_pos_of_lexbuf env lexbuf in
       let buf = Buffer.create 127 in
       let (env, end_pos) = line_comment env buf lexbuf in
       Comment (env, (mk_comment env start_pos end_pos buf false))
   | 4 ->
       let start_pos = start_pos_of_lexbuf env lexbuf in
       let buf = Buffer.create 127 in
       let (env, end_pos) = comment env buf lexbuf in
       Comment (env, (mk_comment env start_pos end_pos buf true))
   | 5 -> Token (env, T_LESS_THAN)
   | 6 -> Token (env, T_DIV)
   | 7 -> Token (env, T_GREATER_THAN)
   | 8 -> Token (env, T_LCURLY)
   | 9 -> Token (env, T_COLON)
   | 10 -> Token (env, T_PERIOD)
   | 11 -> Token (env, T_ASSIGN)
   | 12 ->
       let quote = lexeme lexbuf in
       let start = start_pos_of_lexbuf env lexbuf in
       let buf = Buffer.create 127 in
       let raw = Buffer.create 127 in
       (Buffer.add_string raw quote;
        (let single = quote = "'" in
         let env = jsx_quote_text env single buf raw lexbuf in
         let _end = end_pos_of_lexbuf env lexbuf in
         Buffer.add_string raw quote;
         (let value = Buffer.contents buf in
          let raw = Buffer.contents raw in
          let loc = { Loc.source = (Lex_env.source env); start; _end } in
          Token (env, (T_JSX_QUOTE_TEXT (loc, value, raw))))))
   | 13 ->
       let start_offset = Sedlexing.lexeme_start lexbuf in
       (loop_jsx_id_continues lexbuf;
        (let end_offset = Sedlexing.lexeme_end lexbuf in
         Sedlexing.set_lexeme_start lexbuf start_offset;
         (let raw = Sedlexing.lexeme lexbuf in
          let loc = loc_of_offsets env start_offset end_offset in
          Token
            (env,
              (T_JSX_IDENTIFIER { raw = (Sedlexing.string_of_utf8 raw); loc })))))
   | 14 -> Token (env, (T_ERROR (lexeme lexbuf)))
   | _ -> failwith "unreachable jsx_tag")
let jsx_child env start buf raw lexbuf =
  let rec __sedlex_state_0 =
    function
    | lexbuf ->
        (match __sedlex_partition_120 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> 1
         | 1 -> 4
         | 2 -> 0
         | 3 -> __sedlex_state_4 lexbuf
         | 4 -> 2
         | 5 -> 3
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_4 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 0;
         (match __sedlex_partition_11 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 0
          | _ -> Sedlexing.backtrack lexbuf)) in
  Sedlexing.start lexbuf;
  (match __sedlex_state_0 lexbuf with
   | 0 ->
       let lt = lexeme lexbuf in
       (Buffer.add_string raw lt;
        Buffer.add_string buf lt;
        (let env = new_line env lexbuf in
         let env = jsx_child_text env buf raw lexbuf in
         let _end = end_pos_of_lexbuf env lexbuf in
         let value = Buffer.contents buf in
         let raw = Buffer.contents raw in
         let loc = { Loc.source = (Lex_env.source env); start; _end } in
         (env, (T_JSX_CHILD_TEXT (loc, value, raw)))))
   | 1 -> (env, T_EOF)
   | 2 -> (env, T_LESS_THAN)
   | 3 -> (env, T_LCURLY)
   | 4 ->
       (Sedlexing.rollback lexbuf;
        (let env = jsx_child_text env buf raw lexbuf in
         let _end = end_pos_of_lexbuf env lexbuf in
         let value = Buffer.contents buf in
         let raw = Buffer.contents raw in
         let loc = { Loc.source = (Lex_env.source env); start; _end } in
         (env, (T_JSX_CHILD_TEXT (loc, value, raw)))))
   | _ -> failwith "unreachable jsx_child")
let template_tail env lexbuf =
  let rec __sedlex_state_0 =
    function
    | lexbuf ->
        (match __sedlex_partition_121 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> 5
         | 1 -> __sedlex_state_2 lexbuf
         | 2 -> 0
         | 3 -> __sedlex_state_5 lexbuf
         | 4 -> __sedlex_state_7 lexbuf
         | 5 -> 4
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_2 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 1;
         (match __sedlex_partition_51 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_3 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_3 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 1;
         (match __sedlex_partition_51 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_3 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_5 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 0;
         (match __sedlex_partition_11 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 0
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_7 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 5;
         (match __sedlex_partition_108 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 3
          | 1 -> 2
          | _ -> Sedlexing.backtrack lexbuf)) in
  Sedlexing.start lexbuf;
  (match __sedlex_state_0 lexbuf with
   | 0 -> let env = new_line env lexbuf in Continue env
   | 1 -> Continue env
   | 2 ->
       let start_pos = start_pos_of_lexbuf env lexbuf in
       let buf = Buffer.create 127 in
       let (env, end_pos) = line_comment env buf lexbuf in
       Comment (env, (mk_comment env start_pos end_pos buf false))
   | 3 ->
       let start_pos = start_pos_of_lexbuf env lexbuf in
       let buf = Buffer.create 127 in
       let (env, end_pos) = comment env buf lexbuf in
       Comment (env, (mk_comment env start_pos end_pos buf true))
   | 4 ->
       let start = start_pos_of_lexbuf env lexbuf in
       let value = Buffer.create 127 in
       let raw = Buffer.create 127 in
       let (env, is_tail) = template_part env value raw lexbuf in
       let _end = end_pos_of_lexbuf env lexbuf in
       let loc = { Loc.source = (Lex_env.source env); start; _end } in
       Token
         (env,
           (T_TEMPLATE_PART
              (loc, (Buffer.contents value), (Buffer.contents raw), false,
                is_tail)))
   | 5 ->
       let env = illegal env (loc_of_lexbuf env lexbuf) in
       Token
         (env,
           (T_TEMPLATE_PART ((loc_of_lexbuf env lexbuf), "", "", false, true)))
   | _ -> failwith "unreachable template_tail")
let type_token env lexbuf =
  let rec __sedlex_state_0 =
    function
    | lexbuf ->
        (match __sedlex_partition_122 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> 66
         | 1 -> 67
         | 2 -> __sedlex_state_3 lexbuf
         | 3 -> 0
         | 4 -> __sedlex_state_6 lexbuf
         | 5 -> 6
         | 6 -> 65
         | 7 -> __sedlex_state_10 lexbuf
         | 8 -> __sedlex_state_17 lexbuf
         | 9 -> 38
         | 10 -> 39
         | 11 -> __sedlex_state_21 lexbuf
         | 12 -> 61
         | 13 -> 43
         | 14 -> 62
         | 15 -> __sedlex_state_26 lexbuf
         | 16 -> __sedlex_state_49 lexbuf
         | 17 -> __sedlex_state_66 lexbuf
         | 18 -> __sedlex_state_113 lexbuf
         | 19 -> 44
         | 20 -> 42
         | 21 -> 49
         | 22 -> __sedlex_state_120 lexbuf
         | 23 -> 50
         | 24 -> __sedlex_state_123 lexbuf
         | 25 -> 32
         | 26 -> __sedlex_state_126 lexbuf
         | 27 -> 33
         | 28 -> __sedlex_state_135 lexbuf
         | 29 -> __sedlex_state_144 lexbuf
         | 30 -> __sedlex_state_146 lexbuf
         | 31 -> 35
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_3 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 1;
         (match __sedlex_partition_51 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_4 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_4 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 1;
         (match __sedlex_partition_51 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_4 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_6 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 0;
         (match __sedlex_partition_11 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 0
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_10 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 67;
         (match __sedlex_partition_73 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_11 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_11 =
    function
    | lexbuf ->
        (match __sedlex_partition_123 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_12 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_12 =
    function
    | lexbuf ->
        (match __sedlex_partition_75 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_13 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_13 =
    function
    | lexbuf ->
        (match __sedlex_partition_73 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_14 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_14 =
    function
    | lexbuf ->
        (match __sedlex_partition_124 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_15 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_15 =
    function
    | lexbuf ->
        (match __sedlex_partition_93 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> 31
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_17 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 58;
         (match __sedlex_partition_125 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 55
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_21 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 53;
         (match __sedlex_partition_13 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 4
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_26 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 41;
         (match __sedlex_partition_47 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_27 lexbuf
          | 1 -> __sedlex_state_29 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_27 =
    function
    | lexbuf ->
        (match __sedlex_partition_58 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> 40
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_29 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 30;
         (match __sedlex_partition_59 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_30 lexbuf
          | 1 -> __sedlex_state_29 lexbuf
          | 2 -> __sedlex_state_31 lexbuf
          | 3 -> __sedlex_state_45 lexbuf
          | 4 -> __sedlex_state_47 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_30 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 29;
         (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_30 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_31 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 29;
         (match __sedlex_partition_61 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_30 lexbuf
          | 1 -> __sedlex_state_32 lexbuf
          | 2 -> __sedlex_state_40 lexbuf
          | 3 -> __sedlex_state_44 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_32 =
    function
    | lexbuf ->
        (match __sedlex_partition_40 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_33 lexbuf
         | 1 -> __sedlex_state_37 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_33 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 24;
         (match __sedlex_partition_62 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_34 lexbuf
          | 1 -> __sedlex_state_33 lexbuf
          | 2 -> __sedlex_state_35 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_34 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 23;
         (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_34 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_35 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 22;
         (match __sedlex_partition_63 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_36 lexbuf
          | 1 -> __sedlex_state_34 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_36 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 21;
         (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_36 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_37 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 24;
         (match __sedlex_partition_64 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_34 lexbuf
          | 1 -> __sedlex_state_37 lexbuf
          | 2 -> __sedlex_state_38 lexbuf
          | 3 -> __sedlex_state_35 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_38 =
    function
    | lexbuf ->
        (match __sedlex_partition_33 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_39 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_39 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 24;
         (match __sedlex_partition_64 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_34 lexbuf
          | 1 -> __sedlex_state_39 lexbuf
          | 2 -> __sedlex_state_38 lexbuf
          | 3 -> __sedlex_state_35 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_40 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 24;
         (match __sedlex_partition_62 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_41 lexbuf
          | 1 -> __sedlex_state_40 lexbuf
          | 2 -> __sedlex_state_42 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_41 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 23;
         (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_41 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_42 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 22;
         (match __sedlex_partition_63 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_43 lexbuf
          | 1 -> __sedlex_state_41 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_43 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 21;
         (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_43 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_44 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 24;
         (match __sedlex_partition_64 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_41 lexbuf
          | 1 -> __sedlex_state_44 lexbuf
          | 2 -> __sedlex_state_38 lexbuf
          | 3 -> __sedlex_state_42 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_45 =
    function
    | lexbuf ->
        (match __sedlex_partition_33 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_46 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_46 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 30;
         (match __sedlex_partition_59 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_30 lexbuf
          | 1 -> __sedlex_state_46 lexbuf
          | 2 -> __sedlex_state_31 lexbuf
          | 3 -> __sedlex_state_45 lexbuf
          | 4 -> __sedlex_state_47 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_47 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 27;
         (match __sedlex_partition_63 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_48 lexbuf
          | 1 -> __sedlex_state_30 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_48 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 25;
         (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_48 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_49 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 67;
         (match __sedlex_partition_108 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_50 lexbuf
          | 1 -> 5
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_50 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 2;
         (match __sedlex_partition_65 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_51 lexbuf
          | 1 -> __sedlex_state_52 lexbuf
          | 2 -> __sedlex_state_54 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_51 =
    function
    | lexbuf ->
        (match __sedlex_partition_65 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_51 lexbuf
         | 1 -> __sedlex_state_52 lexbuf
         | 2 -> __sedlex_state_54 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_52 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 3;
         (match __sedlex_partition_66 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 3
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_54 =
    function
    | lexbuf ->
        (match __sedlex_partition_67 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_55 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_55 =
    function
    | lexbuf ->
        (match __sedlex_partition_68 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_56 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_56 =
    function
    | lexbuf ->
        (match __sedlex_partition_69 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_57 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_57 =
    function
    | lexbuf ->
        (match __sedlex_partition_70 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_58 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_58 =
    function
    | lexbuf ->
        (match __sedlex_partition_71 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_59 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_59 =
    function
    | lexbuf ->
        (match __sedlex_partition_72 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_60 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_60 =
    function
    | lexbuf ->
        (match __sedlex_partition_73 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_61 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_61 =
    function
    | lexbuf ->
        (match __sedlex_partition_67 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_62 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_62 =
    function
    | lexbuf ->
        (match __sedlex_partition_2 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_63 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_63 =
    function
    | lexbuf ->
        (match __sedlex_partition_74 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_64 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_64 =
    function
    | lexbuf ->
        (match __sedlex_partition_75 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> 3
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_66 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 30;
         (match __sedlex_partition_76 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_30 lexbuf
          | 1 -> __sedlex_state_67 lexbuf
          | 2 -> __sedlex_state_71 lexbuf
          | 3 -> __sedlex_state_80 lexbuf
          | 4 -> __sedlex_state_83 lexbuf
          | 5 -> __sedlex_state_31 lexbuf
          | 6 -> __sedlex_state_93 lexbuf
          | 7 -> __sedlex_state_103 lexbuf
          | 8 -> __sedlex_state_81 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_67 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 30;
         (match __sedlex_partition_77 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_30 lexbuf
          | 1 -> __sedlex_state_68 lexbuf
          | 2 -> __sedlex_state_31 lexbuf
          | 3 -> __sedlex_state_47 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_68 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 30;
         (match __sedlex_partition_59 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_30 lexbuf
          | 1 -> __sedlex_state_68 lexbuf
          | 2 -> __sedlex_state_31 lexbuf
          | 3 -> __sedlex_state_69 lexbuf
          | 4 -> __sedlex_state_47 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_69 =
    function
    | lexbuf ->
        (match __sedlex_partition_33 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_70 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_70 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 30;
         (match __sedlex_partition_59 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_30 lexbuf
          | 1 -> __sedlex_state_70 lexbuf
          | 2 -> __sedlex_state_31 lexbuf
          | 3 -> __sedlex_state_69 lexbuf
          | 4 -> __sedlex_state_47 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_71 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 16;
         (match __sedlex_partition_78 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_72 lexbuf
          | 1 -> __sedlex_state_73 lexbuf
          | 2 -> __sedlex_state_71 lexbuf
          | 3 -> __sedlex_state_77 lexbuf
          | 4 -> __sedlex_state_78 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_72 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 15;
         (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_72 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_73 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 30;
         (match __sedlex_partition_62 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_30 lexbuf
          | 1 -> __sedlex_state_74 lexbuf
          | 2 -> __sedlex_state_47 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_74 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 30;
         (match __sedlex_partition_64 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_30 lexbuf
          | 1 -> __sedlex_state_74 lexbuf
          | 2 -> __sedlex_state_75 lexbuf
          | 3 -> __sedlex_state_47 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_75 =
    function
    | lexbuf ->
        (match __sedlex_partition_33 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_76 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_76 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 30;
         (match __sedlex_partition_64 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_30 lexbuf
          | 1 -> __sedlex_state_76 lexbuf
          | 2 -> __sedlex_state_75 lexbuf
          | 3 -> __sedlex_state_47 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_77 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 15;
         (match __sedlex_partition_79 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_72 lexbuf
          | 1 -> __sedlex_state_73 lexbuf
          | 2 -> __sedlex_state_77 lexbuf
          | 3 -> __sedlex_state_78 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_78 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 15;
         (match __sedlex_partition_63 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_79 lexbuf
          | 1 -> __sedlex_state_72 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_79 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 15;
         (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_79 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_80 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 30;
         (match __sedlex_partition_79 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_30 lexbuf
          | 1 -> __sedlex_state_73 lexbuf
          | 2 -> __sedlex_state_80 lexbuf
          | 3 -> __sedlex_state_81 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_81 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 28;
         (match __sedlex_partition_63 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_82 lexbuf
          | 1 -> __sedlex_state_30 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_82 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 26;
         (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_82 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_83 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 29;
         (match __sedlex_partition_80 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_30 lexbuf
          | 1 -> __sedlex_state_84 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_84 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 10;
         (match __sedlex_partition_81 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_85 lexbuf
          | 1 -> __sedlex_state_84 lexbuf
          | 2 -> __sedlex_state_86 lexbuf
          | 3 -> __sedlex_state_91 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_85 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 9;
         (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_85 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_86 =
    function
    | lexbuf ->
        (match __sedlex_partition_26 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_87 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_87 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 10;
         (match __sedlex_partition_81 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_88 lexbuf
          | 1 -> __sedlex_state_87 lexbuf
          | 2 -> __sedlex_state_86 lexbuf
          | 3 -> __sedlex_state_89 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_88 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 9;
         (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_88 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_89 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 8;
         (match __sedlex_partition_63 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_90 lexbuf
          | 1 -> __sedlex_state_88 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_90 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 7;
         (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_90 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_91 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 8;
         (match __sedlex_partition_63 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_92 lexbuf
          | 1 -> __sedlex_state_85 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_92 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 7;
         (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_92 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_93 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 29;
         (match __sedlex_partition_82 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_30 lexbuf
          | 1 -> __sedlex_state_94 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_94 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 14;
         (match __sedlex_partition_83 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_95 lexbuf
          | 1 -> __sedlex_state_94 lexbuf
          | 2 -> __sedlex_state_96 lexbuf
          | 3 -> __sedlex_state_101 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_95 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 13;
         (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_95 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_96 =
    function
    | lexbuf ->
        (match __sedlex_partition_17 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_97 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_97 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 14;
         (match __sedlex_partition_83 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_98 lexbuf
          | 1 -> __sedlex_state_97 lexbuf
          | 2 -> __sedlex_state_96 lexbuf
          | 3 -> __sedlex_state_99 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_98 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 13;
         (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_98 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_99 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 12;
         (match __sedlex_partition_63 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_100 lexbuf
          | 1 -> __sedlex_state_98 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_100 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 11;
         (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_100 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_101 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 12;
         (match __sedlex_partition_63 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_102 lexbuf
          | 1 -> __sedlex_state_95 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_102 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 11;
         (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_102 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_103 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 29;
         (match __sedlex_partition_84 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_30 lexbuf
          | 1 -> __sedlex_state_104 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_104 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 20;
         (match __sedlex_partition_85 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_105 lexbuf
          | 1 -> __sedlex_state_104 lexbuf
          | 2 -> __sedlex_state_106 lexbuf
          | 3 -> __sedlex_state_111 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_105 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 19;
         (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_105 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_106 =
    function
    | lexbuf ->
        (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_107 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_107 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 20;
         (match __sedlex_partition_85 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_108 lexbuf
          | 1 -> __sedlex_state_107 lexbuf
          | 2 -> __sedlex_state_106 lexbuf
          | 3 -> __sedlex_state_109 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_108 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 19;
         (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_108 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_109 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 18;
         (match __sedlex_partition_63 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_110 lexbuf
          | 1 -> __sedlex_state_108 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_110 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 17;
         (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_110 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_111 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 18;
         (match __sedlex_partition_63 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_112 lexbuf
          | 1 -> __sedlex_state_105 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_112 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 17;
         (match __sedlex_partition_60 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_112 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_113 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 30;
         (match __sedlex_partition_86 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_30 lexbuf
          | 1 -> __sedlex_state_67 lexbuf
          | 2 -> __sedlex_state_114 lexbuf
          | 3 -> __sedlex_state_31 lexbuf
          | 4 -> __sedlex_state_115 lexbuf
          | 5 -> __sedlex_state_81 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_114 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 30;
         (match __sedlex_partition_86 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_30 lexbuf
          | 1 -> __sedlex_state_67 lexbuf
          | 2 -> __sedlex_state_114 lexbuf
          | 3 -> __sedlex_state_31 lexbuf
          | 4 -> __sedlex_state_115 lexbuf
          | 5 -> __sedlex_state_81 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_115 =
    function
    | lexbuf ->
        (match __sedlex_partition_33 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_116 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_116 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 30;
         (match __sedlex_partition_87 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_30 lexbuf
          | 1 -> __sedlex_state_73 lexbuf
          | 2 -> __sedlex_state_116 lexbuf
          | 3 -> __sedlex_state_115 lexbuf
          | 4 -> __sedlex_state_81 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_120 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 51;
         (match __sedlex_partition_126 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 59
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_123 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 46;
         (match __sedlex_partition_58 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 45
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_126 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 67;
         (match __sedlex_partition_2 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_127 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_127 =
    function
    | lexbuf ->
        (match __sedlex_partition_3 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_128 lexbuf
         | 1 -> __sedlex_state_132 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_128 =
    function
    | lexbuf ->
        (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_129 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_129 =
    function
    | lexbuf ->
        (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_130 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_130 =
    function
    | lexbuf ->
        (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> 65
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_132 =
    function
    | lexbuf ->
        (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_133 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_133 =
    function
    | lexbuf ->
        (match __sedlex_partition_5 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_133 lexbuf
         | 1 -> 65
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_135 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 65;
         (match __sedlex_partition_75 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> __sedlex_state_136 lexbuf
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_136 =
    function
    | lexbuf ->
        (match __sedlex_partition_72 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_137 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_137 =
    function
    | lexbuf ->
        (match __sedlex_partition_74 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_138 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_138 =
    function
    | lexbuf ->
        (match __sedlex_partition_75 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_139 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_139 =
    function
    | lexbuf ->
        (match __sedlex_partition_97 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_140 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_140 =
    function
    | lexbuf ->
        (match __sedlex_partition_93 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_141 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_141 =
    function
    | lexbuf ->
        (match __sedlex_partition_127 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> 64
         | 1 -> 63
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_144 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 34;
         (match __sedlex_partition_128 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 36
          | _ -> Sedlexing.backtrack lexbuf))
  and __sedlex_state_146 =
    function
    | lexbuf ->
        (Sedlexing.mark lexbuf 57;
         (match __sedlex_partition_129 (Sedlexing.__private__next_int lexbuf)
          with
          | 0 -> 56
          | 1 -> 37
          | _ -> Sedlexing.backtrack lexbuf)) in
  Sedlexing.start lexbuf;
  (match __sedlex_state_0 lexbuf with
   | 0 -> let env = new_line env lexbuf in Continue env
   | 1 -> Continue env
   | 2 ->
       let start_pos = start_pos_of_lexbuf env lexbuf in
       let buf = Buffer.create 127 in
       let (env, end_pos) = comment env buf lexbuf in
       Comment (env, (mk_comment env start_pos end_pos buf true))
   | 3 ->
       let pattern = lexeme lexbuf in
       if not (is_comment_syntax_enabled env)
       then
         let start_pos = start_pos_of_lexbuf env lexbuf in
         let buf = Buffer.create 127 in
         (Buffer.add_string buf pattern;
          (let (env, end_pos) = comment env buf lexbuf in
           Comment (env, (mk_comment env start_pos end_pos buf true))))
       else
         (let env =
            if is_in_comment_syntax env
            then
              let loc = loc_of_lexbuf env lexbuf in
              unexpected_error env loc pattern
            else env in
          let env = in_comment_syntax true env in
          let len = Sedlexing.lexeme_length lexbuf in
          if
            ((Sedlexing.Utf8.sub_lexeme lexbuf (len - 1) 1) = ":") &&
              ((Sedlexing.Utf8.sub_lexeme lexbuf (len - 2) 1) <> ":")
          then Token (env, T_COLON)
          else Continue env)
   | 4 ->
       if is_in_comment_syntax env
       then let env = in_comment_syntax false env in Continue env
       else
         (Sedlexing.rollback lexbuf;
          (let __sedlex_state_0 =
             function
             | lexbuf ->
                 (match __sedlex_partition_23
                          (Sedlexing.__private__next_int lexbuf)
                  with
                  | 0 -> 0
                  | _ -> Sedlexing.backtrack lexbuf) in
           Sedlexing.start lexbuf;
           (match __sedlex_state_0 lexbuf with
            | 0 -> Token (env, T_MULT)
            | _ -> failwith "expected *")))
   | 5 ->
       let start_pos = start_pos_of_lexbuf env lexbuf in
       let buf = Buffer.create 127 in
       let (env, end_pos) = line_comment env buf lexbuf in
       Comment (env, (mk_comment env start_pos end_pos buf false))
   | 6 ->
       let quote = lexeme lexbuf in
       let start = start_pos_of_lexbuf env lexbuf in
       let buf = Buffer.create 127 in
       let raw = Buffer.create 127 in
       (Buffer.add_string raw quote;
        (let octal = false in
         let (env, _end, octal) = string_quote env quote buf raw octal lexbuf in
         let loc = { Loc.source = (Lex_env.source env); start; _end } in
         Token
           (env,
             (T_STRING
                (loc, (Buffer.contents buf), (Buffer.contents raw), octal)))))
   | 7 ->
       recover env lexbuf
         ~f:(fun env ->
               fun lexbuf ->
                 let rec __sedlex_state_0 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_24
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_1 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_1 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_25
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_2 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_2 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_26
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_3 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_3 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_27
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_3 lexbuf
                        | 1 -> __sedlex_state_4 lexbuf
                        | 2 -> 0
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_4 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_26
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_5 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_5 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_27
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_5 lexbuf
                        | 1 -> __sedlex_state_4 lexbuf
                        | 2 -> 0
                        | _ -> Sedlexing.backtrack lexbuf) in
                 Sedlexing.start lexbuf;
                 (match __sedlex_state_0 lexbuf with
                  | 0 ->
                      let num = Sedlexing.lexeme lexbuf in
                      Token (env, (mk_bignum_singleton BIG_BINARY num))
                  | _ -> failwith "unreachable type_token bigbigint"))
   | 8 ->
       let num = Sedlexing.lexeme lexbuf in
       Token (env, (mk_bignum_singleton BIG_BINARY num))
   | 9 ->
       recover env lexbuf
         ~f:(fun env ->
               fun lexbuf ->
                 let rec __sedlex_state_0 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_24
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_1 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_1 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_25
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_2 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_2 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_26
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_3 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_3 =
                   function
                   | lexbuf ->
                       (Sedlexing.mark lexbuf 0;
                        (match __sedlex_partition_28
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_3 lexbuf
                         | 1 -> __sedlex_state_4 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf))
                 and __sedlex_state_4 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_26
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_5 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_5 =
                   function
                   | lexbuf ->
                       (Sedlexing.mark lexbuf 0;
                        (match __sedlex_partition_28
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_5 lexbuf
                         | 1 -> __sedlex_state_4 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)) in
                 Sedlexing.start lexbuf;
                 (match __sedlex_state_0 lexbuf with
                  | 0 ->
                      let num = Sedlexing.lexeme lexbuf in
                      Token (env, (mk_num_singleton BINARY num))
                  | _ -> failwith "unreachable type_token binnumber"))
   | 10 ->
       let num = Sedlexing.lexeme lexbuf in
       Token (env, (mk_num_singleton BINARY num))
   | 11 ->
       recover env lexbuf
         ~f:(fun env ->
               fun lexbuf ->
                 let rec __sedlex_state_0 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_24
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_1 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_1 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_29
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_2 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_2 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_17
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_3 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_3 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_30
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_3 lexbuf
                        | 1 -> __sedlex_state_4 lexbuf
                        | 2 -> 0
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_4 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_17
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_5 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_5 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_30
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_5 lexbuf
                        | 1 -> __sedlex_state_4 lexbuf
                        | 2 -> 0
                        | _ -> Sedlexing.backtrack lexbuf) in
                 Sedlexing.start lexbuf;
                 (match __sedlex_state_0 lexbuf with
                  | 0 ->
                      let num = Sedlexing.lexeme lexbuf in
                      Token (env, (mk_bignum_singleton BIG_OCTAL num))
                  | _ -> failwith "unreachable type_token octbigint"))
   | 12 ->
       let num = Sedlexing.lexeme lexbuf in
       Token (env, (mk_bignum_singleton BIG_OCTAL num))
   | 13 ->
       recover env lexbuf
         ~f:(fun env ->
               fun lexbuf ->
                 let rec __sedlex_state_0 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_24
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_1 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_1 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_29
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_2 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_2 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_17
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_3 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_3 =
                   function
                   | lexbuf ->
                       (Sedlexing.mark lexbuf 0;
                        (match __sedlex_partition_31
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_3 lexbuf
                         | 1 -> __sedlex_state_4 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf))
                 and __sedlex_state_4 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_17
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_5 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_5 =
                   function
                   | lexbuf ->
                       (Sedlexing.mark lexbuf 0;
                        (match __sedlex_partition_31
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_5 lexbuf
                         | 1 -> __sedlex_state_4 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)) in
                 Sedlexing.start lexbuf;
                 (match __sedlex_state_0 lexbuf with
                  | 0 ->
                      let num = Sedlexing.lexeme lexbuf in
                      Token (env, (mk_num_singleton OCTAL num))
                  | _ -> failwith "unreachable type_token octnumber"))
   | 14 ->
       let num = Sedlexing.lexeme lexbuf in
       Token (env, (mk_num_singleton OCTAL num))
   | 15 ->
       recover env lexbuf
         ~f:(fun env ->
               fun lexbuf ->
                 let rec __sedlex_state_0 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_24
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_1 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_1 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_17
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_2 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_2 =
                   function
                   | lexbuf ->
                       (Sedlexing.mark lexbuf 0;
                        (match __sedlex_partition_17
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_2 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)) in
                 Sedlexing.start lexbuf;
                 (match __sedlex_state_0 lexbuf with
                  | 0 ->
                      let num = Sedlexing.lexeme lexbuf in
                      Token (env, (mk_num_singleton LEGACY_OCTAL num))
                  | _ -> failwith "unreachable type_token legacyoctnumber"))
   | 16 ->
       let num = Sedlexing.lexeme lexbuf in
       Token (env, (mk_num_singleton LEGACY_OCTAL num))
   | 17 ->
       recover env lexbuf
         ~f:(fun env ->
               fun lexbuf ->
                 let rec __sedlex_state_0 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_24
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_1 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_1 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_34
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_2 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_2 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_4
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_3 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_3 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_35
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_3 lexbuf
                        | 1 -> __sedlex_state_4 lexbuf
                        | 2 -> 0
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_4 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_4
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_5 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_5 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_35
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_5 lexbuf
                        | 1 -> __sedlex_state_4 lexbuf
                        | 2 -> 0
                        | _ -> Sedlexing.backtrack lexbuf) in
                 Sedlexing.start lexbuf;
                 (match __sedlex_state_0 lexbuf with
                  | 0 ->
                      let num = Sedlexing.lexeme lexbuf in
                      Token (env, (mk_bignum_singleton BIG_NORMAL num))
                  | _ -> failwith "unreachable type_token hexbigint"))
   | 18 ->
       let num = Sedlexing.lexeme lexbuf in
       Token (env, (mk_bignum_singleton BIG_NORMAL num))
   | 19 ->
       recover env lexbuf
         ~f:(fun env ->
               fun lexbuf ->
                 let rec __sedlex_state_0 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_24
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_1 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_1 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_34
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_2 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_2 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_4
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_3 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_3 =
                   function
                   | lexbuf ->
                       (Sedlexing.mark lexbuf 0;
                        (match __sedlex_partition_36
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_3 lexbuf
                         | 1 -> __sedlex_state_4 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf))
                 and __sedlex_state_4 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_4
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_5 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_5 =
                   function
                   | lexbuf ->
                       (Sedlexing.mark lexbuf 0;
                        (match __sedlex_partition_36
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_5 lexbuf
                         | 1 -> __sedlex_state_4 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)) in
                 Sedlexing.start lexbuf;
                 (match __sedlex_state_0 lexbuf with
                  | 0 ->
                      let num = Sedlexing.lexeme lexbuf in
                      Token (env, (mk_num_singleton NORMAL num))
                  | _ -> failwith "unreachable type_token hexnumber"))
   | 20 ->
       let num = Sedlexing.lexeme lexbuf in
       Token (env, (mk_num_singleton NORMAL num))
   | 21 ->
       recover env lexbuf
         ~f:(fun env ->
               fun lexbuf ->
                 let rec __sedlex_state_0 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_37
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_1 lexbuf
                        | 1 -> __sedlex_state_12 lexbuf
                        | 2 -> __sedlex_state_17 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_1 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_33
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_2 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_2 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_38
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_2 lexbuf
                        | 1 -> __sedlex_state_3 lexbuf
                        | 2 -> __sedlex_state_10 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_3 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_39
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_4 lexbuf
                        | 1 -> __sedlex_state_5 lexbuf
                        | 2 -> __sedlex_state_7 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_4 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_40
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_5 lexbuf
                        | 1 -> __sedlex_state_7 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_5 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_41
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_5 lexbuf
                        | 1 -> 0
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_7 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_42
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_7 lexbuf
                        | 1 -> __sedlex_state_8 lexbuf
                        | 2 -> 0
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_8 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_33
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_9 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_9 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_42
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_9 lexbuf
                        | 1 -> __sedlex_state_8 lexbuf
                        | 2 -> 0
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_10 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_33
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_11 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_11 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_38
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_11 lexbuf
                        | 1 -> __sedlex_state_3 lexbuf
                        | 2 -> __sedlex_state_10 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_12 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_43
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_13 lexbuf
                        | 1 -> __sedlex_state_3 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_13 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_44
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_14 lexbuf
                        | 1 -> __sedlex_state_3 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_14 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_38
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_14 lexbuf
                        | 1 -> __sedlex_state_3 lexbuf
                        | 2 -> __sedlex_state_15 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_15 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_33
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_16 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_16 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_38
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_16 lexbuf
                        | 1 -> __sedlex_state_3 lexbuf
                        | 2 -> __sedlex_state_15 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_17 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_45
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_13 lexbuf
                        | 1 -> __sedlex_state_17 lexbuf
                        | 2 -> __sedlex_state_3 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf) in
                 Sedlexing.start lexbuf;
                 (match __sedlex_state_0 lexbuf with
                  | 0 ->
                      let num = Sedlexing.lexeme lexbuf in
                      let loc = loc_of_lexbuf env lexbuf in
                      let env =
                        lex_error env loc Parse_error.InvalidSciBigInt in
                      Token (env, (mk_bignum_singleton BIG_NORMAL num))
                  | _ -> failwith "unreachable type_token scibigint"))
   | 22 ->
       let num = Sedlexing.lexeme lexbuf in
       let loc = loc_of_lexbuf env lexbuf in
       let env = lex_error env loc Parse_error.InvalidSciBigInt in
       Token (env, (mk_bignum_singleton BIG_NORMAL num))
   | 23 ->
       recover env lexbuf
         ~f:(fun env ->
               fun lexbuf ->
                 let rec __sedlex_state_0 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_37
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_1 lexbuf
                        | 1 -> __sedlex_state_11 lexbuf
                        | 2 -> __sedlex_state_16 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_1 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_33
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_2 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_2 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_38
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_2 lexbuf
                        | 1 -> __sedlex_state_3 lexbuf
                        | 2 -> __sedlex_state_9 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_3 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_39
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_4 lexbuf
                        | 1 -> __sedlex_state_5 lexbuf
                        | 2 -> __sedlex_state_6 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_4 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_40
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_5 lexbuf
                        | 1 -> __sedlex_state_6 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_5 =
                   function
                   | lexbuf ->
                       (Sedlexing.mark lexbuf 0;
                        (match __sedlex_partition_33
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_5 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf))
                 and __sedlex_state_6 =
                   function
                   | lexbuf ->
                       (Sedlexing.mark lexbuf 0;
                        (match __sedlex_partition_46
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_6 lexbuf
                         | 1 -> __sedlex_state_7 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf))
                 and __sedlex_state_7 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_33
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_8 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_8 =
                   function
                   | lexbuf ->
                       (Sedlexing.mark lexbuf 0;
                        (match __sedlex_partition_46
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_8 lexbuf
                         | 1 -> __sedlex_state_7 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf))
                 and __sedlex_state_9 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_33
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_10 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_10 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_38
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_10 lexbuf
                        | 1 -> __sedlex_state_3 lexbuf
                        | 2 -> __sedlex_state_9 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_11 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_43
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_12 lexbuf
                        | 1 -> __sedlex_state_3 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_12 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_44
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_13 lexbuf
                        | 1 -> __sedlex_state_3 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_13 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_38
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_13 lexbuf
                        | 1 -> __sedlex_state_3 lexbuf
                        | 2 -> __sedlex_state_14 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_14 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_33
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_15 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_15 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_38
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_15 lexbuf
                        | 1 -> __sedlex_state_3 lexbuf
                        | 2 -> __sedlex_state_14 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_16 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_45
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_12 lexbuf
                        | 1 -> __sedlex_state_16 lexbuf
                        | 2 -> __sedlex_state_3 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf) in
                 Sedlexing.start lexbuf;
                 (match __sedlex_state_0 lexbuf with
                  | 0 ->
                      let num = Sedlexing.lexeme lexbuf in
                      Token (env, (mk_num_singleton NORMAL num))
                  | _ -> failwith "unreachable type_token scinumber"))
   | 24 ->
       let num = Sedlexing.lexeme lexbuf in
       Token (env, (mk_num_singleton NORMAL num))
   | 25 ->
       recover env lexbuf
         ~f:(fun env ->
               fun lexbuf ->
                 let rec __sedlex_state_0 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_37
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_1 lexbuf
                        | 1 -> __sedlex_state_6 lexbuf
                        | 2 -> __sedlex_state_8 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_1 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_33
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_2 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_2 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_42
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_2 lexbuf
                        | 1 -> __sedlex_state_3 lexbuf
                        | 2 -> 0
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_3 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_33
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_4 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_4 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_42
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_4 lexbuf
                        | 1 -> __sedlex_state_3 lexbuf
                        | 2 -> 0
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_6 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_47
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_7 lexbuf
                        | 1 -> __sedlex_state_6 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_7 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_41
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_2 lexbuf
                        | 1 -> 0
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_8 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_48
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_7 lexbuf
                        | 1 -> __sedlex_state_8 lexbuf
                        | 2 -> __sedlex_state_9 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_9 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_33
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_10 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_10 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_48
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_7 lexbuf
                        | 1 -> __sedlex_state_10 lexbuf
                        | 2 -> __sedlex_state_9 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf) in
                 Sedlexing.start lexbuf;
                 (match __sedlex_state_0 lexbuf with
                  | 0 ->
                      let num = Sedlexing.lexeme lexbuf in
                      let loc = loc_of_lexbuf env lexbuf in
                      let env =
                        lex_error env loc Parse_error.InvalidFloatBigInt in
                      Token (env, (mk_bignum_singleton BIG_NORMAL num))
                  | _ -> failwith "unreachable type_token floatbigint"))
   | 26 ->
       recover env lexbuf
         ~f:(fun env ->
               fun lexbuf ->
                 let rec __sedlex_state_0 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_40
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_1 lexbuf
                        | 1 -> __sedlex_state_3 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_1 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_41
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_1 lexbuf
                        | 1 -> 0
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_3 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_42
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_3 lexbuf
                        | 1 -> __sedlex_state_4 lexbuf
                        | 2 -> 0
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_4 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_33
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_5 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_5 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_42
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_5 lexbuf
                        | 1 -> __sedlex_state_4 lexbuf
                        | 2 -> 0
                        | _ -> Sedlexing.backtrack lexbuf) in
                 Sedlexing.start lexbuf;
                 (match __sedlex_state_0 lexbuf with
                  | 0 ->
                      let num = Sedlexing.lexeme lexbuf in
                      Token (env, (mk_bignum_singleton BIG_NORMAL num))
                  | _ -> failwith "unreachable type_token wholebigint"))
   | 27 ->
       let num = Sedlexing.lexeme lexbuf in
       let loc = loc_of_lexbuf env lexbuf in
       let env = lex_error env loc Parse_error.InvalidFloatBigInt in
       Token (env, (mk_bignum_singleton BIG_NORMAL num))
   | 28 ->
       let num = Sedlexing.lexeme lexbuf in
       Token (env, (mk_bignum_singleton BIG_NORMAL num))
   | 29 ->
       recover env lexbuf
         ~f:(fun env ->
               fun lexbuf ->
                 let rec __sedlex_state_0 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_37
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_1 lexbuf
                        | 1 -> __sedlex_state_5 lexbuf
                        | 2 -> __sedlex_state_7 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_1 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_33
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_2 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_2 =
                   function
                   | lexbuf ->
                       (Sedlexing.mark lexbuf 0;
                        (match __sedlex_partition_46
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_2 lexbuf
                         | 1 -> __sedlex_state_3 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf))
                 and __sedlex_state_3 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_33
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_4 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_4 =
                   function
                   | lexbuf ->
                       (Sedlexing.mark lexbuf 0;
                        (match __sedlex_partition_46
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_4 lexbuf
                         | 1 -> __sedlex_state_3 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf))
                 and __sedlex_state_5 =
                   function
                   | lexbuf ->
                       (Sedlexing.mark lexbuf 0;
                        (match __sedlex_partition_47
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_6 lexbuf
                         | 1 -> __sedlex_state_5 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf))
                 and __sedlex_state_6 =
                   function
                   | lexbuf ->
                       (Sedlexing.mark lexbuf 0;
                        (match __sedlex_partition_33
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_2 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf))
                 and __sedlex_state_7 =
                   function
                   | lexbuf ->
                       (Sedlexing.mark lexbuf 0;
                        (match __sedlex_partition_48
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_6 lexbuf
                         | 1 -> __sedlex_state_7 lexbuf
                         | 2 -> __sedlex_state_8 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf))
                 and __sedlex_state_8 =
                   function
                   | lexbuf ->
                       (match __sedlex_partition_33
                                (Sedlexing.__private__next_int lexbuf)
                        with
                        | 0 -> __sedlex_state_9 lexbuf
                        | _ -> Sedlexing.backtrack lexbuf)
                 and __sedlex_state_9 =
                   function
                   | lexbuf ->
                       (Sedlexing.mark lexbuf 0;
                        (match __sedlex_partition_48
                                 (Sedlexing.__private__next_int lexbuf)
                         with
                         | 0 -> __sedlex_state_6 lexbuf
                         | 1 -> __sedlex_state_9 lexbuf
                         | 2 -> __sedlex_state_8 lexbuf
                         | _ -> Sedlexing.backtrack lexbuf)) in
                 Sedlexing.start lexbuf;
                 (match __sedlex_state_0 lexbuf with
                  | 0 ->
                      let num = Sedlexing.lexeme lexbuf in
                      Token (env, (mk_num_singleton NORMAL num))
                  | _ -> failwith "unreachable type_token wholenumber"))
   | 30 ->
       let num = Sedlexing.lexeme lexbuf in
       Token (env, (mk_num_singleton NORMAL num))
   | 31 -> Token (env, T_CHECKS)
   | 32 -> Token (env, T_LBRACKET)
   | 33 -> Token (env, T_RBRACKET)
   | 34 -> Token (env, T_LCURLY)
   | 35 -> Token (env, T_RCURLY)
   | 36 -> Token (env, T_LCURLYBAR)
   | 37 -> Token (env, T_RCURLYBAR)
   | 38 -> Token (env, T_LPAREN)
   | 39 -> Token (env, T_RPAREN)
   | 40 -> Token (env, T_ELLIPSIS)
   | 41 -> Token (env, T_PERIOD)
   | 42 -> Token (env, T_SEMICOLON)
   | 43 -> Token (env, T_COMMA)
   | 44 -> Token (env, T_COLON)
   | 45 -> Token (env, T_PLING_PERIOD)
   | 46 -> Token (env, T_PLING)
   | 47 -> Token (env, T_LBRACKET)
   | 48 -> Token (env, T_RBRACKET)
   | 49 -> Token (env, T_LESS_THAN)
   | 50 -> Token (env, T_GREATER_THAN)
   | 51 -> Token (env, T_ASSIGN)
   | 52 -> Token (env, T_PLING)
   | 53 -> Token (env, T_MULT)
   | 54 -> Token (env, T_COLON)
   | 55 -> Token (env, T_AND)
   | 56 -> Token (env, T_OR)
   | 57 -> Token (env, T_BIT_OR)
   | 58 -> Token (env, T_BIT_AND)
   | 59 -> Token (env, T_ARROW)
   | 60 -> Token (env, T_ASSIGN)
   | 61 -> Token (env, T_PLUS)
   | 62 -> Token (env, T_MINUS)
   | 63 -> Token (env, T_RENDERS_QUESTION)
   | 64 -> Token (env, T_RENDERS_STAR)
   | 65 ->
       let start_offset = Sedlexing.lexeme_start lexbuf in
       ((loop_id_continues lexbuf) |> ignore;
        (let end_offset = Sedlexing.lexeme_end lexbuf in
         let loc = loc_of_offsets env start_offset end_offset in
         Sedlexing.set_lexeme_start lexbuf start_offset;
         (let raw = Sedlexing.lexeme lexbuf in
          let (env, value) = decode_identifier env raw in
          match value with
          | "any" -> Token (env, T_ANY_TYPE)
          | "bigint" -> Token (env, T_BIGINT_TYPE)
          | "bool" -> Token (env, (T_BOOLEAN_TYPE BOOL))
          | "boolean" -> Token (env, (T_BOOLEAN_TYPE BOOLEAN))
          | "empty" -> Token (env, T_EMPTY_TYPE)
          | "extends" -> Token (env, T_EXTENDS)
          | "false" -> Token (env, T_FALSE)
          | "interface" -> Token (env, T_INTERFACE)
          | "keyof" -> Token (env, T_KEYOF)
          | "mixed" -> Token (env, T_MIXED_TYPE)
          | "never" -> Token (env, T_NEVER_TYPE)
          | "null" -> Token (env, T_NULL)
          | "number" -> Token (env, T_NUMBER_TYPE)
          | "readonly" -> Token (env, T_READONLY)
          | "infer" -> Token (env, T_INFER)
          | "is" -> Token (env, T_IS)
          | "asserts" -> Token (env, T_ASSERTS)
          | "static" -> Token (env, T_STATIC)
          | "string" -> Token (env, T_STRING_TYPE)
          | "symbol" -> Token (env, T_SYMBOL_TYPE)
          | "true" -> Token (env, T_TRUE)
          | "typeof" -> Token (env, T_TYPEOF)
          | "undefined" -> Token (env, T_UNDEFINED_TYPE)
          | "unknown" -> Token (env, T_UNKNOWN_TYPE)
          | "void" -> Token (env, T_VOID_TYPE)
          | _ ->
              Token
                (env,
                  (T_IDENTIFIER
                     { loc; value; raw = (Sedlexing.string_of_utf8 raw) })))))
   | 66 ->
       let env =
         if is_in_comment_syntax env
         then
           let loc = loc_of_lexbuf env lexbuf in
           lex_error env loc Parse_error.UnexpectedEOS
         else env in
       Token (env, T_EOF)
   | 67 -> Token (env, (T_ERROR (lexeme lexbuf)))
   | _ -> failwith "unreachable type_token")
let jsx_child env =
  let start = end_pos_of_lexbuf env env.lex_lb in
  let buf = Buffer.create 127 in
  let raw = Buffer.create 127 in
  let (env, child) = jsx_child env start buf raw env.lex_lb in
  let loc = loc_of_token env child in
  let lex_errors_acc = (env.lex_state).lex_errors_acc in
  if lex_errors_acc = []
  then
    (env,
      {
        Lex_result.lex_token = child;
        lex_loc = loc;
        lex_comments = [];
        lex_errors = []
      })
  else
    ({ env with lex_state = { lex_errors_acc = [] } },
      {
        Lex_result.lex_token = child;
        lex_loc = loc;
        lex_comments = [];
        lex_errors = (List.rev lex_errors_acc)
      })
let wrap f =
  let rec helper comments env =
    match f env env.lex_lb with
    | Token (env, t) ->
        let loc = loc_of_token env t in
        let lex_comments = if comments = [] then [] else List.rev comments in
        let lex_token = t in
        let lex_errors_acc = (env.lex_state).lex_errors_acc in
        if lex_errors_acc = []
        then
          ({ env with lex_last_loc = loc },
            {
              Lex_result.lex_token = lex_token;
              lex_loc = loc;
              lex_comments;
              lex_errors = []
            })
        else
          ({ env with lex_last_loc = loc; lex_state = Lex_env.empty_lex_state
           },
            {
              Lex_result.lex_token = lex_token;
              lex_loc = loc;
              lex_comments;
              lex_errors = (List.rev lex_errors_acc)
            })
    | Comment (env, ((loc, _) as comment)) ->
        let env = { env with lex_last_loc = loc } in
        helper (comment :: comments) env
    | Continue env -> helper comments env in
  fun env -> helper [] env
let regexp = wrap regexp
let jsx_tag = wrap jsx_tag
let template_tail = wrap template_tail
let type_token = wrap type_token
let token = wrap token
let is_valid_identifier_name lexbuf =
  let rec __sedlex_state_0 =
    function
    | lexbuf ->
        (match __sedlex_partition_130 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> 0
         | 1 -> __sedlex_state_2 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_2 =
    function
    | lexbuf ->
        (match __sedlex_partition_2 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_3 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_3 =
    function
    | lexbuf ->
        (match __sedlex_partition_3 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_4 lexbuf
         | 1 -> __sedlex_state_7 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_4 =
    function
    | lexbuf ->
        (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_5 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_5 =
    function
    | lexbuf ->
        (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_6 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_6 =
    function
    | lexbuf ->
        (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> 0
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_7 =
    function
    | lexbuf ->
        (match __sedlex_partition_4 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_8 lexbuf
         | _ -> Sedlexing.backtrack lexbuf)
  and __sedlex_state_8 =
    function
    | lexbuf ->
        (match __sedlex_partition_5 (Sedlexing.__private__next_int lexbuf)
         with
         | 0 -> __sedlex_state_8 lexbuf
         | 1 -> 0
         | _ -> Sedlexing.backtrack lexbuf) in
  Sedlexing.start lexbuf;
  (match __sedlex_state_0 lexbuf with
   | 0 -> loop_id_continues lexbuf
   | _ -> false)

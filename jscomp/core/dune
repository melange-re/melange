(library
 (name melangelib)
 (flags
  (:standard -open Melange_compiler_libs))
 (modules_without_implementation js_op j)
 (libraries ext melange_compiler_libs melange_ffi ppxlib.ast dune-build-info))

(rule
 (target include_dirs.ml)
 (deps include_dirs.dev.ml include_dirs.release.ml)
 (action
  (copy# include_dirs.%{profile}.ml %{target})))

(rule
 (targets js_pass_debug.ml)
 (deps js_pass_debug.cppo.ml)
 (action
  (run cppo %{env:CPPO_FLAGS=} %{deps} -o %{targets})))

(rule
 (targets lam_pass_lets_dce.ml)
 (deps lam_pass_lets_dce.cppo.ml)
 (action
  (run cppo %{env:CPPO_FLAGS=} %{deps} -o %{targets})))

(rule
 (targets lam_util.ml)
 (deps lam_util.cppo.ml)
 (action
  (run cppo %{env:CPPO_FLAGS=} %{deps} -o %{targets})))

(rule
 (targets lam_compile_main.ml)
 (deps lam_compile_main.cppo.ml)
 (action
  (run cppo %{env:CPPO_FLAGS=} %{deps} -o %{targets})))

(rule
 (targets js_record_iter.ml)
 (deps j.mli)
 (action
  (with-stdout-to
   %{targets}
   (run ./gen/gen_traversal.exe --input %{deps} --mode record-iter))))

(rule
 (targets js_record_map.ml)
 (deps j.mli)
 (action
  (with-stdout-to
   %{targets}
   (run ./gen/gen_traversal.exe --input %{deps} --mode record-map))))

(rule
 (targets js_record_fold.ml)
 (deps j.mli)
 (action
  (with-stdout-to
   %{targets}
   (run ./gen/gen_traversal.exe --input %{deps} --mode record-fold))))

(rule
 (targets git_commit.ml)
 (action
  (with-stdout-to
   %{targets}
   (progn
    (bash "echo let version = \\\"$(git rev-parse --verify HEAD)\\\"")
    (bash "echo let short_version = \\\"$(git rev-parse --short HEAD)\\\"")))))

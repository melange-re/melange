;;;;{BSB GENERATED: NO EDIT
(subdir jscomp/runtime/bs_stdlib_mini
(rule
(targets  bs_stdlib_mini.ast)
 (deps (:inputs  bs_stdlib_mini.ml)  ../../../.melange.eobjs/jscomp/runtime/bs_stdlib_mini/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  bs_stdlib_mini.d)
 (deps (:inputs  bs_stdlib_mini.ast bs_stdlib_mini.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-mini -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  bs_stdlib_mini.iast)
 (deps (:inputs  bs_stdlib_mini.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  bs_stdlib_mini.cmi bs_stdlib_mini.cmti)
 (deps (:inputs  bs_stdlib_mini.iast)  (include bs_stdlib_mini.d) bsconfig.json)
(action
  (run melc -I .  -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe  -w a -o bs_stdlib_mini.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  bs_stdlib_mini.cmj bs_stdlib_mini.cmt bs_stdlib_mini.mjs bs_stdlib_mini.js)
 (deps (:inputs  bs_stdlib_mini.ast)  bs_stdlib_mini.cmi (include bs_stdlib_mini.d) bsconfig.json)
(action
  (run melc -bs-read-cmi -I .  -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe  -w a -bs-package-name @melange/runtime-stdlib-mini -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o bs_stdlib_mini.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 
(alias (name mel)(deps  bs_stdlib_mini.mjs bs_stdlib_mini.js)
(enabled_if %{bin-available:melc})))

(subdir .melange.eobjs/jscomp/runtime/bs_stdlib_mini
(rule (write-file .bsbuild MQpCc19zdGRsaWJfbWluaQouCQoxAAowCg==))
)

(subdir jscomp/runtime
(rule
(targets  js.ast)
 (deps (:inputs  js.ml)  ../../.melange.eobjs/jscomp/runtime/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js.d)
 (deps (:inputs  js.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js.cmj js.cmi js.cmt js.mjs js.js)
 (deps (:inputs  js.ast)  (include js.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o js.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml.ast)
 (deps (:inputs  caml.ml)  ../../.melange.eobjs/jscomp/runtime/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml.d)
 (deps (:inputs  caml.ast caml.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml.iast)
 (deps (:inputs  caml.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml.cmi caml.cmti)
 (deps (:inputs  caml.iast)  (include caml.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o caml.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml.cmj caml.cmt caml.mjs caml.js)
 (deps (:inputs  caml.ast)  caml.cmi (include caml.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -bs-read-cmi -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o caml.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  curry.ast)
 (deps (:inputs  curry.ml)  ../../.melange.eobjs/jscomp/runtime/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  curry.d)
 (deps (:inputs  curry.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  curry.cmj curry.cmi curry.cmt curry.mjs curry.js)
 (deps (:inputs  curry.ast)  (include curry.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o curry.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_gc.ast)
 (deps (:inputs  caml_gc.ml)  ../../.melange.eobjs/jscomp/runtime/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_gc.d)
 (deps (:inputs  caml_gc.ast caml_gc.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_gc.iast)
 (deps (:inputs  caml_gc.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_gc.cmi caml_gc.cmti)
 (deps (:inputs  caml_gc.iast)  (include caml_gc.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o caml_gc.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_gc.cmj caml_gc.cmt caml_gc.mjs caml_gc.js)
 (deps (:inputs  caml_gc.ast)  caml_gc.cmi (include caml_gc.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -bs-read-cmi -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o caml_gc.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_io.ast)
 (deps (:inputs  caml_io.ml)  ../../.melange.eobjs/jscomp/runtime/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_io.d)
 (deps (:inputs  caml_io.ast caml_io.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_io.iast)
 (deps (:inputs  caml_io.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_io.cmi caml_io.cmti)
 (deps (:inputs  caml_io.iast)  (include caml_io.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o caml_io.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_io.cmj caml_io.cmt caml_io.mjs caml_io.js)
 (deps (:inputs  caml_io.ast)  caml_io.cmi (include caml_io.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -bs-read-cmi -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o caml_io.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_oo.ast)
 (deps (:inputs  caml_oo.ml)  ../../.melange.eobjs/jscomp/runtime/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_oo.d)
 (deps (:inputs  caml_oo.ast caml_oo.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_oo.iast)
 (deps (:inputs  caml_oo.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_oo.cmi caml_oo.cmti)
 (deps (:inputs  caml_oo.iast)  (include caml_oo.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o caml_oo.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_oo.cmj caml_oo.cmt caml_oo.mjs caml_oo.js)
 (deps (:inputs  caml_oo.ast)  caml_oo.cmi (include caml_oo.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -bs-read-cmi -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o caml_oo.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_md5.ast)
 (deps (:inputs  caml_md5.ml)  ../../.melange.eobjs/jscomp/runtime/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_md5.d)
 (deps (:inputs  caml_md5.ast caml_md5.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_md5.iast)
 (deps (:inputs  caml_md5.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_md5.cmi caml_md5.cmti)
 (deps (:inputs  caml_md5.iast)  (include caml_md5.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o caml_md5.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_md5.cmj caml_md5.cmt caml_md5.mjs caml_md5.js)
 (deps (:inputs  caml_md5.ast)  caml_md5.cmi (include caml_md5.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -bs-read-cmi -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o caml_md5.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_obj.ast)
 (deps (:inputs  caml_obj.ml)  ../../.melange.eobjs/jscomp/runtime/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_obj.d)
 (deps (:inputs  caml_obj.ast caml_obj.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_obj.iast)
 (deps (:inputs  caml_obj.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_obj.cmi caml_obj.cmti)
 (deps (:inputs  caml_obj.iast)  (include caml_obj.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o caml_obj.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_obj.cmj caml_obj.cmt caml_obj.mjs caml_obj.js)
 (deps (:inputs  caml_obj.ast)  caml_obj.cmi (include caml_obj.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -bs-read-cmi -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o caml_obj.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_sys.ast)
 (deps (:inputs  caml_sys.ml)  ../../.melange.eobjs/jscomp/runtime/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_sys.d)
 (deps (:inputs  caml_sys.ast caml_sys.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_sys.iast)
 (deps (:inputs  caml_sys.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_sys.cmi caml_sys.cmti)
 (deps (:inputs  caml_sys.iast)  (include caml_sys.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o caml_sys.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_sys.cmj caml_sys.cmt caml_sys.mjs caml_sys.js)
 (deps (:inputs  caml_sys.ast)  caml_sys.cmi (include caml_sys.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -bs-read-cmi -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o caml_sys.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_hash.ast)
 (deps (:inputs  caml_hash.ml)  ../../.melange.eobjs/jscomp/runtime/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_hash.d)
 (deps (:inputs  caml_hash.ast caml_hash.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_hash.iast)
 (deps (:inputs  caml_hash.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_hash.cmi caml_hash.cmti)
 (deps (:inputs  caml_hash.iast)  (include caml_hash.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o caml_hash.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_hash.cmj caml_hash.cmt caml_hash.mjs caml_hash.js)
 (deps (:inputs  caml_hash.ast)  caml_hash.cmi (include caml_hash.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -bs-read-cmi -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o caml_hash.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_array.ast)
 (deps (:inputs  caml_array.ml)  ../../.melange.eobjs/jscomp/runtime/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_array.d)
 (deps (:inputs  caml_array.ast caml_array.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_array.iast)
 (deps (:inputs  caml_array.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_array.cmi caml_array.cmti)
 (deps (:inputs  caml_array.iast)  (include caml_array.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o caml_array.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_array.cmj caml_array.cmt caml_array.mjs caml_array.js)
 (deps (:inputs  caml_array.ast)  caml_array.cmi (include caml_array.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -bs-read-cmi -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o caml_array.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_bytes.ast)
 (deps (:inputs  caml_bytes.ml)  ../../.melange.eobjs/jscomp/runtime/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_bytes.d)
 (deps (:inputs  caml_bytes.ast caml_bytes.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_bytes.iast)
 (deps (:inputs  caml_bytes.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_bytes.cmi caml_bytes.cmti)
 (deps (:inputs  caml_bytes.iast)  (include caml_bytes.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o caml_bytes.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_bytes.cmj caml_bytes.cmt caml_bytes.mjs caml_bytes.js)
 (deps (:inputs  caml_bytes.ast)  caml_bytes.cmi (include caml_bytes.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -bs-read-cmi -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o caml_bytes.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_float.ast)
 (deps (:inputs  caml_float.ml)  ../../.melange.eobjs/jscomp/runtime/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_float.d)
 (deps (:inputs  caml_float.ast caml_float.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_float.iast)
 (deps (:inputs  caml_float.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_float.cmi caml_float.cmti)
 (deps (:inputs  caml_float.iast)  (include caml_float.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o caml_float.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_float.cmj caml_float.cmt caml_float.mjs caml_float.js)
 (deps (:inputs  caml_float.ast)  caml_float.cmi (include caml_float.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -bs-read-cmi -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o caml_float.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_int32.ast)
 (deps (:inputs  caml_int32.ml)  ../../.melange.eobjs/jscomp/runtime/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_int32.d)
 (deps (:inputs  caml_int32.ast caml_int32.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_int32.iast)
 (deps (:inputs  caml_int32.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_int32.cmi caml_int32.cmti)
 (deps (:inputs  caml_int32.iast)  (include caml_int32.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o caml_int32.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_int32.cmj caml_int32.cmt caml_int32.mjs caml_int32.js)
 (deps (:inputs  caml_int32.ast)  caml_int32.cmi (include caml_int32.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -bs-read-cmi -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o caml_int32.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_int64.ast)
 (deps (:inputs  caml_int64.ml)  ../../.melange.eobjs/jscomp/runtime/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_int64.d)
 (deps (:inputs  caml_int64.ast caml_int64.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_int64.iast)
 (deps (:inputs  caml_int64.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_int64.cmi caml_int64.cmti)
 (deps (:inputs  caml_int64.iast)  (include caml_int64.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o caml_int64.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_int64.cmj caml_int64.cmt caml_int64.mjs caml_int64.js)
 (deps (:inputs  caml_int64.ast)  caml_int64.cmi (include caml_int64.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -bs-read-cmi -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o caml_int64.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_lexer.ast)
 (deps (:inputs  caml_lexer.ml)  ../../.melange.eobjs/jscomp/runtime/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_lexer.d)
 (deps (:inputs  caml_lexer.ast caml_lexer.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_lexer.iast)
 (deps (:inputs  caml_lexer.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_lexer.cmi caml_lexer.cmti)
 (deps (:inputs  caml_lexer.iast)  (include caml_lexer.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o caml_lexer.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_lexer.cmj caml_lexer.cmt caml_lexer.mjs caml_lexer.js)
 (deps (:inputs  caml_lexer.ast)  caml_lexer.cmi (include caml_lexer.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -bs-read-cmi -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o caml_lexer.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_format.ast)
 (deps (:inputs  caml_format.ml)  ../../.melange.eobjs/jscomp/runtime/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_format.d)
 (deps (:inputs  caml_format.ast caml_format.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_format.iast)
 (deps (:inputs  caml_format.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_format.cmi caml_format.cmti)
 (deps (:inputs  caml_format.iast)  (include caml_format.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o caml_format.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_format.cmj caml_format.cmt caml_format.mjs caml_format.js)
 (deps (:inputs  caml_format.ast)  caml_format.cmi (include caml_format.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -bs-read-cmi -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o caml_format.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_module.ast)
 (deps (:inputs  caml_module.ml)  ../../.melange.eobjs/jscomp/runtime/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_module.d)
 (deps (:inputs  caml_module.ast caml_module.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_module.iast)
 (deps (:inputs  caml_module.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_module.cmi caml_module.cmti)
 (deps (:inputs  caml_module.iast)  (include caml_module.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o caml_module.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_module.cmj caml_module.cmt caml_module.mjs caml_module.js)
 (deps (:inputs  caml_module.ast)  caml_module.cmi (include caml_module.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -bs-read-cmi -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o caml_module.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_option.ast)
 (deps (:inputs  caml_option.ml)  ../../.melange.eobjs/jscomp/runtime/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_option.d)
 (deps (:inputs  caml_option.ast caml_option.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_option.iast)
 (deps (:inputs  caml_option.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_option.cmi caml_option.cmti)
 (deps (:inputs  caml_option.iast)  (include caml_option.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o caml_option.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_option.cmj caml_option.cmt caml_option.mjs caml_option.js)
 (deps (:inputs  caml_option.ast)  caml_option.cmi (include caml_option.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -bs-read-cmi -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o caml_option.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_parser.ast)
 (deps (:inputs  caml_parser.ml)  ../../.melange.eobjs/jscomp/runtime/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_parser.d)
 (deps (:inputs  caml_parser.ast caml_parser.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_parser.iast)
 (deps (:inputs  caml_parser.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_parser.cmi caml_parser.cmti)
 (deps (:inputs  caml_parser.iast)  (include caml_parser.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o caml_parser.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_parser.cmj caml_parser.cmt caml_parser.mjs caml_parser.js)
 (deps (:inputs  caml_parser.ast)  caml_parser.cmi (include caml_parser.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -bs-read-cmi -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o caml_parser.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_string.ast)
 (deps (:inputs  caml_string.ml)  ../../.melange.eobjs/jscomp/runtime/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_string.d)
 (deps (:inputs  caml_string.ast caml_string.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_string.iast)
 (deps (:inputs  caml_string.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_string.cmi caml_string.cmti)
 (deps (:inputs  caml_string.iast)  (include caml_string.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o caml_string.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_string.cmj caml_string.cmt caml_string.mjs caml_string.js)
 (deps (:inputs  caml_string.ast)  caml_string.cmi (include caml_string.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -bs-read-cmi -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o caml_string.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_oo_curry.ast)
 (deps (:inputs  caml_oo_curry.ml)  ../../.melange.eobjs/jscomp/runtime/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_oo_curry.d)
 (deps (:inputs  caml_oo_curry.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_oo_curry.cmj caml_oo_curry.cmi caml_oo_curry.cmt caml_oo_curry.mjs caml_oo_curry.js)
 (deps (:inputs  caml_oo_curry.ast)  (include caml_oo_curry.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o caml_oo_curry.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_exceptions.ast)
 (deps (:inputs  caml_exceptions.ml)  ../../.melange.eobjs/jscomp/runtime/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_exceptions.d)
 (deps (:inputs  caml_exceptions.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_exceptions.cmj caml_exceptions.cmi caml_exceptions.cmt caml_exceptions.mjs caml_exceptions.js)
 (deps (:inputs  caml_exceptions.ast)  (include caml_exceptions.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o caml_exceptions.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_splice_call.ast)
 (deps (:inputs  caml_splice_call.ml)  ../../.melange.eobjs/jscomp/runtime/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_splice_call.d)
 (deps (:inputs  caml_splice_call.ast caml_splice_call.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_splice_call.iast)
 (deps (:inputs  caml_splice_call.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_splice_call.cmi caml_splice_call.cmti)
 (deps (:inputs  caml_splice_call.iast)  (include caml_splice_call.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o caml_splice_call.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_splice_call.cmj caml_splice_call.cmt caml_splice_call.mjs caml_splice_call.js)
 (deps (:inputs  caml_splice_call.ast)  caml_splice_call.cmi (include caml_splice_call.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -bs-read-cmi -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o caml_splice_call.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_array_extern.ast)
 (deps (:inputs  caml_array_extern.ml)  ../../.melange.eobjs/jscomp/runtime/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_array_extern.d)
 (deps (:inputs  caml_array_extern.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_array_extern.cmj caml_array_extern.cmi caml_array_extern.cmt caml_array_extern.mjs caml_array_extern.js)
 (deps (:inputs  caml_array_extern.ast)  (include caml_array_extern.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o caml_array_extern.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_float_extern.ast)
 (deps (:inputs  caml_float_extern.ml)  ../../.melange.eobjs/jscomp/runtime/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_float_extern.d)
 (deps (:inputs  caml_float_extern.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_float_extern.cmj caml_float_extern.cmi caml_float_extern.cmt caml_float_extern.mjs caml_float_extern.js)
 (deps (:inputs  caml_float_extern.ast)  (include caml_float_extern.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o caml_float_extern.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_int32_extern.ast)
 (deps (:inputs  caml_int32_extern.ml)  ../../.melange.eobjs/jscomp/runtime/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_int32_extern.d)
 (deps (:inputs  caml_int32_extern.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_int32_extern.cmj caml_int32_extern.cmi caml_int32_extern.cmt caml_int32_extern.mjs caml_int32_extern.js)
 (deps (:inputs  caml_int32_extern.ast)  (include caml_int32_extern.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o caml_int32_extern.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_int64_extern.ast)
 (deps (:inputs  caml_int64_extern.ml)  ../../.melange.eobjs/jscomp/runtime/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_int64_extern.d)
 (deps (:inputs  caml_int64_extern.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_int64_extern.cmj caml_int64_extern.cmi caml_int64_extern.cmt caml_int64_extern.mjs caml_int64_extern.js)
 (deps (:inputs  caml_int64_extern.ast)  (include caml_int64_extern.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o caml_int64_extern.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_js_exceptions.ast)
 (deps (:inputs  caml_js_exceptions.ml)  ../../.melange.eobjs/jscomp/runtime/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_js_exceptions.d)
 (deps (:inputs  caml_js_exceptions.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_js_exceptions.cmj caml_js_exceptions.cmi caml_js_exceptions.cmt caml_js_exceptions.mjs caml_js_exceptions.js)
 (deps (:inputs  caml_js_exceptions.ast)  (include caml_js_exceptions.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o caml_js_exceptions.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_string_extern.ast)
 (deps (:inputs  caml_string_extern.ml)  ../../.melange.eobjs/jscomp/runtime/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_string_extern.d)
 (deps (:inputs  caml_string_extern.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_string_extern.cmj caml_string_extern.cmi caml_string_extern.cmt caml_string_extern.mjs caml_string_extern.js)
 (deps (:inputs  caml_string_extern.ast)  (include caml_string_extern.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o caml_string_extern.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_hash_primitive.ast)
 (deps (:inputs  caml_hash_primitive.ml)  ../../.melange.eobjs/jscomp/runtime/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_hash_primitive.d)
 (deps (:inputs  caml_hash_primitive.ast caml_hash_primitive.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_hash_primitive.iast)
 (deps (:inputs  caml_hash_primitive.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_hash_primitive.cmi caml_hash_primitive.cmti)
 (deps (:inputs  caml_hash_primitive.iast)  (include caml_hash_primitive.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o caml_hash_primitive.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_hash_primitive.cmj caml_hash_primitive.cmt caml_hash_primitive.mjs caml_hash_primitive.js)
 (deps (:inputs  caml_hash_primitive.ast)  caml_hash_primitive.cmi (include caml_hash_primitive.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -bs-read-cmi -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o caml_hash_primitive.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_nativeint_extern.ast)
 (deps (:inputs  caml_nativeint_extern.ml)  ../../.melange.eobjs/jscomp/runtime/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_nativeint_extern.d)
 (deps (:inputs  caml_nativeint_extern.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_nativeint_extern.cmj caml_nativeint_extern.cmi caml_nativeint_extern.cmt caml_nativeint_extern.mjs caml_nativeint_extern.js)
 (deps (:inputs  caml_nativeint_extern.ast)  (include caml_nativeint_extern.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o caml_nativeint_extern.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_undefined_extern.ast)
 (deps (:inputs  caml_undefined_extern.ml)  ../../.melange.eobjs/jscomp/runtime/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_undefined_extern.d)
 (deps (:inputs  caml_undefined_extern.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_undefined_extern.cmj caml_undefined_extern.cmi caml_undefined_extern.cmt caml_undefined_extern.mjs caml_undefined_extern.js)
 (deps (:inputs  caml_undefined_extern.ast)  (include caml_undefined_extern.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o caml_undefined_extern.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_external_polyfill.ast)
 (deps (:inputs  caml_external_polyfill.ml)  ../../.melange.eobjs/jscomp/runtime/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_external_polyfill.d)
 (deps (:inputs  caml_external_polyfill.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  caml_external_polyfill.cmj caml_external_polyfill.cmi caml_external_polyfill.cmt caml_external_polyfill.mjs caml_external_polyfill.js)
 (deps (:inputs  caml_external_polyfill.ast)  (include caml_external_polyfill.d) bsconfig.json(alias bs_stdlib_mini/mel))
(action
  (run melc -I . -I bs_stdlib_mini -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o caml_external_polyfill.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 
(alias (name mel)(deps  caml_external_polyfill.mjs caml_external_polyfill.js caml_undefined_extern.mjs caml_undefined_extern.js caml_nativeint_extern.mjs caml_nativeint_extern.js caml_hash_primitive.mjs caml_hash_primitive.js caml_string_extern.mjs caml_string_extern.js caml_js_exceptions.mjs caml_js_exceptions.js caml_int64_extern.mjs caml_int64_extern.js caml_int32_extern.mjs caml_int32_extern.js caml_float_extern.mjs caml_float_extern.js caml_array_extern.mjs caml_array_extern.js caml_splice_call.mjs caml_splice_call.js caml_exceptions.mjs caml_exceptions.js caml_oo_curry.mjs caml_oo_curry.js caml_string.mjs caml_string.js caml_parser.mjs caml_parser.js caml_option.mjs caml_option.js caml_module.mjs caml_module.js caml_format.mjs caml_format.js caml_lexer.mjs caml_lexer.js caml_int64.mjs caml_int64.js caml_int32.mjs caml_int32.js caml_float.mjs caml_float.js caml_bytes.mjs caml_bytes.js caml_array.mjs caml_array.js caml_hash.mjs caml_hash.js caml_sys.mjs caml_sys.js caml_obj.mjs caml_obj.js caml_md5.mjs caml_md5.js caml_oo.mjs caml_oo.js caml_io.mjs caml_io.js caml_gc.mjs caml_gc.js curry.mjs curry.js caml.mjs caml.js js.mjs js.js)
(enabled_if %{bin-available:melc})))

(subdir .melange.eobjs/jscomp/runtime
(rule (write-file .bsbuild MzQKSnMKQ2FtbApDdXJyeQpDYW1sX2djCkNhbWxfaW8KQ2FtbF9vbwpDYW1sX21kNQpDYW1sX29iagpDYW1sX3N5cwpDYW1sX2hhc2gKQ2FtbF9hcnJheQpDYW1sX2J5dGVzCkNhbWxfZmxvYXQKQ2FtbF9pbnQzMgpDYW1sX2ludDY0CkNhbWxfbGV4ZXIKQ2FtbF9mb3JtYXQKQ2FtbF9tb2R1bGUKQ2FtbF9vcHRpb24KQ2FtbF9wYXJzZXIKQ2FtbF9zdHJpbmcKQ2FtbF9vb19jdXJyeQpDYW1sX2V4Y2VwdGlvbnMKQ2FtbF9zcGxpY2VfY2FsbApDYW1sX2FycmF5X2V4dGVybgpDYW1sX2Zsb2F0X2V4dGVybgpDYW1sX2ludDMyX2V4dGVybgpDYW1sX2ludDY0X2V4dGVybgpDYW1sX2pzX2V4Y2VwdGlvbnMKQ2FtbF9zdHJpbmdfZXh0ZXJuCkNhbWxfaGFzaF9wcmltaXRpdmUKQ2FtbF9uYXRpdmVpbnRfZXh0ZXJuCkNhbWxfdW5kZWZpbmVkX2V4dGVybgpDYW1sX2V4dGVybmFsX3BvbHlmaWxsCi4JCjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACjAK))
)

(subdir jscomp/others
(rule
(targets  js_typed_array2.ml)
 (deps (:inputs  js_typed_array2.cppo.ml) )
(action (system "cppo %{inputs} -o %{targets}"))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_typed_array.ml)
 (deps (:inputs  js_typed_array.cppo.ml) )
(action (system "cppo %{inputs} -o %{targets}"))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalSetInt.ml)
 (deps (:inputs  internal_set.cppo.ml) )
(action (system "cppo -D TYPE_INT %{inputs} -o %{targets}"))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalSetString.ml)
 (deps (:inputs  internal_set.cppo.ml) )
(action (system "cppo -D TYPE_STRING %{inputs} -o %{targets}"))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalMapInt.ml)
 (deps (:inputs  internal_map.cppo.ml) )
(action (system "cppo -D TYPE_INT %{inputs} -o %{targets}"))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalMapString.ml)
 (deps (:inputs  internal_map.cppo.ml) )
(action (system "cppo -D TYPE_STRING %{inputs} -o %{targets}"))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SortArrayInt.mli)
 (deps (:inputs  sort.cppo.mli) )
(action (system "cppo -D TYPE_INT %{inputs} -o %{targets}"))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SortArrayInt.ml)
 (deps (:inputs  sort.cppo.ml) )
(action (system "cppo -D TYPE_INT %{inputs} -o %{targets}"))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SortArrayString.mli)
 (deps (:inputs  sort.cppo.mli) )
(action (system "cppo -D TYPE_STRING %{inputs} -o %{targets}"))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SortArrayString.ml)
 (deps (:inputs  sort.cppo.ml) )
(action (system "cppo -D TYPE_STRING %{inputs} -o %{targets}"))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableSetInt.mli)
 (deps (:inputs  setm.cppo.mli) )
(action (system "cppo -D TYPE_INT %{inputs} -o %{targets}"))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableSetInt.ml)
 (deps (:inputs  setm.cppo.ml) )
(action (system "cppo -D TYPE_INT %{inputs} -o %{targets}"))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableSetString.mli)
 (deps (:inputs  setm.cppo.mli) )
(action (system "cppo -D TYPE_STRING %{inputs} -o %{targets}"))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableSetString.ml)
 (deps (:inputs  setm.cppo.ml) )
(action (system "cppo -D TYPE_STRING %{inputs} -o %{targets}"))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableMapInt.mli)
 (deps (:inputs  mapm.cppo.mli) )
(action (system "cppo -D TYPE_INT %{inputs} -o %{targets}"))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableMapInt.ml)
 (deps (:inputs  mapm.cppo.ml) )
(action (system "cppo -D TYPE_INT %{inputs} -o %{targets}"))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableMapString.mli)
 (deps (:inputs  mapm.cppo.mli) )
(action (system "cppo -D TYPE_STRING %{inputs} -o %{targets}"))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableMapString.ml)
 (deps (:inputs  mapm.cppo.ml) )
(action (system "cppo -D TYPE_STRING %{inputs} -o %{targets}"))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SetInt.mli)
 (deps (:inputs  belt_Set.cppo.mli) )
(action (system "cppo -D TYPE_INT %{inputs} -o %{targets}"))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SetInt.ml)
 (deps (:inputs  belt_Set.cppo.ml) )
(action (system "cppo -D TYPE_INT %{inputs} -o %{targets}"))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SetString.mli)
 (deps (:inputs  belt_Set.cppo.mli) )
(action (system "cppo -D TYPE_STRING %{inputs} -o %{targets}"))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SetString.ml)
 (deps (:inputs  belt_Set.cppo.ml) )
(action (system "cppo -D TYPE_STRING %{inputs} -o %{targets}"))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MapInt.mli)
 (deps (:inputs  map.cppo.mli) )
(action (system "cppo -D TYPE_INT %{inputs} -o %{targets}"))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MapInt.ml)
 (deps (:inputs  map.cppo.ml) )
(action (system "cppo -D TYPE_INT %{inputs} -o %{targets}"))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MapString.mli)
 (deps (:inputs  map.cppo.mli) )
(action (system "cppo -D TYPE_STRING %{inputs} -o %{targets}"))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MapString.ml)
 (deps (:inputs  map.cppo.ml) )
(action (system "cppo -D TYPE_STRING %{inputs} -o %{targets}"))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashMapInt.mli)
 (deps (:inputs  hashmap.cppo.mli) )
(action (system "cppo -D TYPE_INT %{inputs} -o %{targets}"))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashMapInt.ml)
 (deps (:inputs  hashmap.cppo.ml) )
(action (system "cppo -D TYPE_INT %{inputs} -o %{targets}"))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashMapString.mli)
 (deps (:inputs  hashmap.cppo.mli) )
(action (system "cppo -D TYPE_STRING %{inputs} -o %{targets}"))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashMapString.ml)
 (deps (:inputs  hashmap.cppo.ml) )
(action (system "cppo -D TYPE_STRING %{inputs} -o %{targets}"))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashSetInt.mli)
 (deps (:inputs  hashset.cppo.mli) )
(action (system "cppo -D TYPE_INT %{inputs} -o %{targets}"))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashSetInt.ml)
 (deps (:inputs  hashset.cppo.ml) )
(action (system "cppo -D TYPE_INT %{inputs} -o %{targets}"))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashSetString.mli)
 (deps (:inputs  hashset.cppo.mli) )
(action (system "cppo -D TYPE_STRING %{inputs} -o %{targets}"))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashSetString.ml)
 (deps (:inputs  hashset.cppo.ml) )
(action (system "cppo -D TYPE_STRING %{inputs} -o %{targets}"))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  dom.ast)
 (deps (:inputs  dom.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  dom.d)
 (deps (:inputs  dom.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  dom.cmj dom.cmi dom.cmt dom.mjs dom.js)
 (deps (:inputs  dom.ast)  (include dom.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o dom.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt.ast)
 (deps (:inputs  belt.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt.d)
 (deps (:inputs  belt.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt.cmj belt.cmi belt.cmt belt.mjs belt.js)
 (deps (:inputs  belt.ast)  (include belt.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  node.ast)
 (deps (:inputs  node.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  node.d)
 (deps (:inputs  node.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  node.cmj node.cmi node.cmt node.mjs node.js)
 (deps (:inputs  node.ast)  (include node.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o node.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_OO.ast)
 (deps (:inputs  js_OO.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_OO.d)
 (deps (:inputs  js_OO.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_OO.cmj js_OO.cmi js_OO.cmt js_OO.mjs js_OO.js)
 (deps (:inputs  js_OO.ast)  (include js_OO.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o js_OO.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_re.ast)
 (deps (:inputs  js_re.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_re.d)
 (deps (:inputs  js_re.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_re.cmj js_re.cmi js_re.cmt js_re.mjs js_re.js)
 (deps (:inputs  js_re.ast)  (include js_re.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o js_re.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_exn.ast)
 (deps (:inputs  js_exn.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_exn.d)
 (deps (:inputs  js_exn.ast js_exn.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_exn.iast)
 (deps (:inputs  js_exn.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_exn.cmi js_exn.cmti)
 (deps (:inputs  js_exn.iast)  (include js_exn.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o js_exn.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_exn.cmj js_exn.cmt js_exn.mjs js_exn.js)
 (deps (:inputs  js_exn.ast)  js_exn.cmi (include js_exn.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o js_exn.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_int.ast)
 (deps (:inputs  js_int.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_int.d)
 (deps (:inputs  js_int.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_int.cmj js_int.cmi js_int.cmt js_int.mjs js_int.js)
 (deps (:inputs  js_int.ast)  (include js_int.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o js_int.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_obj.ast)
 (deps (:inputs  js_obj.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_obj.d)
 (deps (:inputs  js_obj.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_obj.cmj js_obj.cmi js_obj.cmt js_obj.mjs js_obj.js)
 (deps (:inputs  js_obj.ast)  (include js_obj.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o js_obj.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Id.ast)
 (deps (:inputs  belt_Id.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Id.d)
 (deps (:inputs  belt_Id.ast belt_Id.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Id.iast)
 (deps (:inputs  belt_Id.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Id.cmi belt_Id.cmti)
 (deps (:inputs  belt_Id.iast)  (include belt_Id.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_Id.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Id.cmj belt_Id.cmt belt_Id.mjs belt_Id.js)
 (deps (:inputs  belt_Id.ast)  belt_Id.cmi (include belt_Id.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_Id.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_cast.ast)
 (deps (:inputs  js_cast.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_cast.d)
 (deps (:inputs  js_cast.ast js_cast.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_cast.iast)
 (deps (:inputs  js_cast.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_cast.cmi js_cast.cmti)
 (deps (:inputs  js_cast.iast)  (include js_cast.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o js_cast.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_cast.cmj js_cast.cmt js_cast.mjs js_cast.js)
 (deps (:inputs  js_cast.ast)  js_cast.cmi (include js_cast.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o js_cast.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_date.ast)
 (deps (:inputs  js_date.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_date.d)
 (deps (:inputs  js_date.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_date.cmj js_date.cmi js_date.cmt js_date.mjs js_date.js)
 (deps (:inputs  js_date.ast)  (include js_date.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o js_date.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_dict.ast)
 (deps (:inputs  js_dict.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_dict.d)
 (deps (:inputs  js_dict.ast js_dict.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_dict.iast)
 (deps (:inputs  js_dict.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_dict.cmi js_dict.cmti)
 (deps (:inputs  js_dict.iast)  (include js_dict.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o js_dict.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_dict.cmj js_dict.cmt js_dict.mjs js_dict.js)
 (deps (:inputs  js_dict.ast)  js_dict.cmi (include js_dict.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o js_dict.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_json.ast)
 (deps (:inputs  js_json.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_json.d)
 (deps (:inputs  js_json.ast js_json.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_json.iast)
 (deps (:inputs  js_json.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_json.cmi js_json.cmti)
 (deps (:inputs  js_json.iast)  (include js_json.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o js_json.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_json.cmj js_json.cmt js_json.mjs js_json.js)
 (deps (:inputs  js_json.ast)  js_json.cmi (include js_json.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o js_json.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_list.ast)
 (deps (:inputs  js_list.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_list.d)
 (deps (:inputs  js_list.ast js_list.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_list.iast)
 (deps (:inputs  js_list.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_list.cmi js_list.cmti)
 (deps (:inputs  js_list.iast)  (include js_list.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o js_list.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_list.cmj js_list.cmt js_list.mjs js_list.js)
 (deps (:inputs  js_list.ast)  js_list.cmi (include js_list.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o js_list.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_math.ast)
 (deps (:inputs  js_math.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_math.d)
 (deps (:inputs  js_math.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_math.cmj js_math.cmi js_math.cmt js_math.mjs js_math.js)
 (deps (:inputs  js_math.ast)  (include js_math.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o js_math.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_null.ast)
 (deps (:inputs  js_null.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_null.d)
 (deps (:inputs  js_null.ast js_null.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_null.iast)
 (deps (:inputs  js_null.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_null.cmi js_null.cmti)
 (deps (:inputs  js_null.iast)  (include js_null.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o js_null.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_null.cmj js_null.cmt js_null.mjs js_null.js)
 (deps (:inputs  js_null.ast)  js_null.cmi (include js_null.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o js_null.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  node_fs.ast)
 (deps (:inputs  node_fs.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  node_fs.d)
 (deps (:inputs  node_fs.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  node_fs.cmj node_fs.cmi node_fs.cmt node_fs.mjs node_fs.js)
 (deps (:inputs  node_fs.ast)  (include node_fs.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o node_fs.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Int.ast)
 (deps (:inputs  belt_Int.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Int.d)
 (deps (:inputs  belt_Int.ast belt_Int.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Int.iast)
 (deps (:inputs  belt_Int.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Int.cmi belt_Int.cmti)
 (deps (:inputs  belt_Int.iast)  (include belt_Int.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_Int.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Int.cmj belt_Int.cmt belt_Int.mjs belt_Int.js)
 (deps (:inputs  belt_Int.ast)  belt_Int.cmi (include belt_Int.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_Int.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Map.ast)
 (deps (:inputs  belt_Map.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Map.d)
 (deps (:inputs  belt_Map.ast belt_Map.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Map.iast)
 (deps (:inputs  belt_Map.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Map.cmi belt_Map.cmti)
 (deps (:inputs  belt_Map.iast)  (include belt_Map.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_Map.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Map.cmj belt_Map.cmt belt_Map.mjs belt_Map.js)
 (deps (:inputs  belt_Map.ast)  belt_Map.cmi (include belt_Map.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_Map.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Set.ast)
 (deps (:inputs  belt_Set.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Set.d)
 (deps (:inputs  belt_Set.ast belt_Set.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Set.iast)
 (deps (:inputs  belt_Set.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Set.cmi belt_Set.cmti)
 (deps (:inputs  belt_Set.iast)  (include belt_Set.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_Set.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Set.cmj belt_Set.cmt belt_Set.mjs belt_Set.js)
 (deps (:inputs  belt_Set.ast)  belt_Set.cmi (include belt_Set.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_Set.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_array.ast)
 (deps (:inputs  js_array.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_array.d)
 (deps (:inputs  js_array.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_array.cmj js_array.cmi js_array.cmt js_array.mjs js_array.js)
 (deps (:inputs  js_array.ast)  (include js_array.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o js_array.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_float.ast)
 (deps (:inputs  js_float.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_float.d)
 (deps (:inputs  js_float.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_float.cmj js_float.cmi js_float.cmt js_float.mjs js_float.js)
 (deps (:inputs  js_float.ast)  (include js_float.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o js_float.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_types.ast)
 (deps (:inputs  js_types.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_types.d)
 (deps (:inputs  js_types.ast js_types.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_types.iast)
 (deps (:inputs  js_types.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_types.cmi js_types.cmti)
 (deps (:inputs  js_types.iast)  (include js_types.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o js_types.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_types.cmj js_types.cmt js_types.mjs js_types.js)
 (deps (:inputs  js_types.ast)  js_types.cmi (include js_types.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o js_types.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_List.ast)
 (deps (:inputs  belt_List.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_List.d)
 (deps (:inputs  belt_List.ast belt_List.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_List.iast)
 (deps (:inputs  belt_List.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_List.cmi belt_List.cmti)
 (deps (:inputs  belt_List.iast)  (include belt_List.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_List.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_List.cmj belt_List.cmt belt_List.mjs belt_List.js)
 (deps (:inputs  belt_List.ast)  belt_List.cmi (include belt_List.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_List.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_array2.ast)
 (deps (:inputs  js_array2.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_array2.d)
 (deps (:inputs  js_array2.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_array2.cmj js_array2.cmi js_array2.cmt js_array2.mjs js_array2.js)
 (deps (:inputs  js_array2.ast)  (include js_array2.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o js_array2.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_global.ast)
 (deps (:inputs  js_global.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_global.d)
 (deps (:inputs  js_global.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_global.cmj js_global.cmi js_global.cmt js_global.mjs js_global.js)
 (deps (:inputs  js_global.ast)  (include js_global.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o js_global.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_option.ast)
 (deps (:inputs  js_option.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_option.d)
 (deps (:inputs  js_option.ast js_option.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_option.iast)
 (deps (:inputs  js_option.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_option.cmi js_option.cmti)
 (deps (:inputs  js_option.iast)  (include js_option.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o js_option.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_option.cmj js_option.cmt js_option.mjs js_option.js)
 (deps (:inputs  js_option.ast)  js_option.cmi (include js_option.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o js_option.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_result.ast)
 (deps (:inputs  js_result.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_result.d)
 (deps (:inputs  js_result.ast js_result.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_result.iast)
 (deps (:inputs  js_result.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_result.cmi js_result.cmti)
 (deps (:inputs  js_result.iast)  (include js_result.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o js_result.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_result.cmj js_result.cmt js_result.mjs js_result.js)
 (deps (:inputs  js_result.ast)  js_result.cmi (include js_result.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o js_result.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_string.ast)
 (deps (:inputs  js_string.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_string.d)
 (deps (:inputs  js_string.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_string.cmj js_string.cmi js_string.cmt js_string.mjs js_string.js)
 (deps (:inputs  js_string.ast)  (include js_string.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o js_string.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_vector.ast)
 (deps (:inputs  js_vector.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_vector.d)
 (deps (:inputs  js_vector.ast js_vector.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_vector.iast)
 (deps (:inputs  js_vector.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_vector.cmi js_vector.cmti)
 (deps (:inputs  js_vector.iast)  (include js_vector.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o js_vector.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_vector.cmj js_vector.cmt js_vector.mjs js_vector.js)
 (deps (:inputs  js_vector.ast)  js_vector.cmi (include js_vector.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o js_vector.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  node_path.ast)
 (deps (:inputs  node_path.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  node_path.d)
 (deps (:inputs  node_path.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  node_path.cmj node_path.cmi node_path.cmt node_path.mjs node_path.js)
 (deps (:inputs  node_path.ast)  (include node_path.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o node_path.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Array.ast)
 (deps (:inputs  belt_Array.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Array.d)
 (deps (:inputs  belt_Array.ast belt_Array.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Array.iast)
 (deps (:inputs  belt_Array.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Array.cmi belt_Array.cmti)
 (deps (:inputs  belt_Array.iast)  (include belt_Array.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_Array.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Array.cmj belt_Array.cmt belt_Array.mjs belt_Array.js)
 (deps (:inputs  belt_Array.ast)  belt_Array.cmi (include belt_Array.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_Array.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Float.ast)
 (deps (:inputs  belt_Float.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Float.d)
 (deps (:inputs  belt_Float.ast belt_Float.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Float.iast)
 (deps (:inputs  belt_Float.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Float.cmi belt_Float.cmti)
 (deps (:inputs  belt_Float.iast)  (include belt_Float.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_Float.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Float.cmj belt_Float.cmt belt_Float.mjs belt_Float.js)
 (deps (:inputs  belt_Float.ast)  belt_Float.cmi (include belt_Float.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_Float.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Range.ast)
 (deps (:inputs  belt_Range.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Range.d)
 (deps (:inputs  belt_Range.ast belt_Range.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Range.iast)
 (deps (:inputs  belt_Range.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Range.cmi belt_Range.cmti)
 (deps (:inputs  belt_Range.iast)  (include belt_Range.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_Range.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Range.cmj belt_Range.cmt belt_Range.mjs belt_Range.js)
 (deps (:inputs  belt_Range.ast)  belt_Range.cmi (include belt_Range.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_Range.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_console.ast)
 (deps (:inputs  js_console.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_console.d)
 (deps (:inputs  js_console.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_console.cmj js_console.cmi js_console.cmt js_console.mjs js_console.js)
 (deps (:inputs  js_console.ast)  (include js_console.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o js_console.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_promise.ast)
 (deps (:inputs  js_promise.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_promise.d)
 (deps (:inputs  js_promise.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_promise.cmj js_promise.cmi js_promise.cmt js_promise.mjs js_promise.js)
 (deps (:inputs  js_promise.ast)  (include js_promise.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o js_promise.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_string2.ast)
 (deps (:inputs  js_string2.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_string2.d)
 (deps (:inputs  js_string2.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_string2.cmj js_string2.cmi js_string2.cmt js_string2.mjs js_string2.js)
 (deps (:inputs  js_string2.ast)  (include js_string2.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o js_string2.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MapInt.ast)
 (deps (:inputs  belt_MapInt.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MapInt.d)
 (deps (:inputs  belt_MapInt.ast belt_MapInt.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MapInt.iast)
 (deps (:inputs  belt_MapInt.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MapInt.cmi belt_MapInt.cmti)
 (deps (:inputs  belt_MapInt.iast)  (include belt_MapInt.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_MapInt.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MapInt.cmj belt_MapInt.cmt belt_MapInt.mjs belt_MapInt.js)
 (deps (:inputs  belt_MapInt.ast)  belt_MapInt.cmi (include belt_MapInt.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_MapInt.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Option.ast)
 (deps (:inputs  belt_Option.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Option.d)
 (deps (:inputs  belt_Option.ast belt_Option.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Option.iast)
 (deps (:inputs  belt_Option.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Option.cmi belt_Option.cmti)
 (deps (:inputs  belt_Option.iast)  (include belt_Option.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_Option.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Option.cmj belt_Option.cmt belt_Option.mjs belt_Option.js)
 (deps (:inputs  belt_Option.ast)  belt_Option.cmi (include belt_Option.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_Option.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Result.ast)
 (deps (:inputs  belt_Result.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Result.d)
 (deps (:inputs  belt_Result.ast belt_Result.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Result.iast)
 (deps (:inputs  belt_Result.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Result.cmi belt_Result.cmti)
 (deps (:inputs  belt_Result.iast)  (include belt_Result.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_Result.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_Result.cmj belt_Result.cmt belt_Result.mjs belt_Result.js)
 (deps (:inputs  belt_Result.ast)  belt_Result.cmi (include belt_Result.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_Result.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SetInt.ast)
 (deps (:inputs  belt_SetInt.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SetInt.d)
 (deps (:inputs  belt_SetInt.ast belt_SetInt.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SetInt.iast)
 (deps (:inputs  belt_SetInt.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SetInt.cmi belt_SetInt.cmti)
 (deps (:inputs  belt_SetInt.iast)  (include belt_SetInt.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_SetInt.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SetInt.cmj belt_SetInt.cmt belt_SetInt.mjs belt_SetInt.js)
 (deps (:inputs  belt_SetInt.ast)  belt_SetInt.cmi (include belt_SetInt.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_SetInt.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  dom_storage.ast)
 (deps (:inputs  dom_storage.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  dom_storage.d)
 (deps (:inputs  dom_storage.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  dom_storage.cmj dom_storage.cmi dom_storage.cmt dom_storage.mjs dom_storage.js)
 (deps (:inputs  dom_storage.ast)  (include dom_storage.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o dom_storage.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_mapperRt.ast)
 (deps (:inputs  js_mapperRt.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_mapperRt.d)
 (deps (:inputs  js_mapperRt.ast js_mapperRt.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_mapperRt.iast)
 (deps (:inputs  js_mapperRt.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_mapperRt.cmi js_mapperRt.cmti)
 (deps (:inputs  js_mapperRt.iast)  (include js_mapperRt.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o js_mapperRt.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_mapperRt.cmj js_mapperRt.cmt js_mapperRt.mjs js_mapperRt.js)
 (deps (:inputs  js_mapperRt.ast)  js_mapperRt.cmi (include js_mapperRt.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o js_mapperRt.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  node_buffer.ast)
 (deps (:inputs  node_buffer.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  node_buffer.d)
 (deps (:inputs  node_buffer.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  node_buffer.cmj node_buffer.cmi node_buffer.cmt node_buffer.mjs node_buffer.js)
 (deps (:inputs  node_buffer.ast)  (include node_buffer.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o node_buffer.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  node_module.ast)
 (deps (:inputs  node_module.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  node_module.d)
 (deps (:inputs  node_module.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  node_module.cmj node_module.cmi node_module.cmt node_module.mjs node_module.js)
 (deps (:inputs  node_module.ast)  (include node_module.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o node_module.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashMap.ast)
 (deps (:inputs  belt_HashMap.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashMap.d)
 (deps (:inputs  belt_HashMap.ast belt_HashMap.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashMap.iast)
 (deps (:inputs  belt_HashMap.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashMap.cmi belt_HashMap.cmti)
 (deps (:inputs  belt_HashMap.iast)  (include belt_HashMap.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_HashMap.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashMap.cmj belt_HashMap.cmt belt_HashMap.mjs belt_HashMap.js)
 (deps (:inputs  belt_HashMap.ast)  belt_HashMap.cmi (include belt_HashMap.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_HashMap.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashSet.ast)
 (deps (:inputs  belt_HashSet.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashSet.d)
 (deps (:inputs  belt_HashSet.ast belt_HashSet.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashSet.iast)
 (deps (:inputs  belt_HashSet.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashSet.cmi belt_HashSet.cmti)
 (deps (:inputs  belt_HashSet.iast)  (include belt_HashSet.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_HashSet.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashSet.cmj belt_HashSet.cmt belt_HashSet.mjs belt_HashSet.js)
 (deps (:inputs  belt_HashSet.ast)  belt_HashSet.cmi (include belt_HashSet.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_HashSet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MapDict.ast)
 (deps (:inputs  belt_MapDict.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MapDict.d)
 (deps (:inputs  belt_MapDict.ast belt_MapDict.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MapDict.iast)
 (deps (:inputs  belt_MapDict.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MapDict.cmi belt_MapDict.cmti)
 (deps (:inputs  belt_MapDict.iast)  (include belt_MapDict.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_MapDict.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MapDict.cmj belt_MapDict.cmt belt_MapDict.mjs belt_MapDict.js)
 (deps (:inputs  belt_MapDict.ast)  belt_MapDict.cmi (include belt_MapDict.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_MapDict.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SetDict.ast)
 (deps (:inputs  belt_SetDict.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SetDict.d)
 (deps (:inputs  belt_SetDict.ast belt_SetDict.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SetDict.iast)
 (deps (:inputs  belt_SetDict.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SetDict.cmi belt_SetDict.cmti)
 (deps (:inputs  belt_SetDict.iast)  (include belt_SetDict.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_SetDict.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SetDict.cmj belt_SetDict.cmt belt_SetDict.mjs belt_SetDict.js)
 (deps (:inputs  belt_SetDict.ast)  belt_SetDict.cmi (include belt_SetDict.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_SetDict.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  dom_storage2.ast)
 (deps (:inputs  dom_storage2.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  dom_storage2.d)
 (deps (:inputs  dom_storage2.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  dom_storage2.cmj dom_storage2.cmi dom_storage2.cmt dom_storage2.mjs dom_storage2.js)
 (deps (:inputs  dom_storage2.ast)  (include dom_storage2.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o dom_storage2.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_undefined.ast)
 (deps (:inputs  js_undefined.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_undefined.d)
 (deps (:inputs  js_undefined.ast js_undefined.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_undefined.iast)
 (deps (:inputs  js_undefined.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_undefined.cmi js_undefined.cmti)
 (deps (:inputs  js_undefined.iast)  (include js_undefined.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o js_undefined.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_undefined.cmj js_undefined.cmt js_undefined.mjs js_undefined.js)
 (deps (:inputs  js_undefined.ast)  js_undefined.cmi (include js_undefined.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o js_undefined.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  node_process.ast)
 (deps (:inputs  node_process.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  node_process.d)
 (deps (:inputs  node_process.ast node_process.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  node_process.iast)
 (deps (:inputs  node_process.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  node_process.cmi node_process.cmti)
 (deps (:inputs  node_process.iast)  (include node_process.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o node_process.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  node_process.cmj node_process.cmt node_process.mjs node_process.js)
 (deps (:inputs  node_process.ast)  node_process.cmi (include node_process.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o node_process.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MapString.ast)
 (deps (:inputs  belt_MapString.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MapString.d)
 (deps (:inputs  belt_MapString.ast belt_MapString.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MapString.iast)
 (deps (:inputs  belt_MapString.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MapString.cmi belt_MapString.cmti)
 (deps (:inputs  belt_MapString.iast)  (include belt_MapString.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_MapString.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MapString.cmj belt_MapString.cmt belt_MapString.mjs belt_MapString.js)
 (deps (:inputs  belt_MapString.ast)  belt_MapString.cmi (include belt_MapString.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_MapString.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SetString.ast)
 (deps (:inputs  belt_SetString.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SetString.d)
 (deps (:inputs  belt_SetString.ast belt_SetString.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SetString.iast)
 (deps (:inputs  belt_SetString.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SetString.cmi belt_SetString.cmti)
 (deps (:inputs  belt_SetString.iast)  (include belt_SetString.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_SetString.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SetString.cmj belt_SetString.cmt belt_SetString.mjs belt_SetString.js)
 (deps (:inputs  belt_SetString.ast)  belt_SetString.cmi (include belt_SetString.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_SetString.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SortArray.ast)
 (deps (:inputs  belt_SortArray.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SortArray.d)
 (deps (:inputs  belt_SortArray.ast belt_SortArray.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SortArray.iast)
 (deps (:inputs  belt_SortArray.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SortArray.cmi belt_SortArray.cmti)
 (deps (:inputs  belt_SortArray.iast)  (include belt_SortArray.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_SortArray.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SortArray.cmj belt_SortArray.cmt belt_SortArray.mjs belt_SortArray.js)
 (deps (:inputs  belt_SortArray.ast)  belt_SortArray.cmi (include belt_SortArray.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_SortArray.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_typed_array.ast)
 (deps (:inputs  js_typed_array.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_typed_array.d)
 (deps (:inputs  js_typed_array.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_typed_array.cmj js_typed_array.cmi js_typed_array.cmt js_typed_array.mjs js_typed_array.js)
 (deps (:inputs  js_typed_array.ast)  (include js_typed_array.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o js_typed_array.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashMapInt.ast)
 (deps (:inputs  belt_HashMapInt.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashMapInt.d)
 (deps (:inputs  belt_HashMapInt.ast belt_HashMapInt.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashMapInt.iast)
 (deps (:inputs  belt_HashMapInt.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashMapInt.cmi belt_HashMapInt.cmti)
 (deps (:inputs  belt_HashMapInt.iast)  (include belt_HashMapInt.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_HashMapInt.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashMapInt.cmj belt_HashMapInt.cmt belt_HashMapInt.mjs belt_HashMapInt.js)
 (deps (:inputs  belt_HashMapInt.ast)  belt_HashMapInt.cmi (include belt_HashMapInt.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_HashMapInt.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashSetInt.ast)
 (deps (:inputs  belt_HashSetInt.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashSetInt.d)
 (deps (:inputs  belt_HashSetInt.ast belt_HashSetInt.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashSetInt.iast)
 (deps (:inputs  belt_HashSetInt.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashSetInt.cmi belt_HashSetInt.cmti)
 (deps (:inputs  belt_HashSetInt.iast)  (include belt_HashSetInt.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_HashSetInt.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashSetInt.cmj belt_HashSetInt.cmt belt_HashSetInt.mjs belt_HashSetInt.js)
 (deps (:inputs  belt_HashSetInt.ast)  belt_HashSetInt.cmi (include belt_HashSetInt.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_HashSetInt.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableMap.ast)
 (deps (:inputs  belt_MutableMap.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableMap.d)
 (deps (:inputs  belt_MutableMap.ast belt_MutableMap.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableMap.iast)
 (deps (:inputs  belt_MutableMap.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableMap.cmi belt_MutableMap.cmti)
 (deps (:inputs  belt_MutableMap.iast)  (include belt_MutableMap.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_MutableMap.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableMap.cmj belt_MutableMap.cmt belt_MutableMap.mjs belt_MutableMap.js)
 (deps (:inputs  belt_MutableMap.ast)  belt_MutableMap.cmi (include belt_MutableMap.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_MutableMap.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableSet.ast)
 (deps (:inputs  belt_MutableSet.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableSet.d)
 (deps (:inputs  belt_MutableSet.ast belt_MutableSet.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableSet.iast)
 (deps (:inputs  belt_MutableSet.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableSet.cmi belt_MutableSet.cmti)
 (deps (:inputs  belt_MutableSet.iast)  (include belt_MutableSet.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_MutableSet.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableSet.cmj belt_MutableSet.cmt belt_MutableSet.mjs belt_MutableSet.js)
 (deps (:inputs  belt_MutableSet.ast)  belt_MutableSet.cmi (include belt_MutableSet.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_MutableSet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_typed_array2.ast)
 (deps (:inputs  js_typed_array2.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_typed_array2.d)
 (deps (:inputs  js_typed_array2.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_typed_array2.cmj js_typed_array2.cmi js_typed_array2.cmt js_typed_array2.mjs js_typed_array2.js)
 (deps (:inputs  js_typed_array2.ast)  (include js_typed_array2.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o js_typed_array2.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  node__no_aliases.ast)
 (deps (:inputs  node__no_aliases.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  node__no_aliases.d)
 (deps (:inputs  node__no_aliases.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  node__no_aliases.cmj node__no_aliases.cmi node__no_aliases.cmt node__no_aliases.mjs node__no_aliases.js)
 (deps (:inputs  node__no_aliases.ast)  (include node__no_aliases.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o node__no_aliases.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableQueue.ast)
 (deps (:inputs  belt_MutableQueue.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableQueue.d)
 (deps (:inputs  belt_MutableQueue.ast belt_MutableQueue.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableQueue.iast)
 (deps (:inputs  belt_MutableQueue.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableQueue.cmi belt_MutableQueue.cmti)
 (deps (:inputs  belt_MutableQueue.iast)  (include belt_MutableQueue.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_MutableQueue.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableQueue.cmj belt_MutableQueue.cmt belt_MutableQueue.mjs belt_MutableQueue.js)
 (deps (:inputs  belt_MutableQueue.ast)  belt_MutableQueue.cmi (include belt_MutableQueue.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_MutableQueue.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableStack.ast)
 (deps (:inputs  belt_MutableStack.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableStack.d)
 (deps (:inputs  belt_MutableStack.ast belt_MutableStack.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableStack.iast)
 (deps (:inputs  belt_MutableStack.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableStack.cmi belt_MutableStack.cmti)
 (deps (:inputs  belt_MutableStack.iast)  (include belt_MutableStack.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_MutableStack.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableStack.cmj belt_MutableStack.cmt belt_MutableStack.mjs belt_MutableStack.js)
 (deps (:inputs  belt_MutableStack.ast)  belt_MutableStack.cmi (include belt_MutableStack.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_MutableStack.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SortArrayInt.ast)
 (deps (:inputs  belt_SortArrayInt.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SortArrayInt.d)
 (deps (:inputs  belt_SortArrayInt.ast belt_SortArrayInt.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SortArrayInt.iast)
 (deps (:inputs  belt_SortArrayInt.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SortArrayInt.cmi belt_SortArrayInt.cmti)
 (deps (:inputs  belt_SortArrayInt.iast)  (include belt_SortArrayInt.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_SortArrayInt.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SortArrayInt.cmj belt_SortArrayInt.cmt belt_SortArrayInt.mjs belt_SortArrayInt.js)
 (deps (:inputs  belt_SortArrayInt.ast)  belt_SortArrayInt.cmi (include belt_SortArrayInt.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_SortArrayInt.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_null_undefined.ast)
 (deps (:inputs  js_null_undefined.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_null_undefined.d)
 (deps (:inputs  js_null_undefined.ast js_null_undefined.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_null_undefined.iast)
 (deps (:inputs  js_null_undefined.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_null_undefined.cmi js_null_undefined.cmti)
 (deps (:inputs  js_null_undefined.iast)  (include js_null_undefined.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o js_null_undefined.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  js_null_undefined.cmj js_null_undefined.cmt js_null_undefined.mjs js_null_undefined.js)
 (deps (:inputs  js_null_undefined.ast)  js_null_undefined.cmi (include js_null_undefined.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o js_null_undefined.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashMapString.ast)
 (deps (:inputs  belt_HashMapString.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashMapString.d)
 (deps (:inputs  belt_HashMapString.ast belt_HashMapString.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashMapString.iast)
 (deps (:inputs  belt_HashMapString.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashMapString.cmi belt_HashMapString.cmti)
 (deps (:inputs  belt_HashMapString.iast)  (include belt_HashMapString.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_HashMapString.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashMapString.cmj belt_HashMapString.cmt belt_HashMapString.mjs belt_HashMapString.js)
 (deps (:inputs  belt_HashMapString.ast)  belt_HashMapString.cmi (include belt_HashMapString.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_HashMapString.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashSetString.ast)
 (deps (:inputs  belt_HashSetString.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashSetString.d)
 (deps (:inputs  belt_HashSetString.ast belt_HashSetString.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashSetString.iast)
 (deps (:inputs  belt_HashSetString.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashSetString.cmi belt_HashSetString.cmti)
 (deps (:inputs  belt_HashSetString.iast)  (include belt_HashSetString.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_HashSetString.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_HashSetString.cmj belt_HashSetString.cmt belt_HashSetString.mjs belt_HashSetString.js)
 (deps (:inputs  belt_HashSetString.ast)  belt_HashSetString.cmi (include belt_HashSetString.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_HashSetString.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableMapInt.ast)
 (deps (:inputs  belt_MutableMapInt.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableMapInt.d)
 (deps (:inputs  belt_MutableMapInt.ast belt_MutableMapInt.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableMapInt.iast)
 (deps (:inputs  belt_MutableMapInt.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableMapInt.cmi belt_MutableMapInt.cmti)
 (deps (:inputs  belt_MutableMapInt.iast)  (include belt_MutableMapInt.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_MutableMapInt.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableMapInt.cmj belt_MutableMapInt.cmt belt_MutableMapInt.mjs belt_MutableMapInt.js)
 (deps (:inputs  belt_MutableMapInt.ast)  belt_MutableMapInt.cmi (include belt_MutableMapInt.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_MutableMapInt.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableSetInt.ast)
 (deps (:inputs  belt_MutableSetInt.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableSetInt.d)
 (deps (:inputs  belt_MutableSetInt.ast belt_MutableSetInt.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableSetInt.iast)
 (deps (:inputs  belt_MutableSetInt.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableSetInt.cmi belt_MutableSetInt.cmti)
 (deps (:inputs  belt_MutableSetInt.iast)  (include belt_MutableSetInt.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_MutableSetInt.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableSetInt.cmj belt_MutableSetInt.cmt belt_MutableSetInt.mjs belt_MutableSetInt.js)
 (deps (:inputs  belt_MutableSetInt.ast)  belt_MutableSetInt.cmi (include belt_MutableSetInt.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_MutableSetInt.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  node_child_process.ast)
 (deps (:inputs  node_child_process.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  node_child_process.d)
 (deps (:inputs  node_child_process.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  node_child_process.cmj node_child_process.cmi node_child_process.cmt node_child_process.mjs node_child_process.js)
 (deps (:inputs  node_child_process.ast)  (include node_child_process.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o node_child_process.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalAVLset.ast)
 (deps (:inputs  belt_internalAVLset.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalAVLset.d)
 (deps (:inputs  belt_internalAVLset.ast belt_internalAVLset.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalAVLset.iast)
 (deps (:inputs  belt_internalAVLset.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalAVLset.cmi belt_internalAVLset.cmti)
 (deps (:inputs  belt_internalAVLset.iast)  (include belt_internalAVLset.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_internalAVLset.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalAVLset.cmj belt_internalAVLset.cmt belt_internalAVLset.mjs belt_internalAVLset.js)
 (deps (:inputs  belt_internalAVLset.ast)  belt_internalAVLset.cmi (include belt_internalAVLset.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_internalAVLset.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalMapInt.ast)
 (deps (:inputs  belt_internalMapInt.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalMapInt.d)
 (deps (:inputs  belt_internalMapInt.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalMapInt.cmj belt_internalMapInt.cmi belt_internalMapInt.cmt belt_internalMapInt.mjs belt_internalMapInt.js)
 (deps (:inputs  belt_internalMapInt.ast)  (include belt_internalMapInt.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_internalMapInt.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalSetInt.ast)
 (deps (:inputs  belt_internalSetInt.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalSetInt.d)
 (deps (:inputs  belt_internalSetInt.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalSetInt.cmj belt_internalSetInt.cmi belt_internalSetInt.cmt belt_internalSetInt.mjs belt_internalSetInt.js)
 (deps (:inputs  belt_internalSetInt.ast)  (include belt_internalSetInt.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_internalSetInt.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SortArrayString.ast)
 (deps (:inputs  belt_SortArrayString.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SortArrayString.d)
 (deps (:inputs  belt_SortArrayString.ast belt_SortArrayString.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SortArrayString.iast)
 (deps (:inputs  belt_SortArrayString.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SortArrayString.cmi belt_SortArrayString.cmti)
 (deps (:inputs  belt_SortArrayString.iast)  (include belt_SortArrayString.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_SortArrayString.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_SortArrayString.cmj belt_SortArrayString.cmt belt_SortArrayString.mjs belt_SortArrayString.js)
 (deps (:inputs  belt_SortArrayString.ast)  belt_SortArrayString.cmi (include belt_SortArrayString.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_SortArrayString.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalAVLtree.ast)
 (deps (:inputs  belt_internalAVLtree.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalAVLtree.d)
 (deps (:inputs  belt_internalAVLtree.ast belt_internalAVLtree.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalAVLtree.iast)
 (deps (:inputs  belt_internalAVLtree.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalAVLtree.cmi belt_internalAVLtree.cmti)
 (deps (:inputs  belt_internalAVLtree.iast)  (include belt_internalAVLtree.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_internalAVLtree.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalAVLtree.cmj belt_internalAVLtree.cmt belt_internalAVLtree.mjs belt_internalAVLtree.js)
 (deps (:inputs  belt_internalAVLtree.ast)  belt_internalAVLtree.cmi (include belt_internalAVLtree.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_internalAVLtree.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalBuckets.ast)
 (deps (:inputs  belt_internalBuckets.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalBuckets.d)
 (deps (:inputs  belt_internalBuckets.ast belt_internalBuckets.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalBuckets.iast)
 (deps (:inputs  belt_internalBuckets.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalBuckets.cmi belt_internalBuckets.cmti)
 (deps (:inputs  belt_internalBuckets.iast)  (include belt_internalBuckets.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_internalBuckets.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalBuckets.cmj belt_internalBuckets.cmt belt_internalBuckets.mjs belt_internalBuckets.js)
 (deps (:inputs  belt_internalBuckets.ast)  belt_internalBuckets.cmi (include belt_internalBuckets.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_internalBuckets.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableMapString.ast)
 (deps (:inputs  belt_MutableMapString.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableMapString.d)
 (deps (:inputs  belt_MutableMapString.ast belt_MutableMapString.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableMapString.iast)
 (deps (:inputs  belt_MutableMapString.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableMapString.cmi belt_MutableMapString.cmti)
 (deps (:inputs  belt_MutableMapString.iast)  (include belt_MutableMapString.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_MutableMapString.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableMapString.cmj belt_MutableMapString.cmt belt_MutableMapString.mjs belt_MutableMapString.js)
 (deps (:inputs  belt_MutableMapString.ast)  belt_MutableMapString.cmi (include belt_MutableMapString.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_MutableMapString.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableSetString.ast)
 (deps (:inputs  belt_MutableSetString.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableSetString.d)
 (deps (:inputs  belt_MutableSetString.ast belt_MutableSetString.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableSetString.iast)
 (deps (:inputs  belt_MutableSetString.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableSetString.cmi belt_MutableSetString.cmti)
 (deps (:inputs  belt_MutableSetString.iast)  (include belt_MutableSetString.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_MutableSetString.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_MutableSetString.cmj belt_MutableSetString.cmt belt_MutableSetString.mjs belt_MutableSetString.js)
 (deps (:inputs  belt_MutableSetString.ast)  belt_MutableSetString.cmi (include belt_MutableSetString.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_MutableSetString.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalMapString.ast)
 (deps (:inputs  belt_internalMapString.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalMapString.d)
 (deps (:inputs  belt_internalMapString.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalMapString.cmj belt_internalMapString.cmi belt_internalMapString.cmt belt_internalMapString.mjs belt_internalMapString.js)
 (deps (:inputs  belt_internalMapString.ast)  (include belt_internalMapString.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_internalMapString.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalSetString.ast)
 (deps (:inputs  belt_internalSetString.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalSetString.d)
 (deps (:inputs  belt_internalSetString.ast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalSetString.cmj belt_internalSetString.cmi belt_internalSetString.cmt belt_internalSetString.mjs belt_internalSetString.js)
 (deps (:inputs  belt_internalSetString.ast)  (include belt_internalSetString.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_internalSetString.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalSetBuckets.ast)
 (deps (:inputs  belt_internalSetBuckets.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalSetBuckets.d)
 (deps (:inputs  belt_internalSetBuckets.ast belt_internalSetBuckets.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalSetBuckets.iast)
 (deps (:inputs  belt_internalSetBuckets.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalSetBuckets.cmi belt_internalSetBuckets.cmti)
 (deps (:inputs  belt_internalSetBuckets.iast)  (include belt_internalSetBuckets.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_internalSetBuckets.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalSetBuckets.cmj belt_internalSetBuckets.cmt belt_internalSetBuckets.mjs belt_internalSetBuckets.js)
 (deps (:inputs  belt_internalSetBuckets.ast)  belt_internalSetBuckets.cmi (include belt_internalSetBuckets.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_internalSetBuckets.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalBucketsType.ast)
 (deps (:inputs  belt_internalBucketsType.ml)  ../../.melange.eobjs/jscomp/others/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalBucketsType.d)
 (deps (:inputs  belt_internalBucketsType.ast belt_internalBucketsType.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-others -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalBucketsType.iast)
 (deps (:inputs  belt_internalBucketsType.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalBucketsType.cmi belt_internalBucketsType.cmti)
 (deps (:inputs  belt_internalBucketsType.iast)  (include belt_internalBucketsType.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -o belt_internalBucketsType.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  belt_internalBucketsType.cmj belt_internalBucketsType.cmt belt_internalBucketsType.mjs belt_internalBucketsType.js)
 (deps (:inputs  belt_internalBucketsType.ast)  belt_internalBucketsType.cmi (include belt_internalBucketsType.d) bsconfig.json(alias ../runtime/bs_stdlib_mini/mel)(alias ../runtime/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime/bs_stdlib_mini -I ../runtime -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -bs-cross-module-opt -nopervasives -unsafe -open Bs_stdlib_mini  -w a -bs-package-name @melange/runtime-others -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o belt_internalBucketsType.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 
(alias (name mel)(deps  belt_internalBucketsType.mjs belt_internalBucketsType.js belt_internalSetBuckets.mjs belt_internalSetBuckets.js belt_internalSetString.mjs belt_internalSetString.js belt_internalMapString.mjs belt_internalMapString.js belt_MutableSetString.mjs belt_MutableSetString.js belt_MutableMapString.mjs belt_MutableMapString.js belt_internalBuckets.mjs belt_internalBuckets.js belt_internalAVLtree.mjs belt_internalAVLtree.js belt_SortArrayString.mjs belt_SortArrayString.js belt_internalSetInt.mjs belt_internalSetInt.js belt_internalMapInt.mjs belt_internalMapInt.js belt_internalAVLset.mjs belt_internalAVLset.js node_child_process.mjs node_child_process.js belt_MutableSetInt.mjs belt_MutableSetInt.js belt_MutableMapInt.mjs belt_MutableMapInt.js belt_HashSetString.mjs belt_HashSetString.js belt_HashMapString.mjs belt_HashMapString.js js_null_undefined.mjs js_null_undefined.js belt_SortArrayInt.mjs belt_SortArrayInt.js belt_MutableStack.mjs belt_MutableStack.js belt_MutableQueue.mjs belt_MutableQueue.js node__no_aliases.mjs node__no_aliases.js js_typed_array2.mjs js_typed_array2.js belt_MutableSet.mjs belt_MutableSet.js belt_MutableMap.mjs belt_MutableMap.js belt_HashSetInt.mjs belt_HashSetInt.js belt_HashMapInt.mjs belt_HashMapInt.js js_typed_array.mjs js_typed_array.js belt_SortArray.mjs belt_SortArray.js belt_SetString.mjs belt_SetString.js belt_MapString.mjs belt_MapString.js node_process.mjs node_process.js js_undefined.mjs js_undefined.js dom_storage2.mjs dom_storage2.js belt_SetDict.mjs belt_SetDict.js belt_MapDict.mjs belt_MapDict.js belt_HashSet.mjs belt_HashSet.js belt_HashMap.mjs belt_HashMap.js node_module.mjs node_module.js node_buffer.mjs node_buffer.js js_mapperRt.mjs js_mapperRt.js dom_storage.mjs dom_storage.js belt_SetInt.mjs belt_SetInt.js belt_Result.mjs belt_Result.js belt_Option.mjs belt_Option.js belt_MapInt.mjs belt_MapInt.js js_string2.mjs js_string2.js js_promise.mjs js_promise.js js_console.mjs js_console.js belt_Range.mjs belt_Range.js belt_Float.mjs belt_Float.js belt_Array.mjs belt_Array.js node_path.mjs node_path.js js_vector.mjs js_vector.js js_string.mjs js_string.js js_result.mjs js_result.js js_option.mjs js_option.js js_global.mjs js_global.js js_array2.mjs js_array2.js belt_List.mjs belt_List.js js_types.mjs js_types.js js_float.mjs js_float.js js_array.mjs js_array.js belt_Set.mjs belt_Set.js belt_Map.mjs belt_Map.js belt_Int.mjs belt_Int.js node_fs.mjs node_fs.js js_null.mjs js_null.js js_math.mjs js_math.js js_list.mjs js_list.js js_json.mjs js_json.js js_dict.mjs js_dict.js js_date.mjs js_date.js js_cast.mjs js_cast.js belt_Id.mjs belt_Id.js js_obj.mjs js_obj.js js_int.mjs js_int.js js_exn.mjs js_exn.js js_re.mjs js_re.js js_OO.mjs js_OO.js node.mjs node.js belt.mjs belt.js dom.mjs dom.js)
(enabled_if %{bin-available:melc})))

(subdir .melange.eobjs/jscomp/others
(rule (write-file .bsbuild ODMKRG9tCkJlbHQKTm9kZQpKc19PTwpKc19yZQpKc19leG4KSnNfaW50CkpzX29iagpCZWx0X0lkCkpzX2Nhc3QKSnNfZGF0ZQpKc19kaWN0CkpzX2pzb24KSnNfbGlzdApKc19tYXRoCkpzX251bGwKTm9kZV9mcwpCZWx0X0ludApCZWx0X01hcApCZWx0X1NldApKc19hcnJheQpKc19mbG9hdApKc190eXBlcwpCZWx0X0xpc3QKSnNfYXJyYXkyCkpzX2dsb2JhbApKc19vcHRpb24KSnNfcmVzdWx0CkpzX3N0cmluZwpKc192ZWN0b3IKTm9kZV9wYXRoCkJlbHRfQXJyYXkKQmVsdF9GbG9hdApCZWx0X1JhbmdlCkpzX2NvbnNvbGUKSnNfcHJvbWlzZQpKc19zdHJpbmcyCkJlbHRfTWFwSW50CkJlbHRfT3B0aW9uCkJlbHRfUmVzdWx0CkJlbHRfU2V0SW50CkRvbV9zdG9yYWdlCkpzX21hcHBlclJ0Ck5vZGVfYnVmZmVyCk5vZGVfbW9kdWxlCkJlbHRfSGFzaE1hcApCZWx0X0hhc2hTZXQKQmVsdF9NYXBEaWN0CkJlbHRfU2V0RGljdApEb21fc3RvcmFnZTIKSnNfdW5kZWZpbmVkCk5vZGVfcHJvY2VzcwpCZWx0X01hcFN0cmluZwpCZWx0X1NldFN0cmluZwpCZWx0X1NvcnRBcnJheQpKc190eXBlZF9hcnJheQpCZWx0X0hhc2hNYXBJbnQKQmVsdF9IYXNoU2V0SW50CkJlbHRfTXV0YWJsZU1hcApCZWx0X011dGFibGVTZXQKSnNfdHlwZWRfYXJyYXkyCk5vZGVfX25vX2FsaWFzZXMKQmVsdF9NdXRhYmxlUXVldWUKQmVsdF9NdXRhYmxlU3RhY2sKQmVsdF9Tb3J0QXJyYXlJbnQKSnNfbnVsbF91bmRlZmluZWQKQmVsdF9IYXNoTWFwU3RyaW5nCkJlbHRfSGFzaFNldFN0cmluZwpCZWx0X011dGFibGVNYXBJbnQKQmVsdF9NdXRhYmxlU2V0SW50Ck5vZGVfY2hpbGRfcHJvY2VzcwpCZWx0X2ludGVybmFsQVZMc2V0CkJlbHRfaW50ZXJuYWxNYXBJbnQKQmVsdF9pbnRlcm5hbFNldEludApCZWx0X1NvcnRBcnJheVN0cmluZwpCZWx0X2ludGVybmFsQVZMdHJlZQpCZWx0X2ludGVybmFsQnVja2V0cwpCZWx0X011dGFibGVNYXBTdHJpbmcKQmVsdF9NdXRhYmxlU2V0U3RyaW5nCkJlbHRfaW50ZXJuYWxNYXBTdHJpbmcKQmVsdF9pbnRlcm5hbFNldFN0cmluZwpCZWx0X2ludGVybmFsU2V0QnVja2V0cwpCZWx0X2ludGVybmFsQnVja2V0c1R5cGUKLgkKMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACjAK))
)

(subdir jscomp/stdlib-412
(rule
(targets  stdlib.ast)
 (deps (:inputs  stdlib.ml)  ../../.melange.eobjs/jscomp/stdlib-412/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -nopervasives -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  stdlib.d)
 (deps (:inputs  stdlib.ast stdlib.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-stdlib -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  stdlib.iast)
 (deps (:inputs  stdlib.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -nopervasives -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  stdlib.cmi stdlib.cmti)
 (deps (:inputs  stdlib.iast)  (include stdlib.d) bsconfig.json(alias ../runtime/mel)(alias ../others/mel))
(action
  (run melc -I . -I ../runtime -I ../others -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -nopervasives -bs-cross-module-opt  -w a -o stdlib.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  stdlib.cmj stdlib.cmt stdlib.mjs stdlib.js)
 (deps (:inputs  stdlib.ast)  stdlib.cmi (include stdlib.d) bsconfig.json(alias ../runtime/mel)(alias ../others/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime -I ../others -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -nopervasives -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o stdlib.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  camlinternalAtomic.ast)
 (deps (:inputs  camlinternalAtomic.ml)  ../../.melange.eobjs/jscomp/stdlib-412/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -nopervasives -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  camlinternalAtomic.d)
 (deps (:inputs  camlinternalAtomic.ast camlinternalAtomic.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-stdlib -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  camlinternalAtomic.iast)
 (deps (:inputs  camlinternalAtomic.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -nopervasives -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  camlinternalAtomic.cmi camlinternalAtomic.cmti)
 (deps (:inputs  camlinternalAtomic.iast)  (include camlinternalAtomic.d) bsconfig.json(alias ../runtime/mel)(alias ../others/mel))
(action
  (run melc -I . -I ../runtime -I ../others -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -nopervasives -bs-cross-module-opt  -w a -o camlinternalAtomic.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  camlinternalAtomic.cmj camlinternalAtomic.cmt camlinternalAtomic.mjs camlinternalAtomic.js)
 (deps (:inputs  camlinternalAtomic.ast)  camlinternalAtomic.cmi (include camlinternalAtomic.d) bsconfig.json(alias ../runtime/mel)(alias ../others/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime -I ../others -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -nopervasives -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o camlinternalAtomic.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  camlinternalFormatBasics.ast)
 (deps (:inputs  camlinternalFormatBasics.ml)  ../../.melange.eobjs/jscomp/stdlib-412/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -nopervasives -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  camlinternalFormatBasics.d)
 (deps (:inputs  camlinternalFormatBasics.ast camlinternalFormatBasics.iast) )
(action (run meldep  -root-dir ../.. -p @melange/runtime-stdlib -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  camlinternalFormatBasics.iast)
 (deps (:inputs  camlinternalFormatBasics.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -nopervasives -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  camlinternalFormatBasics.cmi camlinternalFormatBasics.cmti)
 (deps (:inputs  camlinternalFormatBasics.iast)  (include camlinternalFormatBasics.d) bsconfig.json(alias ../runtime/mel)(alias ../others/mel))
(action
  (run melc -I . -I ../runtime -I ../others -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -nopervasives -bs-cross-module-opt  -w a -o camlinternalFormatBasics.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  camlinternalFormatBasics.cmj camlinternalFormatBasics.cmt camlinternalFormatBasics.mjs camlinternalFormatBasics.js)
 (deps (:inputs  camlinternalFormatBasics.ast)  camlinternalFormatBasics.cmi (include camlinternalFormatBasics.d) bsconfig.json(alias ../runtime/mel)(alias ../others/mel))
(action
  (run melc -bs-read-cmi -I . -I ../runtime -I ../others -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -nostdlib -nopervasives -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o camlinternalFormatBasics.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 
(alias (name mel)(deps  camlinternalFormatBasics.mjs camlinternalFormatBasics.js camlinternalAtomic.mjs camlinternalAtomic.js stdlib.mjs stdlib.js)
(enabled_if %{bin-available:melc})))

(subdir .melange.eobjs/jscomp/stdlib-412
(rule (write-file .bsbuild MwpTdGRsaWIKQ2FtbGludGVybmFsQXRvbWljCkNhbWxpbnRlcm5hbEZvcm1hdEJhc2ljcwouCQoxAAAACjAK))
)

(subdir jscomp/stdlib-412/stdlib_modules
(rule
(targets  gc.ast)
 (deps (:inputs  gc.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  gc.d)
 (deps (:inputs  gc.ast gc.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  gc.iast)
 (deps (:inputs  gc.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  gc.cmi gc.cmti)
 (deps (:inputs  gc.iast)  (include gc.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o gc.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  gc.cmj gc.cmt gc.mjs gc.js)
 (deps (:inputs  gc.ast)  gc.cmi (include gc.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o gc.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  oo.ast)
 (deps (:inputs  oo.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  oo.d)
 (deps (:inputs  oo.ast oo.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  oo.iast)
 (deps (:inputs  oo.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  oo.cmi oo.cmti)
 (deps (:inputs  oo.iast)  (include oo.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o oo.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  oo.cmj oo.cmt oo.mjs oo.js)
 (deps (:inputs  oo.ast)  oo.cmi (include oo.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o oo.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  arg.ast)
 (deps (:inputs  arg.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  arg.d)
 (deps (:inputs  arg.ast arg.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  arg.iast)
 (deps (:inputs  arg.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  arg.cmi arg.cmti)
 (deps (:inputs  arg.iast)  (include arg.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o arg.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  arg.cmj arg.cmt arg.mjs arg.js)
 (deps (:inputs  arg.ast)  arg.cmi (include arg.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o arg.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  fun.ast)
 (deps (:inputs  fun.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  fun.d)
 (deps (:inputs  fun.ast fun.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  fun.iast)
 (deps (:inputs  fun.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  fun.cmi fun.cmti)
 (deps (:inputs  fun.iast)  (include fun.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o fun.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  fun.cmj fun.cmt fun.mjs fun.js)
 (deps (:inputs  fun.ast)  fun.cmi (include fun.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o fun.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  int.ast)
 (deps (:inputs  int.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  int.d)
 (deps (:inputs  int.ast int.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  int.iast)
 (deps (:inputs  int.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  int.cmi int.cmti)
 (deps (:inputs  int.iast)  (include int.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o int.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  int.cmj int.cmt int.mjs int.js)
 (deps (:inputs  int.ast)  int.cmi (include int.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o int.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  map.ast)
 (deps (:inputs  map.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  map.d)
 (deps (:inputs  map.ast map.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  map.iast)
 (deps (:inputs  map.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  map.cmi map.cmti)
 (deps (:inputs  map.iast)  (include map.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o map.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  map.cmj map.cmt map.mjs map.js)
 (deps (:inputs  map.ast)  map.cmi (include map.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o map.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  obj.ast)
 (deps (:inputs  obj.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  obj.d)
 (deps (:inputs  obj.ast obj.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  obj.iast)
 (deps (:inputs  obj.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  obj.cmi obj.cmti)
 (deps (:inputs  obj.iast)  (include obj.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o obj.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  obj.cmj obj.cmt obj.mjs obj.js)
 (deps (:inputs  obj.ast)  obj.cmi (include obj.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o obj.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  seq.ast)
 (deps (:inputs  seq.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  seq.d)
 (deps (:inputs  seq.ast seq.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  seq.iast)
 (deps (:inputs  seq.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  seq.cmi seq.cmti)
 (deps (:inputs  seq.iast)  (include seq.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o seq.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  seq.cmj seq.cmt seq.mjs seq.js)
 (deps (:inputs  seq.ast)  seq.cmi (include seq.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o seq.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  set.ast)
 (deps (:inputs  set.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  set.d)
 (deps (:inputs  set.ast set.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  set.iast)
 (deps (:inputs  set.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  set.cmi set.cmti)
 (deps (:inputs  set.iast)  (include set.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o set.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  set.cmj set.cmt set.mjs set.js)
 (deps (:inputs  set.ast)  set.cmi (include set.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o set.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  sys.ast)
 (deps (:inputs  sys.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  sys.d)
 (deps (:inputs  sys.ast sys.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  sys.iast)
 (deps (:inputs  sys.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  sys.cmi sys.cmti)
 (deps (:inputs  sys.iast)  (include sys.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o sys.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  sys.cmj sys.cmt sys.mjs sys.js)
 (deps (:inputs  sys.ast)  sys.cmi (include sys.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o sys.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  bool.ast)
 (deps (:inputs  bool.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  bool.d)
 (deps (:inputs  bool.ast bool.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  bool.iast)
 (deps (:inputs  bool.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  bool.cmi bool.cmti)
 (deps (:inputs  bool.iast)  (include bool.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o bool.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  bool.cmj bool.cmt bool.mjs bool.js)
 (deps (:inputs  bool.ast)  bool.cmi (include bool.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o bool.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  char.ast)
 (deps (:inputs  char.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  char.d)
 (deps (:inputs  char.ast char.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  char.iast)
 (deps (:inputs  char.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  char.cmi char.cmti)
 (deps (:inputs  char.iast)  (include char.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o char.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  char.cmj char.cmt char.mjs char.js)
 (deps (:inputs  char.ast)  char.cmi (include char.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o char.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  lazy.ast)
 (deps (:inputs  lazy.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  lazy.d)
 (deps (:inputs  lazy.ast lazy.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  lazy.iast)
 (deps (:inputs  lazy.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  lazy.cmi lazy.cmti)
 (deps (:inputs  lazy.iast)  (include lazy.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o lazy.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  lazy.cmj lazy.cmt lazy.mjs lazy.js)
 (deps (:inputs  lazy.ast)  lazy.cmi (include lazy.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o lazy.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  list.ast)
 (deps (:inputs  list.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  list.d)
 (deps (:inputs  list.ast list.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  list.iast)
 (deps (:inputs  list.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  list.cmi list.cmti)
 (deps (:inputs  list.iast)  (include list.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o list.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  list.cmj list.cmt list.mjs list.js)
 (deps (:inputs  list.ast)  list.cmi (include list.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o list.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  unit.ast)
 (deps (:inputs  unit.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  unit.d)
 (deps (:inputs  unit.ast unit.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  unit.iast)
 (deps (:inputs  unit.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  unit.cmi unit.cmti)
 (deps (:inputs  unit.iast)  (include unit.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o unit.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  unit.cmj unit.cmt unit.mjs unit.js)
 (deps (:inputs  unit.ast)  unit.cmi (include unit.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o unit.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  weak.ast)
 (deps (:inputs  weak.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  weak.d)
 (deps (:inputs  weak.ast weak.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  weak.iast)
 (deps (:inputs  weak.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  weak.cmi weak.cmti)
 (deps (:inputs  weak.iast)  (include weak.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o weak.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  weak.cmj weak.cmt weak.mjs weak.js)
 (deps (:inputs  weak.ast)  weak.cmi (include weak.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o weak.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  array.ast)
 (deps (:inputs  array.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  array.d)
 (deps (:inputs  array.ast array.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  array.iast)
 (deps (:inputs  array.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  array.cmi array.cmti)
 (deps (:inputs  array.iast)  (include array.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o array.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  array.cmj array.cmt array.mjs array.js)
 (deps (:inputs  array.ast)  array.cmi (include array.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o array.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  bytes.ast)
 (deps (:inputs  bytes.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  bytes.d)
 (deps (:inputs  bytes.ast bytes.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  bytes.iast)
 (deps (:inputs  bytes.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  bytes.cmi bytes.cmti)
 (deps (:inputs  bytes.iast)  (include bytes.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o bytes.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  bytes.cmj bytes.cmt bytes.mjs bytes.js)
 (deps (:inputs  bytes.ast)  bytes.cmi (include bytes.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o bytes.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  float.ast)
 (deps (:inputs  float.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  float.d)
 (deps (:inputs  float.ast float.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  float.iast)
 (deps (:inputs  float.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  float.cmi float.cmti)
 (deps (:inputs  float.iast)  (include float.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o float.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  float.cmj float.cmt float.mjs float.js)
 (deps (:inputs  float.ast)  float.cmi (include float.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o float.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  int32.ast)
 (deps (:inputs  int32.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  int32.d)
 (deps (:inputs  int32.ast int32.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  int32.iast)
 (deps (:inputs  int32.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  int32.cmi int32.cmti)
 (deps (:inputs  int32.iast)  (include int32.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o int32.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  int32.cmj int32.cmt int32.mjs int32.js)
 (deps (:inputs  int32.ast)  int32.cmi (include int32.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o int32.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  int64.ast)
 (deps (:inputs  int64.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  int64.d)
 (deps (:inputs  int64.ast int64.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  int64.iast)
 (deps (:inputs  int64.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  int64.cmi int64.cmti)
 (deps (:inputs  int64.iast)  (include int64.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o int64.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  int64.cmj int64.cmt int64.mjs int64.js)
 (deps (:inputs  int64.ast)  int64.cmi (include int64.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o int64.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  queue.ast)
 (deps (:inputs  queue.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  queue.d)
 (deps (:inputs  queue.ast queue.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  queue.iast)
 (deps (:inputs  queue.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  queue.cmi queue.cmti)
 (deps (:inputs  queue.iast)  (include queue.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o queue.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  queue.cmj queue.cmt queue.mjs queue.js)
 (deps (:inputs  queue.ast)  queue.cmi (include queue.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o queue.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  scanf.ast)
 (deps (:inputs  scanf.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  scanf.d)
 (deps (:inputs  scanf.ast scanf.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  scanf.iast)
 (deps (:inputs  scanf.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  scanf.cmi scanf.cmti)
 (deps (:inputs  scanf.iast)  (include scanf.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o scanf.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  scanf.cmj scanf.cmt scanf.mjs scanf.js)
 (deps (:inputs  scanf.ast)  scanf.cmi (include scanf.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o scanf.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  stack.ast)
 (deps (:inputs  stack.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  stack.d)
 (deps (:inputs  stack.ast stack.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  stack.iast)
 (deps (:inputs  stack.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  stack.cmi stack.cmti)
 (deps (:inputs  stack.iast)  (include stack.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o stack.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  stack.cmj stack.cmt stack.mjs stack.js)
 (deps (:inputs  stack.ast)  stack.cmi (include stack.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o stack.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  uchar.ast)
 (deps (:inputs  uchar.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  uchar.d)
 (deps (:inputs  uchar.ast uchar.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  uchar.iast)
 (deps (:inputs  uchar.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  uchar.cmi uchar.cmti)
 (deps (:inputs  uchar.iast)  (include uchar.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o uchar.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  uchar.cmj uchar.cmt uchar.mjs uchar.js)
 (deps (:inputs  uchar.ast)  uchar.cmi (include uchar.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o uchar.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  atomic.ast)
 (deps (:inputs  atomic.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  atomic.d)
 (deps (:inputs  atomic.ast atomic.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  atomic.iast)
 (deps (:inputs  atomic.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  atomic.cmi atomic.cmti)
 (deps (:inputs  atomic.iast)  (include atomic.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o atomic.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  atomic.cmj atomic.cmt atomic.mjs atomic.js)
 (deps (:inputs  atomic.ast)  atomic.cmi (include atomic.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o atomic.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  buffer.ast)
 (deps (:inputs  buffer.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  buffer.d)
 (deps (:inputs  buffer.ast buffer.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  buffer.iast)
 (deps (:inputs  buffer.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  buffer.cmi buffer.cmti)
 (deps (:inputs  buffer.iast)  (include buffer.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o buffer.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  buffer.cmj buffer.cmt buffer.mjs buffer.js)
 (deps (:inputs  buffer.ast)  buffer.cmi (include buffer.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o buffer.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  digest.ast)
 (deps (:inputs  digest.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  digest.d)
 (deps (:inputs  digest.ast digest.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  digest.iast)
 (deps (:inputs  digest.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  digest.cmi digest.cmti)
 (deps (:inputs  digest.iast)  (include digest.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o digest.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  digest.cmj digest.cmt digest.mjs digest.js)
 (deps (:inputs  digest.ast)  digest.cmi (include digest.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o digest.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  either.ast)
 (deps (:inputs  either.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  either.d)
 (deps (:inputs  either.ast either.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  either.iast)
 (deps (:inputs  either.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  either.cmi either.cmti)
 (deps (:inputs  either.iast)  (include either.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o either.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  either.cmj either.cmt either.mjs either.js)
 (deps (:inputs  either.ast)  either.cmi (include either.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o either.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  format.ast)
 (deps (:inputs  format.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  format.d)
 (deps (:inputs  format.ast format.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  format.iast)
 (deps (:inputs  format.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  format.cmi format.cmti)
 (deps (:inputs  format.iast)  (include format.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o format.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  format.cmj format.cmt format.mjs format.js)
 (deps (:inputs  format.ast)  format.cmi (include format.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o format.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  genlex.ast)
 (deps (:inputs  genlex.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  genlex.d)
 (deps (:inputs  genlex.ast genlex.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  genlex.iast)
 (deps (:inputs  genlex.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  genlex.cmi genlex.cmti)
 (deps (:inputs  genlex.iast)  (include genlex.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o genlex.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  genlex.cmj genlex.cmt genlex.mjs genlex.js)
 (deps (:inputs  genlex.ast)  genlex.cmi (include genlex.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o genlex.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  lexing.ast)
 (deps (:inputs  lexing.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  lexing.d)
 (deps (:inputs  lexing.ast lexing.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  lexing.iast)
 (deps (:inputs  lexing.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  lexing.cmi lexing.cmti)
 (deps (:inputs  lexing.iast)  (include lexing.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o lexing.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  lexing.cmj lexing.cmt lexing.mjs lexing.js)
 (deps (:inputs  lexing.ast)  lexing.cmi (include lexing.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o lexing.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  option.ast)
 (deps (:inputs  option.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  option.d)
 (deps (:inputs  option.ast option.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  option.iast)
 (deps (:inputs  option.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  option.cmi option.cmti)
 (deps (:inputs  option.iast)  (include option.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o option.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  option.cmj option.cmt option.mjs option.js)
 (deps (:inputs  option.ast)  option.cmi (include option.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o option.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  printf.ast)
 (deps (:inputs  printf.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  printf.d)
 (deps (:inputs  printf.ast printf.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  printf.iast)
 (deps (:inputs  printf.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  printf.cmi printf.cmti)
 (deps (:inputs  printf.iast)  (include printf.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o printf.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  printf.cmj printf.cmt printf.mjs printf.js)
 (deps (:inputs  printf.ast)  printf.cmi (include printf.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o printf.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  random.ast)
 (deps (:inputs  random.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  random.d)
 (deps (:inputs  random.ast random.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  random.iast)
 (deps (:inputs  random.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  random.cmi random.cmti)
 (deps (:inputs  random.iast)  (include random.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o random.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  random.cmj random.cmt random.mjs random.js)
 (deps (:inputs  random.ast)  random.cmi (include random.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o random.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  result.ast)
 (deps (:inputs  result.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  result.d)
 (deps (:inputs  result.ast result.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  result.iast)
 (deps (:inputs  result.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  result.cmi result.cmti)
 (deps (:inputs  result.iast)  (include result.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o result.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  result.cmj result.cmt result.mjs result.js)
 (deps (:inputs  result.ast)  result.cmi (include result.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o result.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  stream.ast)
 (deps (:inputs  stream.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  stream.d)
 (deps (:inputs  stream.ast stream.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  stream.iast)
 (deps (:inputs  stream.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  stream.cmi stream.cmti)
 (deps (:inputs  stream.iast)  (include stream.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o stream.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  stream.cmj stream.cmt stream.mjs stream.js)
 (deps (:inputs  stream.ast)  stream.cmi (include stream.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o stream.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  string.ast)
 (deps (:inputs  string.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  string.d)
 (deps (:inputs  string.ast string.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  string.iast)
 (deps (:inputs  string.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  string.cmi string.cmti)
 (deps (:inputs  string.iast)  (include string.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o string.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  string.cmj string.cmt string.mjs string.js)
 (deps (:inputs  string.ast)  string.cmi (include string.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o string.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  complex.ast)
 (deps (:inputs  complex.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  complex.d)
 (deps (:inputs  complex.ast complex.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  complex.iast)
 (deps (:inputs  complex.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  complex.cmi complex.cmti)
 (deps (:inputs  complex.iast)  (include complex.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o complex.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  complex.cmj complex.cmt complex.mjs complex.js)
 (deps (:inputs  complex.ast)  complex.cmi (include complex.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o complex.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  hashtbl.ast)
 (deps (:inputs  hashtbl.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  hashtbl.d)
 (deps (:inputs  hashtbl.ast hashtbl.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  hashtbl.iast)
 (deps (:inputs  hashtbl.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  hashtbl.cmi hashtbl.cmti)
 (deps (:inputs  hashtbl.iast)  (include hashtbl.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o hashtbl.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  hashtbl.cmj hashtbl.cmt hashtbl.mjs hashtbl.js)
 (deps (:inputs  hashtbl.ast)  hashtbl.cmi (include hashtbl.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o hashtbl.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  marshal.ast)
 (deps (:inputs  marshal.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  marshal.d)
 (deps (:inputs  marshal.ast marshal.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  marshal.iast)
 (deps (:inputs  marshal.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  marshal.cmi marshal.cmti)
 (deps (:inputs  marshal.iast)  (include marshal.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o marshal.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  marshal.cmj marshal.cmt marshal.mjs marshal.js)
 (deps (:inputs  marshal.ast)  marshal.cmi (include marshal.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o marshal.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  parsing.ast)
 (deps (:inputs  parsing.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  parsing.d)
 (deps (:inputs  parsing.ast parsing.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  parsing.iast)
 (deps (:inputs  parsing.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  parsing.cmi parsing.cmti)
 (deps (:inputs  parsing.iast)  (include parsing.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o parsing.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  parsing.cmj parsing.cmt parsing.mjs parsing.js)
 (deps (:inputs  parsing.ast)  parsing.cmi (include parsing.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o parsing.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  callback.ast)
 (deps (:inputs  callback.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  callback.d)
 (deps (:inputs  callback.ast callback.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  callback.iast)
 (deps (:inputs  callback.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  callback.cmi callback.cmti)
 (deps (:inputs  callback.iast)  (include callback.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o callback.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  callback.cmj callback.cmt callback.mjs callback.js)
 (deps (:inputs  callback.ast)  callback.cmi (include callback.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o callback.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  filename.ast)
 (deps (:inputs  filename.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  filename.d)
 (deps (:inputs  filename.ast filename.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  filename.iast)
 (deps (:inputs  filename.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  filename.cmi filename.cmti)
 (deps (:inputs  filename.iast)  (include filename.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o filename.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  filename.cmj filename.cmt filename.mjs filename.js)
 (deps (:inputs  filename.ast)  filename.cmi (include filename.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o filename.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  printexc.ast)
 (deps (:inputs  printexc.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  printexc.d)
 (deps (:inputs  printexc.ast printexc.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  printexc.iast)
 (deps (:inputs  printexc.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  printexc.cmi printexc.cmti)
 (deps (:inputs  printexc.iast)  (include printexc.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o printexc.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  printexc.cmj printexc.cmt printexc.mjs printexc.js)
 (deps (:inputs  printexc.ast)  printexc.cmi (include printexc.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o printexc.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  std_exit.ast)
 (deps (:inputs  std_exit.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  std_exit.d)
 (deps (:inputs  std_exit.ast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  std_exit.cmj std_exit.cmi std_exit.cmt std_exit.mjs std_exit.js)
 (deps (:inputs  std_exit.ast)  (include std_exit.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o std_exit.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ephemeron.ast)
 (deps (:inputs  ephemeron.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ephemeron.d)
 (deps (:inputs  ephemeron.ast ephemeron.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ephemeron.iast)
 (deps (:inputs  ephemeron.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ephemeron.cmi ephemeron.cmti)
 (deps (:inputs  ephemeron.iast)  (include ephemeron.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o ephemeron.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ephemeron.cmj ephemeron.cmt ephemeron.mjs ephemeron.js)
 (deps (:inputs  ephemeron.ast)  ephemeron.cmi (include ephemeron.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o ephemeron.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  in_channel.ast)
 (deps (:inputs  in_channel.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  in_channel.d)
 (deps (:inputs  in_channel.ast in_channel.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  in_channel.iast)
 (deps (:inputs  in_channel.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  in_channel.cmi in_channel.cmti)
 (deps (:inputs  in_channel.iast)  (include in_channel.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o in_channel.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  in_channel.cmj in_channel.cmt in_channel.mjs in_channel.js)
 (deps (:inputs  in_channel.ast)  in_channel.cmi (include in_channel.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o in_channel.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  pervasives.ast)
 (deps (:inputs  pervasives.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  pervasives.d)
 (deps (:inputs  pervasives.ast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  pervasives.cmj pervasives.cmi pervasives.cmt pervasives.mjs pervasives.js)
 (deps (:inputs  pervasives.ast)  (include pervasives.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o pervasives.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  out_channel.ast)
 (deps (:inputs  out_channel.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  out_channel.d)
 (deps (:inputs  out_channel.ast out_channel.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  out_channel.iast)
 (deps (:inputs  out_channel.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  out_channel.cmi out_channel.cmti)
 (deps (:inputs  out_channel.iast)  (include out_channel.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o out_channel.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  out_channel.cmj out_channel.cmt out_channel.mjs out_channel.js)
 (deps (:inputs  out_channel.ast)  out_channel.cmi (include out_channel.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o out_channel.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  camlinternalOO.ast)
 (deps (:inputs  camlinternalOO.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  camlinternalOO.d)
 (deps (:inputs  camlinternalOO.ast camlinternalOO.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  camlinternalOO.iast)
 (deps (:inputs  camlinternalOO.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  camlinternalOO.cmi camlinternalOO.cmti)
 (deps (:inputs  camlinternalOO.iast)  (include camlinternalOO.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o camlinternalOO.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  camlinternalOO.cmj camlinternalOO.cmt camlinternalOO.mjs camlinternalOO.js)
 (deps (:inputs  camlinternalOO.ast)  camlinternalOO.cmi (include camlinternalOO.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o camlinternalOO.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  camlinternalMod.ast)
 (deps (:inputs  camlinternalMod.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  camlinternalMod.d)
 (deps (:inputs  camlinternalMod.ast camlinternalMod.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  camlinternalMod.iast)
 (deps (:inputs  camlinternalMod.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  camlinternalMod.cmi camlinternalMod.cmti)
 (deps (:inputs  camlinternalMod.iast)  (include camlinternalMod.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o camlinternalMod.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  camlinternalMod.cmj camlinternalMod.cmt camlinternalMod.mjs camlinternalMod.js)
 (deps (:inputs  camlinternalMod.ast)  camlinternalMod.cmi (include camlinternalMod.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o camlinternalMod.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  camlinternalLazy.ast)
 (deps (:inputs  camlinternalLazy.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  camlinternalLazy.d)
 (deps (:inputs  camlinternalLazy.ast camlinternalLazy.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  camlinternalLazy.iast)
 (deps (:inputs  camlinternalLazy.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  camlinternalLazy.cmi camlinternalLazy.cmti)
 (deps (:inputs  camlinternalLazy.iast)  (include camlinternalLazy.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o camlinternalLazy.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  camlinternalLazy.cmj camlinternalLazy.cmt camlinternalLazy.mjs camlinternalLazy.js)
 (deps (:inputs  camlinternalLazy.ast)  camlinternalLazy.cmi (include camlinternalLazy.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o camlinternalLazy.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  camlinternalFormat.ast)
 (deps (:inputs  camlinternalFormat.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_modules/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  camlinternalFormat.d)
 (deps (:inputs  camlinternalFormat.ast camlinternalFormat.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-modules -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  camlinternalFormat.iast)
 (deps (:inputs  camlinternalFormat.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  camlinternalFormat.cmi camlinternalFormat.cmti)
 (deps (:inputs  camlinternalFormat.iast)  (include camlinternalFormat.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -o camlinternalFormat.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  camlinternalFormat.cmj camlinternalFormat.cmt camlinternalFormat.mjs camlinternalFormat.js)
 (deps (:inputs  camlinternalFormat.ast)  camlinternalFormat.cmi (include camlinternalFormat.d) bsconfig.json(alias ../../runtime/mel)(alias ../../others/mel)(alias ../mel))
(action
  (run melc -bs-read-cmi -I . -I ../../runtime -I ../../others -I .. -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt  -w a -bs-package-name @melange/runtime-stdlib-modules -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o camlinternalFormat.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 
(alias (name mel)(deps  camlinternalFormat.mjs camlinternalFormat.js camlinternalLazy.mjs camlinternalLazy.js camlinternalMod.mjs camlinternalMod.js camlinternalOO.mjs camlinternalOO.js out_channel.mjs out_channel.js pervasives.mjs pervasives.js in_channel.mjs in_channel.js ephemeron.mjs ephemeron.js std_exit.mjs std_exit.js printexc.mjs printexc.js filename.mjs filename.js callback.mjs callback.js parsing.mjs parsing.js marshal.mjs marshal.js hashtbl.mjs hashtbl.js complex.mjs complex.js string.mjs string.js stream.mjs stream.js result.mjs result.js random.mjs random.js printf.mjs printf.js option.mjs option.js lexing.mjs lexing.js genlex.mjs genlex.js format.mjs format.js either.mjs either.js digest.mjs digest.js buffer.mjs buffer.js atomic.mjs atomic.js uchar.mjs uchar.js stack.mjs stack.js scanf.mjs scanf.js queue.mjs queue.js int64.mjs int64.js int32.mjs int32.js float.mjs float.js bytes.mjs bytes.js array.mjs array.js weak.mjs weak.js unit.mjs unit.js list.mjs list.js lazy.mjs lazy.js char.mjs char.js bool.mjs bool.js sys.mjs sys.js set.mjs set.js seq.mjs seq.js obj.mjs obj.js map.mjs map.js int.mjs int.js fun.mjs fun.js arg.mjs arg.js oo.mjs oo.js gc.mjs gc.js)
(enabled_if %{bin-available:melc})))

(subdir .melange.eobjs/jscomp/stdlib-412/stdlib_modules
(rule (write-file .bsbuild NTQKR2MKT28KQXJnCkZ1bgpJbnQKTWFwCk9iagpTZXEKU2V0ClN5cwpCb29sCkNoYXIKTGF6eQpMaXN0ClVuaXQKV2VhawpBcnJheQpCeXRlcwpGbG9hdApJbnQzMgpJbnQ2NApRdWV1ZQpTY2FuZgpTdGFjawpVY2hhcgpBdG9taWMKQnVmZmVyCkRpZ2VzdApFaXRoZXIKRm9ybWF0CkdlbmxleApMZXhpbmcKT3B0aW9uClByaW50ZgpSYW5kb20KUmVzdWx0ClN0cmVhbQpTdHJpbmcKQ29tcGxleApIYXNodGJsCk1hcnNoYWwKUGFyc2luZwpDYWxsYmFjawpGaWxlbmFtZQpQcmludGV4YwpTdGRfZXhpdApFcGhlbWVyb24KSW5fY2hhbm5lbApQZXJ2YXNpdmVzCk91dF9jaGFubmVsCkNhbWxpbnRlcm5hbE9PCkNhbWxpbnRlcm5hbE1vZApDYW1saW50ZXJuYWxMYXp5CkNhbWxpbnRlcm5hbEZvcm1hdAouCQoxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACjAK))
)

(subdir jscomp/stdlib-412/stdlib_labels
(rule
(targets  stdLabels.ast)
 (deps (:inputs  stdLabels.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_labels/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -nolabels -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  stdLabels.d)
 (deps (:inputs  stdLabels.ast stdLabels.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-labels -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  stdLabels.iast)
 (deps (:inputs  stdLabels.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -nolabels -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  stdLabels.cmi stdLabels.cmti)
 (deps (:inputs  stdLabels.iast)  (include stdLabels.d) bsconfig.json(alias ../mel)(alias ../stdlib_modules/mel))
(action
  (run melc -I . -I .. -I ../stdlib_modules -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -nolabels  -w a -o stdLabels.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  stdLabels.cmj stdLabels.cmt stdLabels.mjs stdLabels.js)
 (deps (:inputs  stdLabels.ast)  stdLabels.cmi (include stdLabels.d) bsconfig.json(alias ../mel)(alias ../stdlib_modules/mel))
(action
  (run melc -bs-read-cmi -I . -I .. -I ../stdlib_modules -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -nolabels  -w a -bs-package-name @melange/runtime-stdlib-labels -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o stdLabels.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  listLabels.ast)
 (deps (:inputs  listLabels.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_labels/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -nolabels -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  listLabels.d)
 (deps (:inputs  listLabels.ast listLabels.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-labels -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  listLabels.iast)
 (deps (:inputs  listLabels.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -nolabels -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  listLabels.cmi listLabels.cmti)
 (deps (:inputs  listLabels.iast)  (include listLabels.d) bsconfig.json(alias ../mel)(alias ../stdlib_modules/mel))
(action
  (run melc -I . -I .. -I ../stdlib_modules -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -nolabels  -w a -o listLabels.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  listLabels.cmj listLabels.cmt listLabels.mjs listLabels.js)
 (deps (:inputs  listLabels.ast)  listLabels.cmi (include listLabels.d) bsconfig.json(alias ../mel)(alias ../stdlib_modules/mel))
(action
  (run melc -bs-read-cmi -I . -I .. -I ../stdlib_modules -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -nolabels  -w a -bs-package-name @melange/runtime-stdlib-labels -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o listLabels.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  moreLabels.ast)
 (deps (:inputs  moreLabels.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_labels/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -nolabels -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  moreLabels.d)
 (deps (:inputs  moreLabels.ast moreLabels.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-labels -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  moreLabels.iast)
 (deps (:inputs  moreLabels.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -nolabels -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  moreLabels.cmi moreLabels.cmti)
 (deps (:inputs  moreLabels.iast)  (include moreLabels.d) bsconfig.json(alias ../mel)(alias ../stdlib_modules/mel))
(action
  (run melc -I . -I .. -I ../stdlib_modules -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -nolabels  -w a -o moreLabels.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  moreLabels.cmj moreLabels.cmt moreLabels.mjs moreLabels.js)
 (deps (:inputs  moreLabels.ast)  moreLabels.cmi (include moreLabels.d) bsconfig.json(alias ../mel)(alias ../stdlib_modules/mel))
(action
  (run melc -bs-read-cmi -I . -I .. -I ../stdlib_modules -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -nolabels  -w a -bs-package-name @melange/runtime-stdlib-labels -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o moreLabels.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  arrayLabels.ast)
 (deps (:inputs  arrayLabels.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_labels/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -nolabels -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  arrayLabels.d)
 (deps (:inputs  arrayLabels.ast arrayLabels.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-labels -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  arrayLabels.iast)
 (deps (:inputs  arrayLabels.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -nolabels -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  arrayLabels.cmi arrayLabels.cmti)
 (deps (:inputs  arrayLabels.iast)  (include arrayLabels.d) bsconfig.json(alias ../mel)(alias ../stdlib_modules/mel))
(action
  (run melc -I . -I .. -I ../stdlib_modules -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -nolabels  -w a -o arrayLabels.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  arrayLabels.cmj arrayLabels.cmt arrayLabels.mjs arrayLabels.js)
 (deps (:inputs  arrayLabels.ast)  arrayLabels.cmi (include arrayLabels.d) bsconfig.json(alias ../mel)(alias ../stdlib_modules/mel))
(action
  (run melc -bs-read-cmi -I . -I .. -I ../stdlib_modules -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -nolabels  -w a -bs-package-name @melange/runtime-stdlib-labels -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o arrayLabels.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  bytesLabels.ast)
 (deps (:inputs  bytesLabels.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_labels/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -nolabels -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  bytesLabels.d)
 (deps (:inputs  bytesLabels.ast bytesLabels.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-labels -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  bytesLabels.iast)
 (deps (:inputs  bytesLabels.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -nolabels -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  bytesLabels.cmi bytesLabels.cmti)
 (deps (:inputs  bytesLabels.iast)  (include bytesLabels.d) bsconfig.json(alias ../mel)(alias ../stdlib_modules/mel))
(action
  (run melc -I . -I .. -I ../stdlib_modules -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -nolabels  -w a -o bytesLabels.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  bytesLabels.cmj bytesLabels.cmt bytesLabels.mjs bytesLabels.js)
 (deps (:inputs  bytesLabels.ast)  bytesLabels.cmi (include bytesLabels.d) bsconfig.json(alias ../mel)(alias ../stdlib_modules/mel))
(action
  (run melc -bs-read-cmi -I . -I .. -I ../stdlib_modules -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -nolabels  -w a -bs-package-name @melange/runtime-stdlib-labels -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o bytesLabels.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  stringLabels.ast)
 (deps (:inputs  stringLabels.ml)  ../../../.melange.eobjs/jscomp/stdlib-412/stdlib_labels/.bsbuild)
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -nolabels -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  stringLabels.d)
 (deps (:inputs  stringLabels.ast stringLabels.iast) )
(action (run meldep  -root-dir ../../.. -p @melange/runtime-stdlib-labels -proj-dir .  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  stringLabels.iast)
 (deps (:inputs  stringLabels.mli) )
(action
 (run melc  -w a -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -nolabels -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  stringLabels.cmi stringLabels.cmti)
 (deps (:inputs  stringLabels.iast)  (include stringLabels.d) bsconfig.json(alias ../mel)(alias ../stdlib_modules/mel))
(action
  (run melc -I . -I .. -I ../stdlib_modules -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -nolabels  -w a -o stringLabels.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  stringLabels.cmj stringLabels.cmt stringLabels.mjs stringLabels.js)
 (deps (:inputs  stringLabels.ast)  stringLabels.cmi (include stringLabels.d) bsconfig.json(alias ../mel)(alias ../stdlib_modules/mel))
(action
  (run melc -bs-read-cmi -I . -I .. -I ../stdlib_modules -no-keep-locs -no-alias-deps -bs-no-version-header -bs-no-check-div-by-zero -bs-cross-module-opt -nolabels  -w a -bs-package-name @melange/runtime-stdlib-labels -bs-package-output commonjs:.:.js -bs-package-output es6:.:.mjs -o stringLabels.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 
(alias (name mel)(deps  stringLabels.mjs stringLabels.js bytesLabels.mjs bytesLabels.js arrayLabels.mjs arrayLabels.js moreLabels.mjs moreLabels.js listLabels.mjs listLabels.js stdLabels.mjs stdLabels.js)
(enabled_if %{bin-available:melc})))

(subdir .melange.eobjs/jscomp/stdlib-412/stdlib_labels
(rule (write-file .bsbuild NgpTdGRMYWJlbHMKTGlzdExhYmVscwpNb3JlTGFiZWxzCkFycmF5TGFiZWxzCkJ5dGVzTGFiZWxzClN0cmluZ0xhYmVscwouCQoxAAAAAAAACjAK))
)


(subdir .melange.eobjs
(rule (write-file .bsbuild MAowCg==))
(rule (write-file .sourcedirs.json "{ \"dirs\" : [ \"/Users/anmonteiro/projects/melange/jscomp/runtime/bs_stdlib_mini\" , \"/Users/anmonteiro/projects/melange/jscomp/runtime\" , \"/Users/anmonteiro/projects/melange/jscomp/others\" , \"/Users/anmonteiro/projects/melange/jscomp/stdlib-412\" , \"/Users/anmonteiro/projects/melange/jscomp/stdlib-412/stdlib_modules\" , \"/Users/anmonteiro/projects/melange/jscomp/stdlib-412/stdlib_labels\" ] , \"pkgs\" : [] , \"generated\" : [] }")) 
)

(data_only_dirs node_modules .melange.eobjs)
(alias (name mel) (deps .melange.eobjs/.sourcedirs.json (alias jscomp/runtime/mel)(alias jscomp/others/mel)(alias jscomp/stdlib-412/mel)(alias jscomp/stdlib-412/stdlib_modules/mel)(alias jscomp/stdlib-412/stdlib_labels/mel)))
;;;;BSB GENERATED: NO EDIT}

(executable
 (public_name melc)
 (package melange)
 (flags :standard -open Melange_compiler_libs)
 (libraries js_parser ext common melange_compiler_libs core cmdliner)
 (modules melc melc_cli)
 (preprocess
  (action
   (run cppo "%{env:CPPO_FLAGS=}" %{input-file}))))

(executable
 (public_name melppx)
 (package melange)
 (modules melppx)
 (libraries melange.ppx ppxlib))

(executable
 (name jsoo_main)
 (modules jsoo_main jsoo_common)
 (libraries core melange.ppx reason-react-ppx reason)
 (modes js))

(install
 (section bin)
 (package melange-playground)
 (files jsoo_main.bc.js melange-cmijs.js))

(rule
 (deps
  (:belt-cms
   (glob_files ../jscomp/others/.belt.objs/melange/*.cm{i,j}))
  (:runtime-cms
   (glob_files ../jscomp/runtime/.js.objs/melange/*.cm{i,j}))
  (:stdlib-cms
   (glob_files ../jscomp/stdlib/.stdlib.objs/melange/*.cm{i,j}))
  (:dom-cms
   (glob_files ../jscomp/others/.dom.objs/melange/*.cm{i,j}))
  (:node-cms
   (glob_files ../jscomp/others/.node.objs/melange/*.cm{i,j})))
 (target melange-cmijs.js)
 (action
  (progn
   (run
    js_of_ocaml
    build-fs
    -o
    %{target}
    %{belt-cms}
    %{runtime-cms}
    %{stdlib-cms}
    %{dom-cms}
    %{node-cms}))))

(alias
 (name playground-cmijs)
 (deps melange-cmijs.js))

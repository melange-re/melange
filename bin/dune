(executable
 (public_name melc)
 (package melange)
 (flags :standard -open Melange_compiler_libs)
 (libraries js_parser ext common melange_compiler_libs core cmdliner)
 (modules melc melc_cli)
 (preprocess
  (action
   (run cppo "%{env:CPPO_FLAGS=}" %{input-file}))))

(executable
 (public_name melppx)
 (package melange)
 (modules melppx)
 (libraries melange.ppx ppxlib))

(executable
 (name jsoo_main)
 (modules jsoo_main jsoo_common)
 (libraries core melange.ppx reason-react-ppx reason)
 (modes js))

(install
 (section bin)
 (package melange-playground)
 (files jsoo_main.bc.js belt-cmijs.js runtime-cmijs.js stdlib-cmijs.js))

(rule
 (deps
  %{bin:js_of_ocaml}
  (package melange)
  (:some-cmi %{lib:melange:belt/melange/belt.cmi}))
 (target belt-cmijs.js)
 (action
  (bash
   "find $(dirname %{some-cmi}) -name \"*.cmi\" -or -name \"*.cmj\" | xargs js_of_ocaml build-fs -o %{target}")))

(rule
 (deps
  %{bin:js_of_ocaml}
  (package melange)
  (:some-cmi %{lib:melange:js/melange/js.cmi}))
 (target runtime-cmijs.js)
 (action
  (bash
   "find $(dirname %{some-cmi}) -name \"*.cmi\" -or -name \"*.cmj\" | xargs js_of_ocaml build-fs -o %{target}")))

(rule
 (deps
  %{bin:js_of_ocaml}
  (package melange)
  (:some-cmi %{lib:melange:melange/stdlib.cmi}))
 (target stdlib-cmijs.js)
 (action
  (bash
   "find $(dirname %{some-cmi}) -name \"*.cmi\" -or -name \"*.cmj\" | xargs js_of_ocaml build-fs -o %{target}")))

(rule
 (alias playground-cmijs)
 (deps belt-cmijs.js runtime-cmijs.js stdlib-cmijs.js)
 (action
  (echo "cmijs generated")))
